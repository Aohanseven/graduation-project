2018-04-08 21:36:10 [scrapy.utils.log] INFO: Scrapy 1.5.0 started (bot: ArticleSpider)
2018-04-08 21:36:10 [scrapy.utils.log] INFO: Versions: lxml 4.2.1.0, libxml2 2.9.8, cssselect 1.0.3, parsel 1.4.0, w3lib 1.19.0, Twisted 17.9.0, Python 3.5.2 (default, Nov 23 2017, 16:37:01) - [GCC 5.4.0 20160609], pyOpenSSL 17.5.0 (OpenSSL 1.1.0h  27 Mar 2018), cryptography 2.2.2, Platform Linux-4.13.0-37-generic-x86_64-with-Ubuntu-16.04-xenial
2018-04-08 21:36:10 [scrapy.crawler] INFO: Overridden settings: {'SPIDER_MODULES': ['ArticleSpider.spiders'], 'DUPEFILTER_CLASS': 'scrapy_redis.dupefilter.RFPDupeFilter', 'BOT_NAME': 'ArticleSpider', 'LOG_FILE': 'logs/ArticleSpider/jobbole/ca30eb043b3111e8928f9cd21ef8f9c5.log', 'SCHEDULER': 'scrapy_redis.scheduler.Scheduler', 'DOWNLOAD_DELAY': 5, 'NEWSPIDER_MODULE': 'ArticleSpider.spiders'}
2018-04-08 21:36:10 [scrapy.middleware] INFO: Enabled extensions:
['scrapy.extensions.telnet.TelnetConsole',
 'scrapy.extensions.memusage.MemoryUsage',
 'scrapy.extensions.logstats.LogStats',
 'scrapy.extensions.corestats.CoreStats']
2018-04-08 21:36:10 [scrapy.middleware] INFO: Enabled downloader middlewares:
['scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware',
 'scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware',
 'scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware',
 'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware',
 'scrapy.downloadermiddlewares.retry.RetryMiddleware',
 'scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware',
 'scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware',
 'scrapy.downloadermiddlewares.redirect.RedirectMiddleware',
 'scrapy.downloadermiddlewares.cookies.CookiesMiddleware',
 'scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware',
 'scrapy.downloadermiddlewares.stats.DownloaderStats']
2018-04-08 21:36:10 [scrapy.middleware] INFO: Enabled spider middlewares:
['scrapy.spidermiddlewares.httperror.HttpErrorMiddleware',
 'scrapy.spidermiddlewares.offsite.OffsiteMiddleware',
 'scrapy.spidermiddlewares.referer.RefererMiddleware',
 'scrapy.spidermiddlewares.urllength.UrlLengthMiddleware',
 'scrapy.spidermiddlewares.depth.DepthMiddleware']
2018-04-08 21:36:10 [py.warnings] WARNING: /home/tim/python3-text/graduation-project/ArticleSpider/ArticleSpider/pipelines.py:18: ScrapyDeprecationWarning: Module `scrapy.log` has been deprecated, Scrapy now relies on the builtin Python library for logging. Read the updated logging entry in the documentation to learn more.
  from scrapy import log

2018-04-08 21:36:10 [scrapy.middleware] INFO: Enabled item pipelines:
['ArticleSpider.pipelines.ElasticsearchPipeline']
2018-04-08 21:36:10 [scrapy.core.engine] INFO: Spider opened
2018-04-08 21:36:10 [jobbole] DEBUG: Resuming crawl (8 requests scheduled)
2018-04-08 21:36:10 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2018-04-08 21:36:10 [scrapy.extensions.telnet] DEBUG: Telnet console listening on 127.0.0.1:6023
2018-04-08 21:36:10 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113710/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:10 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:10 [urllib3.connectionpool] DEBUG: Starting new HTTP connection (1): localhost
2018-04-08 21:36:10 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 495
2018-04-08 21:36:10 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.005s]
2018-04-08 21:36:10 [elasticsearch] DEBUG: > 100 倍价值的工程师
2018-04-08 21:36:10 [elasticsearch] DEBUG: < {"tokens":[{"token":"100","start_offset":0,"end_offset":3,"type":"ARABIC","position":0},{"token":"倍","start_offset":4,"end_offset":5,"type":"CN_WORD","position":1},{"token":"价值","start_offset":5,"end_offset":7,"type":"CN_WORD","position":2},{"token":"工程师","start_offset":8,"end_offset":11,"type":"CN_WORD","position":3},{"token":"工程","start_offset":8,"end_offset":10,"type":"CN_WORD","position":4},{"token":"师","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":5}]}
2018-04-08 21:36:10 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:10 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 496
2018-04-08 21:36:10 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2018-04-08 21:36:10 [elasticsearch] DEBUG: > 职场,,程序员,职场
2018-04-08 21:36:10 [elasticsearch] DEBUG: < {"tokens":[{"token":"职场","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"程序员","start_offset":4,"end_offset":7,"type":"CN_WORD","position":1},{"token":"程序","start_offset":4,"end_offset":6,"type":"CN_WORD","position":2},{"token":"序","start_offset":5,"end_offset":6,"type":"CN_WORD","position":3},{"token":"员","start_offset":6,"end_offset":7,"type":"CN_CHAR","position":4},{"token":"职场","start_offset":8,"end_offset":10,"type":"CN_WORD","position":5}]}
2018-04-08 21:36:10 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:10 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/c5b87c22be1fbc4b5d456243c449d9bb HTTP/1.1" 201 174
2018-04-08 21:36:10 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/c5b87c22be1fbc4b5d456243c449d9bb [status:201 request:0.023s]
2018-04-08 21:36:10 [elasticsearch] DEBUG: > {"praise_nums": 2, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/11/90129c6662feee86738bd3663ce83108.png"], "create_date": "2018-04-08", "tags": "职场,,程序员,职场", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文由 伯乐在线 - 精算狗 翻译。未经许可，禁止转载！英文出处：zef.me。欢迎加入翻译组。【导读】：工程师如何花同样的时间比其他人生产的价值多100倍：知道自己在做什么，不需要别人过多干预；不断对自己发出挑战，使工作更有效；一个人是无法成为100 倍价值工程师的，需要带动周围人一起提升生产力。\n\n几个月前一个新工程师加入了我们的团队。和往常一样，我花了些时间和他相处，来更好地了解他是哪种类型的人、他的驱动力是什么。我们经常讨论过去的经历，但更重要的是：未来的目标。结果发现，他有个有趣的目标：\n「我想成为世界上最好的程序员」\n野心勃勃。我喜欢。\n但是，这让我思考了一个问题：成为“最好的程序员”实际上意味着什么。怎么衡量“好”？怎么知道他（她）是“最好的程序员”？\n这让我想起了上世纪 60 年代，Sackman、 Erikson 和 Grant 撰写的论文《Exploratory Experimental Studies Comparing Online and Offline Programming Performance》。该研究的目的是调查程序员在编程的多个方面的表现，无论他有电脑——那时是主机——的交互权限还是用“纸和笔”高效工作。尽管这个问题的答案几乎要过时了——谁还在纸上编程啊——仍然有几点发现现在仍然适用：\n研究对象中，\n\n最好和最差的程序员完成一个编程练习所用的编程时间有 20 倍的差距。\n调试时间有 25 倍的差距。\n所写程序大小有 5 倍差距。\n程序执行速度有 10 倍差距。\n\n研究对象都有几年的经验，事实上经验年数对这些数字似乎没有显著的影响。总之，差距还是挺显著的，不是吗？\n10 倍价值的程序员\n“10 倍价值程序员”这个概念起源于这篇论文。这个概念吸引了人们数十年，而且及其有争议。直接 Google 一下这个英文短语（10x programmer）。\n公平来讲，Sackman 等人的数字一定被夸大了，很多人都对他们的方法提出了质疑。但是几乎没有人反对在糟糕的程序员与优秀的程序员之间有着显著差距。甚至据传，每个人都认识一个人，他能在极短时间内写出惊人的软件。\n谁在乎？\n“所以……谁在乎？”你可能会问。为什么 10 倍价值程序员这么重要呢？\n一方面来说，10 倍价值程序员至少表面上对雇主来说是桩好买卖。理论上，雇主可以：\n\n1.炒掉 90% 的员工\n2.剩余 10% 雇佣 10 倍价值程序员\n3.付给他们大约 2 倍工资\n4.盈利\n\n简单，对吧？\n然而现实会有点不一样。首先，这假设你能招到一个 10 倍价值程序员的团队……祝你好运。由于你很可能做不到这一点，你得把他们整合进现存的一倍价值程序员团队中去。结果发现，团队中有一个比你更更更高产的程序员并不是那么鼓舞人心。\n但是实际上，我不想太过详述 10 倍价值程序员这个概念。因为在我看来，有这么一群不同的“人种”，他们的影响力远超过 10 倍价值程序员。\n是谁呢？\n我们先来仔细研究一下“程序员”这个概念。在 Sackman 的研究中，他们完全只关注编程能力。练习是高度与算法相关的，像“假定某网格代表一个迷宫，编写一个程序找到通路”这样的类型。好“程序员”擅长这种类型的工作：输入编程挑战，输出代码。每个程序员都有自己的任务列，并且在逐个完成。\n输入代码。\n如果这是你喜欢的工作，我肯定你能找到如此工作的地方。\n然而，在我曾经工作的任何地方，实际编程都不是这样的。实话实说——谢天谢地。我觉得长期这样编程会无聊透顶的。\n我觉得更有趣的角色是工程师的角色。工程师把想法变成实实在在的产品，他们也因此有更广阔的视野。他们手头有大量工具可以完成工作，当然编程也是工具之一。\n但是实话实说，并且我想我也可以在此说，我们真的超级不擅长在那些被过分吹嘘的技能。\n统计量不会说谎：\n（a）行业均值：“每 1000 行代码中大约有 15 到 50 处错误。”他进一步声明这对那些背后有一定程度结构化编程、可能混有一些代码技巧的代码具有代表性。\n（b）微软应用：“内部测试时每 1000 行代码中大约有 10 到 20 处错误，发布产品中每 1000 行代码中大约有 0.5 处错误（Moore 1992）。”他将其归功于代码阅读技巧和独立检测的组合（在其著作的另一章中有进一步讨论）。\n（c）“Harlan Mills 开创了名为 ‘cleanroom development’ 的技巧，能实现在内部测试时每 1000 行代码有 3 处错误，在发布产品中每 1000 行代码有 0.1 处错误（Cobb 和 Mills 1990）。几个项目——例如飞船软件——利用了格式开发方法系统、同行审查和统计测试实现了在 500,000 行代码中有 0 处错误的水平。\n要我说——我们应该尽力避免编程，使世界免受每次在集成开发环境（IDE）中按下某键产生的所有 bug 的侵害。\n所以没错，10 倍价值程序员是个好主意，但是我要把门槛设置得高一点。到 2018 年了，世界已经变了。\n…………\n100 倍价值工程师\n我喜欢延伸目标。它们经常引导我们后退一步，并带来思维的巨大转变。这个目标也一样。如果我们想成为 100 倍价值工程师——其影响力是老一倍价值工程师的 100 倍，该怎么实现呢？\n做到自己高产并不够——当然单单有编程天赋就可能实现 10 倍价值，但达到 100 倍价值就不可能了。为了拥有有 100 倍的影响力，你得让团队和组织的生产率均大幅提高，并最终领导其他人用同样的工作方式。\n尽管 100 倍价值听起来很极端，我在职业生涯中仍然和许多我认为有“100 倍价值的观念模式”、独特的思考、说话和行动方式的人合作过。\n可能让某些人吃惊的是，这些与编程能力、科技和编程语言没有任何关系。常见的口号是：“为什么我们还在用 Java？如果我们能只用 Scala、Clojure、Node，&lt;&lt;在此输入今日便好 insert flavor of the day here&gt;&gt;就会更高产！”现实是，一种不同的编程语言可能最多让你达到 1.5 倍到 2 倍。这与 100 倍价值相比简直是小巫见大巫。100 倍价值是完全不同的游戏。\n所以，到底什么是“100 倍价值的的观念模式”？让我们一起来讨论两个方面。\n1. Ownership 所有权\n100 倍价值工程师掌控他们所做的事。他们知道为什么这么做、怎么做、所做的是什么。在《Extreme Ownership》这本书中，两位前海豹突击队队员解释了他们的极端所有权（extreme ownership）概念。这个概念的核心是，当我说“拥有某物”时到底意味着什么。这意味着：接受你要对你所做的任何事情负责。\n最重要的是这意味着：不能指别人。这不意味着所有事情都在你的控制之下，却意味着：当事情不可避免地出错时，你要对你如何反应负责。这意味着：你要负责预期可能发生的事情，并做好应急措施。这意味着你要从错误中学习，甚至从中汲取价值。掌控你所做事情的各个方面。\n要得到这种程度的所有权，我只知道一个方法：挑战。挑战你和你的团队被要求做的任何事情，这样你能理解并掌控每一个决定。\n2. Challenging the status quo 挑战现状\n100 倍价值工程师在三个维度进行挑战：\n1.做什么（What）？\n这主要是关于范围的：我们在开发什么？是否仔细研究过？要求是否明确？我们确定所有这些都是重要的并且需要（马上）完成吗？\n2.怎么做（How）？\n这是关于在怎样机智地执行某事。有可以得到同样结果的更轻松方法吗？这也是关于过程的：我们怎么样得到想要的结果，以及怎样提高？\n3.为什么（Why）？\n这是关于业务环境的、关于完全理解为什么需要开发某个特性并检查产品经理的方法是否是满足用户需求的正确方法。\n来逐个看看更多细节。\nWhat?  做什么？\n更快地提供某产品的唯一最好方法是：缩减范围。它需要拥有的特性是什么。\n可以在此应用我的“5 个真的吗？”技巧：\n产品经理：我们需要有所有这 10 个特性\n100 倍价值工程师：真的吗？\n产品经理：嗯。\n100 倍价值工程师：真的吗？\n产品经理：好吧，好吧，可能不需要第七个特性。但是剩下的都要。\n100 倍价值工程师：真的吗？\n产品经理：嗯，是的，我是这么想的……让我跟客户确认一下。\n好吧，他们可能需要第四个和第五个特性，但是我们可以之后再做这两个。剩下的都是必须的。\n100 倍价值工程师：真的吗？\n产品经理：是的。\n这可能听起来像个玩笑，但是产品经理常常会拿一张长长的必需特性清单出现。然后经过几小时、几天、有时是几个月的谈判后，你得到了一张几乎只有原清单四分之一的清单。这是自然的，想出要加上的新特性要比移除特性更容易。\n另一个在将范围降低到较低水平的方法，是使用“帕累托法则”，二八法则。维基百科：\n帕累托法则（也叫二八法则，关键少数法则，或者稀疏因子法则）表明，对很多事件来说，大约 80% 的影响来自于 20% 的原因。\n该法则有很多应用，软件开发就是其一。往往有很多种实现某特性的方法，使用极少的精力（比如说 20%）就能带来大多数收益（例如 80%）。这点吸引人，不仅仅是因为更少的工作量，还因为你能更经济地彻底检查特性，并且只在这些特性有价值、使用过后才进行完全开发。\nHow?  怎么做？\n既然需要开发的清单已经减少到一小部分了，仍然要通过挑战特性的实现方法来获得机动空间和好处。一般来说，实现某特性有很多方法。一旦团队想出一种方法，很多团队就满意了。100 倍价值工程师总会进一步寻找替代方法，根据各自的优缺点评估所有选择。\n“怎么做”也会被技术债务影响。经常有“变态的”方法来实现某些快、脏的特性，“合适的”方法来首先还清技术债务，再干净地实现特性。什么是最好的方法？100 倍价值工程师认识到不只有一个正确答案，并且这取决于不同情况和累积技术债务的费用。一个 100 倍价值工程师能在不同的情景中作出正确抉择，能在合适的时机和产品谈判来降低技术债务。\n“怎么做”的另一个方面是过程。我对 Scrum 很喜欢的一点是，它能有效设定一个基础，如果用得合适可以鼓励 100 倍价值的行为：\n•改进是讨论和挑战做什么、怎么做和为什么的好平台。产品所有者提出要开发的新特性，开发团队挑战做什么和为什么，来得到全面的背景，并相互挑战如何实现特性。\n•Plannings 针对下一步冲刺（sprint）做什么的计划，计划也是通往“辉煌和头脑”的手段：记起到底需要做什么，并且计划团队如何合作来交付产品\n•Retrospectives 回顾是团队提升的方法。在一次冲刺循环中，有些事情出错了，有些事情进展不顺利。回顾是 100 倍价值工程师挑战团队来提升、下次做得更好的时刻。回顾也能练习所有权。100 倍价值工程师不抱怨低产，不指向自己以外的其他人。\nWhy?  为什么？\n上周我和一个工程师聊了聊，他刚刚发现自己花了整整 3 个月时间实现某特性，后来有发现对用户来说同样的价值本可以在 3 日内实现。显然不会是同一种功能，但是实现的目标是一样的。\n这种事情怎么会发生呢？\n除非工程师退后一步、扩大视野、挑战为什么，这种事情就会发生。为什么要开发这个特性？用户想要实现什么？他们的需求是什么？产品经理往往会提出非常具体的特性要求，偶尔具体化程度会比较低。他们的出发点是好的。然而更可能的情况是：产品经理也是人，也会遗漏。此外，风险在于工程师不再挑战更基础的问题：为什么我们要这么做？不是还有用其他更少的精力实现同样结果的方法吗？\n但是，等等\n说起来容易做起来难。做起来也应该难，不是什么人都应该能跻身 100 倍价值工程师。然而，我们都可以渴望变得更好，并找到相应的方法。\n因此，看看 100 倍价值工程师的技能集合是值得的。你会注意到，这与 10 倍价值程序员是非常非常不同的。\n•沟通——这点几乎明显得不用提了，但是它是重要的一点。100 倍价值工程师有优秀的沟通技巧。沟通是拥有 100 倍影响力的关键部分。\n•创造力——显然这在 10 倍价值程序员中是常见的，但是所要求的创造力不是关于算法的，也不是关于灵巧的类继承结构（class inheritance structures）的，而是关于想出更有效的方法来实现目标。\n•同理心——在“挑战所有”的长篇大论中隐藏着“生产力挑战”。那么我这么说意味着什么？让我用我的大儿子做例子来解释一下。他 4 岁了。4 岁小孩最喜欢的问题是什么？“为什么！？”这意味着我儿子是个 100 倍价值工程师吗？不。为什么不呢？因为他总是问“为什么？”，无论时机正确与否，无论有没有意义，无论他是不是让他的父母想自杀。拥有知道该挑战什么、怎么挑战和何时挑战的同理心也是 100 倍价值工程师的重要技能。\n•谈判——好主意被高估了。人人都有好主意，但几乎没人真正实现这些想法。你知道需要实现一个想法，实现它的一个重要因素就是谈判——与其他开发人员谈判，与产品经理谈判，与其他利益相关者谈判。解释为什么某个主意是个好主意，以及为什么需要时间执行它们。100 倍价值工程师知道怎么做。所以当他们在场时，所有事情都似乎有可能实现。\n•技术——这是清单上的最后一点，但依然重要。虽然大多数提到的技巧都是“软实力”，但这并不意味着 100 倍价值工程师不需要技术。事实上，他（她）拥有领先的技术天赋是先决条件，原因有二：（1）挑战技术层面上的事情会产生巨大收益，也因此要求对技术有深层次的理解；（2）理念是重要的，如果 100 倍价值工程师没有高技术，就不会被同辈接受。你得是“我们的一员”。\n…………\n几个月后，“我想成为世界上最好的程序员”先生作为程序员工作得非常顺利。他有天赋、努力工作、高产而且非常聪明。他会成为世界上最好的程序员吗？我不知道。\n但是私下里，我希望这不重要。\n我希望某一天，不是现在，但是可能是几年后，他会想做更多事。那时他会调整他的理想，不仅仅要擅长这个叫“编程”狭窄领域，而且渴望拥有 100 倍价值工程师的影响力。\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         5 收藏\n\n                     5 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：精算狗\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            简介还没来得及写 :）        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  22 ·           \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "title": "100 倍价值的工程师", "suggest": [{"input": ["工程", "工程师", "100", "价值"], "weight": 10}, {"input": ["职场", "程序", "程序员"], "weight": 7}], "fav_nums": 5, "comment_nums": 2, "url": "http://blog.jobbole.com/113710/"}
2018-04-08 21:36:10 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"c5b87c22be1fbc4b5d456243c449d9bb","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:10 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113710/>
{'comment_nums': 2,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文由 <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/chenyahui">精算狗</a> '
            '翻译。未经许可，禁止转载！<br>英文出处：<a target="_blank" '
            'href="https://zef.me/the-100x-engineer-6d50a690a866">zef.me</a>。欢迎加入<a '
            'target="_blank" '
            'href="http://group.jobbole.com/category/feedback/trans-team/">翻译组</a>。</div><p>【导读】：工程师如何花同样的时间比其他人生产的价值多100倍：知道自己在做什么，不需要别人过多干预；不断对自己发出挑战，使工作更有效；一个人是无法成为100\xa0'
            '倍价值工程师的，需要带动周围人一起提升生产力。</p>\n'
            '<hr>\n'
            '<p>几个月前一个新工程师加入了我们的团队。和往常一样，我花了些时间和他相处，来更好地了解他是哪种类型的人、他的驱动力是什么。我们经常讨论过去的经历，但更重要的是：未来的目标。结果发现，他有个有趣的目标：</p>\n'
            '<p style="text-align: '
            'center;"><em><strong>「我想成为世界上最好的程序员」</strong></em></p>\n'
            '<p>野心勃勃。我喜欢。</p>\n'
            '<p>但是，这让我思考了一个问题：成为“最好的程序员”实际上意味着什么。怎么衡量“好”？怎么知道他（她）是“<em>最好的程序员</em>”？</p>\n'
            '<p>这让我想起了上世纪 60 年代，Sackman、 Erikson 和 Grant 撰写的论文《Exploratory '
            'Experimental Studies Comparing Online and Offline Programming '
            'Performance》。该研究的目的是调查程序员在编程的多个方面的表现，无论他有电脑——那时是主机——的交互权限还是用“纸和笔”高效工作。尽管这个问题的答案几乎要过时了——谁还在纸上编程啊——仍然有几点发现现在仍然适用：</p>\n'
            '<p>研究对象中，</p>\n'
            '<ul>\n'
            '<li>最好和最差的程序员完成一个编程练习所用的编程时间有 <strong>20 倍</strong>的差距。</li>\n'
            '<li>调试时间有<strong> 25 倍</strong>的差距。</li>\n'
            '<li>所写程序大小有<strong> 5 倍</strong>差距。</li>\n'
            '<li>程序执行速度有 <strong>10 倍</strong>差距。</li>\n'
            '</ul>\n'
            '<p>研究对象都有几年的经验，事实上经验年数对这些数字似乎没有显著的影响。总之，差距还是挺显著的，不是吗？</p>\n'
            '<h3>10 倍价值的程序员</h3>\n'
            '<p>“10 倍价值程序员”这个概念起源于这篇论文。这个概念吸引了人们数十年，而且及其有争议。<a '
            'href="https://www.google.pl/search?q=10x+programmer&amp;ie=UTF-8&amp;oe=UTF-8&amp;hl=en-us&amp;client=safari">直接 '
            'Google 一下这个英文短语</a>（10x programmer）。</p>\n'
            '<p>公平来讲，Sackman '
            '等人的数字一定被夸大了，很多人都对他们的方法提出了质疑。但是几乎没有人反对在糟糕的程序员与优秀的程序员之间有着显著差距。甚至据传，每个人都认识一个人，他能在极短时间内写出惊人的软件。</p>\n'
            '<h3>谁在乎？</h3>\n'
            '<p>“所以……谁在乎？”你可能会问。为什么 10 倍价值程序员这么重要呢？</p>\n'
            '<p>一方面来说，10 倍价值程序员至少表面上对雇主来说是桩好买卖。理论上，雇主可以：</p>\n'
            '<ul>\n'
            '<li>1.炒掉 90% 的员工</li>\n'
            '<li>2.剩余 10% 雇佣 10 倍价值程序员</li>\n'
            '<li>3.付给他们大约 2 倍工资</li>\n'
            '<li>4.盈利</li>\n'
            '</ul>\n'
            '<p>简单，对吧？</p>\n'
            '<p>然而现实会有点不一样。首先，这假设你能招到一个 10 '
            '倍价值程序员的团队……祝你好运。由于你很可能做不到这一点，你得把他们整合进现存的一倍价值程序员团队中去。结果发现，团队中有一个比你<strong>更更更</strong>高产的程序员并不是那么鼓舞人心。</p>\n'
            '<p>但是实际上，我不想太过详述 10 倍价值程序员这个概念。因为在我看来，有这么一群不同的“人种”，他们的影响力远超过 10 '
            '倍价值程序员。</p>\n'
            '<p>是谁呢？</p>\n'
            '<p>我们先来仔细研究一下“程序员”这个概念。在 Sackman '
            '的研究中，他们完全只关注编程能力。练习是高度与算法相关的，像“假定某网格代表一个迷宫，编写一个程序找到通路”这样的类型。好“程序员”擅长这种类型的工作：输入编程挑战，输出代码。每个程序员都有自己的任务列，并且在逐个完成。</p>\n'
            '<p>输入代码。</p>\n'
            '<p>如果这是你喜欢的工作，我肯定你能找到如此工作的地方。</p>\n'
            '<p>然而，在我曾经工作的任何地方，实际编程都不是这样的。实话实说——谢天谢地。我觉得长期这样编程会无聊透顶的。</p>\n'
            '<p>我觉得更有趣的角色是<strong>工程师</strong>的角色。工程师把想法变成实实在在的产品，他们也因此有更广阔的视野。他们手头有大量工具可以完成工作，当然编程也是工具之一。</p>\n'
            '<p>但是实话实说，并且我想我也可以在此说，我们真的超级不擅长在那些被过分吹嘘的技能。</p>\n'
            '<p><a '
            'href="https://www.mayerdan.com/ruby/2012/11/11/bugs-per-line-of-code-ratio">统计量不会说谎：</a></p>\n'
            '<blockquote><p>（a）行业均值：“每 1000 行代码中大约有 15 到 50 '
            '处错误。”他进一步声明这对那些背后有一定程度结构化编程、可能混有一些代码技巧的代码具有代表性。</p></blockquote>\n'
            '<blockquote><p>（b）微软应用：“内部测试时每 1000 行代码中大约有 10 到 20 处错误，发布产品中每 '
            '1000 行代码中大约有 0.5 处错误（Moore '
            '1992）。”他将其归功于代码阅读技巧和独立检测的组合（在其著作的另一章中有进一步讨论）。</p></blockquote>\n'
            '<blockquote><p>（c）“Harlan Mills 开创了名为 ‘cleanroom development’ '
            '的技巧，能实现在内部测试时每 1000 行代码有 3 处错误，在发布产品中每 1000 行代码有 0.1 处错误（Cobb 和 '
            'Mills 1990）。几个项目——例如飞船软件——利用了格式开发方法系统、同行审查和统计测试实现了在 500,000 行代码中有 '
            '0 处错误的水平。</p></blockquote>\n'
            '<p>要我说——我们应该尽力避免编程，使世界免受每次在集成开发环境（IDE）中按下某键产生的所有 bug 的侵害。</p>\n'
            '<p>所以没错，10 倍价值程序员是个好主意，但是我要把门槛设置得高一点。到 2018 年了，世界已经变了。</p>\n'
            '<p style="text-align: center;">…………</p>\n'
            '<h3>100 倍价值工程师</h3>\n'
            '<p>我喜欢延伸目标。它们经常引导我们后退一步，并带来思维的巨大转变。这个目标也一样。如果我们想成为 100 '
            '倍价值工程师——其影响力是老一倍价值工程师的 100 倍，该怎么实现呢？</p>\n'
            '<p><b>做到自己</b>高产并不够——当然单单有编程天赋就可能实现 10 倍价值，但达到 100 '
            '倍价值就不可能了。<strong>为了拥有有 100 '
            '倍的影响力，你得让团队和组织的生产率均大幅提高，并最终领导其他人用同样的工作方式。</strong></p>\n'
            '<p>尽管 100 倍价值听起来很极端，我在职业生涯中仍然和许多我认为有“100 '
            '倍价值的观念模式”、独特的思考、说话和行动方式的人合作过。</p>\n'
            '<p>可能让某些人吃惊的是，这些与编程能力、科技和编程语言没有任何关系。常见的口号是：“为什么我们还在用 Java？如果我们能只用 '
            'Scala、Clojure、Node，&lt;&lt;在此输入今日便好\xa0insert flavor of the day '
            'here&gt;&gt;就会更高产！”现实是，一种不同的编程语言可能最多让你达到 1.5 倍到 2 倍。这与 100 '
            '倍价值相比简直是小巫见大巫。100 倍价值是完全不同的游戏。</p>\n'
            '<p>所以，到底什么是“100 倍价值的的观念模式”？让我们一起来讨论两个方面。</p>\n'
            '<p><strong>1. Ownership 所有权</strong></p>\n'
            '<p>100 倍价值工程师掌控他们所做的事。他们知道为什么这么做、怎么做、所做的是什么。在<a '
            'href="https://www.amazon.com/Extreme-Ownership-U-S-Navy-SEALs-ebook/dp/B00VE4Y0Z2">《Extreme '
            'Ownership》</a>这本书中，两位前海豹突击队队员解释了他们的极端所有权（extreme '
            'ownership）概念。这个概念的核心是，当我说“拥有某物”时到底意味着什么。这意味着：接受你要对你所做的任何事情负责。</p>\n'
            '<p>最重要的是这意味着：<strong>不能指别人</strong>。这不意味着所有事情都在你的控制之下，却意味着：当事情不可避免地出错时，你要对你如何反应负责。这意味着：你要负责预期可能发生的事情，并做好应急措施。这意味着你要从错误中学习，甚至从中汲取价值。掌控你所做事情的各个方面。</p>\n'
            '<p>要得到这种程度的所有权，我只知道一个方法：挑战。挑战你和<strong>你的团队</strong>被要求做的任何事情，这样你能理解并掌控每一个决定。</p>\n'
            '<p><strong>2. Challenging the status quo 挑战现状</strong></p>\n'
            '<p>100 倍价值工程师在三个维度进行挑战：</p>\n'
            '<p>1.<em>做什么（What）？</em></p>\n'
            '<p>这主要是关于范围的：我们在开发什么？是否仔细研究过？要求是否明确？我们确定所有这些都是重要的并且需要（马上）完成吗？</p>\n'
            '<p>2.<em>怎么做（How）？</em></p>\n'
            '<p>这是关于在怎样机智地执行某事。有可以得到同样结果的更轻松方法吗？这也是关于过程的：我们怎么样得到想要的结果，以及怎样提高？</p>\n'
            '<p>3.<em>为什么（Why）？</em></p>\n'
            '<p>这是关于业务环境的、关于完全理解为什么需要开发某个特性并检查产品经理的方法是否是满足用户需求的正确方法。</p>\n'
            '<p>来逐个看看更多细节。</p>\n'
            '<p><strong>What? \xa0做什么？</strong></p>\n'
            '<p>更快地提供某产品的唯一最好方法是：缩减范围。它<em>需要</em>拥有的特性是什么。</p>\n'
            '<p>可以在此应用我的“5 个真的吗？”技巧：</p>\n'
            '<blockquote><p>产品经理：我们需要有所有这 10 个特性</p>\n'
            '<p>100 倍价值工程师：真的吗？</p>\n'
            '<p>产品经理：嗯。</p>\n'
            '<p>100 倍价值工程师：真的吗？</p>\n'
            '<p>产品经理：好吧，好吧，可能不需要第七个特性。但是剩下的都要。</p>\n'
            '<p>100 倍价值工程师：真的吗？</p>\n'
            '<p>产品经理：嗯，是的，我是这么想的……让我跟客户确认一下。</p>\n'
            '<p>好吧，他们可能需要第四个和第五个特性，但是我们可以之后再做这两个。剩下的都是必须的。</p>\n'
            '<p>100 倍价值工程师：真的吗？</p>\n'
            '<p>产品经理：是的。</p></blockquote>\n'
            '<p>这可能听起来像个玩笑，但是产品经理常常会拿一张长长的必需特性清单出现。然后经过几小时、几天、有时是几个月的谈判后，你得到了一张几乎只有原清单四分之一的清单。这是自然的，想出要加上的新特性要比移除特性更容易。</p>\n'
            '<p>另一个在将范围降低到较低水平的方法，是使用“帕累托法则”，二八法则。<a '
            'href="https://en.wikipedia.org/wiki/Pareto_principle">维基百科</a>：</p>\n'
            '<blockquote><p>帕累托法则（也叫二八法则，关键少数法则，或者稀疏因子法则）表明，对很多事件来说，大约 80% '
            '的影响来自于 20% 的原因。</p></blockquote>\n'
            '<p>该法则有很多应用，软件开发就是其一。往往有很多种实现某特性的方法，使用极少的精力（比如说 20%）就能带来大多数收益（例如 '
            '80%）。这点吸引人，不仅仅是因为更少的工作量，还因为你能更经济地彻底检查特性，并且只在这些特性有价值、使用过后才进行完全开发。</p>\n'
            '<p><strong>How? \xa0怎么做？</strong></p>\n'
            '<p>既然<em>需要开发的清单</em>已经减少到一小部分了，仍然要通过挑战特性的实现方法来获得机动空间和好处。一般来说，实现某特性有很多方法。一旦团队想出一种方法，很多团队就满意了。100 '
            '倍价值工程师总会进一步寻找替代方法，根据各自的优缺点评估所有选择。</p>\n'
            '<p>“怎么做”也会被技术债务影响。经常有“变态的”方法来实现某些快、脏的特性，“合适的”方法来首先还清技术债务，再干净地实现特性。什么是最好的方法？100 '
            '倍价值工程师认识到不只有一个正确答案，并且这取决于不同情况和累积技术债务的费用。一个 100 '
            '倍价值工程师能在不同的情景中作出正确抉择，能在合适的时机和产品谈判来降低技术债务。</p>\n'
            '<p>“怎么做”的另一个方面是过程。我对 Scrum 很喜欢的一点是，它能有效设定一个基础，如果用得合适可以鼓励 100 '
            '倍价值的行为：</p>\n'
            '<p>•<b>改进</b>是讨论和挑战做什么、怎么做和为什么的好平台。产品所有者提出要开发的新特性，开发团队挑战做什么和为什么，来得到全面的背景，并相互挑战如何实现特性。</p>\n'
            '<p>•<strong>Plannings</strong> '
            '针对下一步冲刺（sprint）做什么的<strong>计划，</strong>计划也是通往“辉煌和头脑”的手段：记起到底需要做什么，并且计划团队如何合作来交付产品</p>\n'
            '<p>•<strong>Retrospectives</strong> '
            '<strong>回顾</strong>是团队提升的方法。在一次冲刺循环中，有些事情出错了，有些事情进展不顺利。回顾是 100 '
            '倍价值工程师挑战团队来提升、下次做得更好的时刻。回顾也能练习所有权。100 '
            '倍价值工程师不抱怨低产，不指向自己以外的其他人。</p>\n'
            '<p><strong>Why? \xa0为什么？</strong></p>\n'
            '<p>上周我和一个工程师聊了聊，他刚刚发现自己花了整整 3 个月时间实现某特性，后来有发现对用户来说同样的价值本可以在 3 '
            '日内实现。显然不会是同一种功能，但是实现的目标是一样的。</p>\n'
            '<p>这种事情怎么会发生呢？</p>\n'
            '<p>除非工程师退后一步、扩大视野、挑战为什么，这种事情就会发生。为什么要开发这个特性？用户想要实现什么？他们的需求是什么？产品经理往往会提出非常具体的特性要求，偶尔具体化程度会比较低。他们的出发点是好的。然而更可能的情况是：产品经理也是人，也会遗漏。此外，风险在于工程师不再挑战更基础的问题：为什么我们要这么做？不是还有用其他更少的精力实现同样结果的方法吗？</p>\n'
            '<p><strong>但是，等等</strong></p>\n'
            '<p>说起来容易做起来难。做起来也应该难，不是什么人都应该能跻身 100 '
            '倍价值工程师。然而，我们都可以渴望变得更好，并找到相应的方法。</p>\n'
            '<p>因此，看看 100 倍价值工程师的技能集合是值得的。你会注意到，这与 10 倍价值程序员是非常非常不同的。</p>\n'
            '<p>•<strong>沟通</strong>——这点几乎明显得不用提了，但是它是重要的一点。100 '
            '倍价值工程师有优秀的沟通技巧。沟通是拥有 100 倍影响力的关键部分。</p>\n'
            '<p>•<strong>创造力</strong>——显然这在 10 '
            '倍价值程序员中是常见的，但是所要求的创造力不是关于算法的，也不是关于灵巧的类继承结构（class inheritance '
            'structures）的，而是关于想出更有效的方法来实现目标。</p>\n'
            '<p>•<strong>同理心</strong>——在“挑战所有”的长篇大论中隐藏着“生产力挑战”。那么我这么说意味着什么？让我用我的大儿子做例子来解释一下。他 '
            '4 岁了。4 岁小孩最喜欢的问题是什么？“为什么！？”这意味着我儿子是个 100 '
            '倍价值工程师吗？不。为什么不呢？因为他总是问“为什么？”，无论时机正确与否，无论有没有意义，无论他是不是让他的父母想自杀。拥有知道该挑战什么、怎么挑战和何时挑战的同理心也是 '
            '100 倍价值工程师的重要技能。</p>\n'
            '<p>•<strong>谈判</strong>——好主意被高估了。人人都有好主意，但几乎没人真正实现这些想法。你知道需要实现一个想法，实现它的一个重要因素就是谈判——与其他开发人员谈判，与产品经理谈判，与其他利益相关者谈判。解释为什么某个主意是个好主意，以及为什么需要时间执行它们。100 '
            '倍价值工程师知道怎么做。所以当他们在场时，所有事情都似乎有可能实现。</p>\n'
            '<p>•<strong>技术</strong>——这是清单上的最后一点，但依然重要。虽然大多数提到的技巧都是“软实力”，但这并不意味着 '
            '100 '
            '倍价值工程师不需要技术。事实上，他（她）拥有领先的技术天赋是先决条件，原因有二：（1）挑战技术层面上的事情会产生巨大收益，也因此要求对技术有深层次的理解；（2）<a '
            'href="https://en.wikipedia.org/wiki/Ethos">理念</a>是重要的，如果 100 '
            '倍价值工程师没有高技术，就不会被同辈接受。你得是“我们的一员”。</p>\n'
            '<p style="text-align: center;">…………</p>\n'
            '<p style="text-align: '
            'left;">几个月后，“我想成为世界上最好的程序员”先生作为程序员工作得非常顺利。他有天赋、努力工作、高产而且非常聪明。他会成为世界上最好的程序员吗？我不知道。</p>\n'
            '<p>但是私下里，我希望这不重要。</p>\n'
            '<p>我希望某一天，不是现在，但是可能是几年后，他会想做更多事。那时他会调整他的理想，不仅仅要擅长这个叫“编程”狭窄领域，而且渴望拥有 '
            '100 倍价值工程师的影响力。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113710" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113710votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113710" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 5 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 5 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/chenyahui">精算狗</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/chenyahui">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2015/04/8fbdaaa5ea6d3b49c8c1c825aafeb5d9.png">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            简介还没来得及写 :）        </span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a href="http://www.jobbole.com/members/chenyahui" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/chenyahui/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/chenyahui/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 22</a> · <a '
            'title="QQ：564968845" target="_blank" href="#"><i class="fa '
            'fa-qq"></i></a>\xa0<a title="个人微信：564968845" target="_blank" '
            'href="#"><i class="fa fa-weixin"></i></a>\xa0        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 5,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/11/90129c6662feee86738bd3663ce83108.png'],
 'praise_nums': 2,
 'tags': '职场,,程序员,职场',
 'title': '100 倍价值的工程师',
 'url': 'http://blog.jobbole.com/113710/',
 'url_object_id': 'c5b87c22be1fbc4b5d456243c449d9bb'}
2018-04-08 21:36:17 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113713/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:17 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:17 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 816
2018-04-08 21:36:17 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:17 [elasticsearch] DEBUG: > 6 个开源的家庭自动化工具
2018-04-08 21:36:17 [elasticsearch] DEBUG: < {"tokens":[{"token":"6","start_offset":0,"end_offset":1,"type":"ARABIC","position":0},{"token":"个","start_offset":2,"end_offset":3,"type":"CN_CHAR","position":1},{"token":"开源","start_offset":3,"end_offset":5,"type":"CN_WORD","position":2},{"token":"家庭","start_offset":6,"end_offset":8,"type":"CN_WORD","position":3},{"token":"家","start_offset":6,"end_offset":7,"type":"CN_WORD","position":4},{"token":"庭","start_offset":7,"end_offset":8,"type":"CN_WORD","position":5},{"token":"自动化","start_offset":8,"end_offset":11,"type":"CN_WORD","position":6},{"token":"自动","start_offset":8,"end_offset":10,"type":"CN_WORD","position":7},{"token":"化工","start_offset":10,"end_offset":12,"type":"CN_WORD","position":8},{"token":"工具","start_offset":11,"end_offset":13,"type":"CN_WORD","position":9}]}
2018-04-08 21:36:17 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:17 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 747
2018-04-08 21:36:17 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:17 [elasticsearch] DEBUG: > IT技术,智能家居,自动化
2018-04-08 21:36:17 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"智能家居","start_offset":5,"end_offset":9,"type":"CN_WORD","position":1},{"token":"智能","start_offset":5,"end_offset":7,"type":"CN_WORD","position":2},{"token":"家居","start_offset":7,"end_offset":9,"type":"CN_WORD","position":3},{"token":"家","start_offset":7,"end_offset":8,"type":"CN_WORD","position":4},{"token":"居","start_offset":8,"end_offset":9,"type":"CN_CHAR","position":5},{"token":"自动化","start_offset":10,"end_offset":13,"type":"CN_WORD","position":6},{"token":"自动","start_offset":10,"end_offset":12,"type":"CN_WORD","position":7},{"token":"化","start_offset":12,"end_offset":13,"type":"CN_CHAR","position":8}]}
2018-04-08 21:36:17 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:17 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/478668b98ba578838009ccb38b2d6a09 HTTP/1.1" 201 174
2018-04-08 21:36:17 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/478668b98ba578838009ccb38b2d6a09 [status:201 request:0.018s]
2018-04-08 21:36:17 [elasticsearch] DEBUG: > {"praise_nums": 2, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/03/1503a298ec77047d9314ddceef5e4ff7.jpg"], "create_date": "2018-04-08", "tags": "IT技术,智能家居,自动化", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Jason Baker   译文出处：Linux中国/qhwdw   用这些开源软件解决方案构建一个更智能的家庭。\n物联网 不仅是一个时髦词，在现实中，自 2016 年我们发布了一篇关于家庭自动化工具的评论文章以来，它也在迅速占领着我们的生活。在 2017，26.5% 的美国家庭 已经使用了一些智能家居技术；预计五年内，这一数字还将翻倍。\n随着这些数量持续增加的各种设备的使用，可以帮助你实现对家庭的自动化管理、安保、和监视，在家庭自动化方面，从来没有像现在这样容易和更加吸引人过。不论你是要远程控制你的 HVAC 系统，集成一个家庭影院，保护你的家免受盗窃、火灾、或是其它威胁，还是节省能源或只是控制几盏灯，现在都有无数的设备可以帮到你。\n但同时，还有许多用户担心安装在他们家庭中的新设备带来的安全和隐私问题 —— 这是一个很现实也很 严肃的问题。他们想要去控制有谁可以接触到这个重要的系统，这个系统管理着他们的应用程序，记录了他们生活中的点点滴滴。这种想法是可以理解的：毕竟在一个连你的冰箱都是智能设备的今天，你不想要一个基本的保证吗？甚至是如果你授权了设备可以与外界通讯，它是否是仅被授权的人访问它呢？\n对安全的担心 是为什么开源对我们将来使用的互联设备至关重要的众多理由之一。由于源代码运行在他们自己的设备上，完全可以去搞明白控制你的家庭的程序，也就是说你可以查看它的代码，如果必要的话甚至可以去修改它。\n虽然联网设备通常都包含它们专有的组件，但是将开源引入家庭自动化的第一步是确保你的设备和这些设备可以共同工作 —— 它们为你提供一个接口 —— 并且是开源的。幸运的是，现在有许多解决方案可供选择，从 PC 到树莓派，你可以在它们上做任何事情。\n这里有几个我比较喜欢的。\nCalaos\nCalaos 是一个设计为全栈的家庭自动化平台，包含一个服务器应用程序、触摸屏界面、Web 应用程序、支持 iOS 和 Android 的原生移动应用、以及一个运行在底层的预配置好的 Linux 操作系统。Calaos 项目出自一个法国公司，因此它的支持论坛以法语为主，不过大量的介绍资料和文档都已经翻译为英语了。\nCalaos 使用的是 GPL v3 的许可证，你可以在 GitHub 上查看它的源代码。\nDomoticz\nDomoticz 是一个有大量设备库支持的家庭自动化系统，在它的项目网站上有大量的文档，从气象站到远程控制的烟雾探测器，以及大量的第三方 集成软件 。它使用一个 HTML5 前端，可以从桌面浏览器或者大多数现代的智能手机上访问它，它是一个轻量级的应用，可以运行在像树莓派这样的低功耗设备上。\nDomoticz 是用 C++ 写的，使用 GPLv3 许可证。它的 源代码 在 GitHub 上。\nHome Assistant\nHome Assistant 是一个开源的家庭自动化平台，它可以轻松部署在任何能运行 Python 3 的机器上，从树莓派到网络存储（NAS），甚至可以使用 Docker 容器轻松地部署到其它系统上。它集成了大量的开源和商业的产品，允许你去连接它们，比如，IFTTT、天气信息、或者你的 Amazon Echo 设备，去控制从锁到灯的各种硬件。\nHome Assistant 以 MIT 许可证 发布，它的源代码可以从 GitHub 上下载。\nMisterHouse\n从 2016 年起，MisterHouse 取得了很多的进展，我们把它作为一个“可以考虑的另外选择”列在这个清单上。它使用 Perl 脚本去监视任何东西，它可以通过一台计算机来查询或者控制任何可以远程控制的东西。它可以响应语音命令，查询当前时间、天气、位置、以及其它事件，比如去打开灯、唤醒你、记下你喜欢的电视节目、通报呼入的来电、开门报警、记录你儿子上了多长时间的网、如果你女儿汽车超速它也可以告诉你等等。它可以运行在 Linux、macOS、以及 Windows 计算机上，它可以读/写很多的设备，包括安全系统、气象站、来电显示、路由器、机动车位置系统等等。\nMisterHouse 使用 GPLv2 许可证，你可以在 GitHub 上查看它的源代码。\nOpenHAB\nOpenHAB（开放家庭自动化总线的简称）是在开源爱好者中所熟知的家庭自动化工具，它拥有大量用户的社区以及支持和集成了大量的设备。它是用 Java 写的，OpenHAB 非常轻便，可以跨大多数主流操作系统使用，它甚至在树莓派上也运行的很好。支持成百上千的设备，OpenHAB 被设计为与设备无关的，这使开发者在系统中添加他们的设备或者插件很容易。OpenHAB 也支持通过 iOS 和 Android 应用来控制设备以及设计工具，因此，你可以为你的家庭系统创建你自己的 UI。\n你可以在 GitHub 上找到 OpenHAB 的 源代码，它使用 Eclipse 公共许可证。\nOpenMotics\nOpenMotics 是一个开源的硬件和软件家庭自动化系统。它的设计目标是为控制设备提供一个综合的系统，而不是从不同的供应商处将各种设备拼接在一起。不像其它的系统主要是为了方便改装而设计的，OpenMotics 专注于硬件解决方案。更多资料请查阅来自 OpenMotics 的后端开发者 Frederick Ryckbosch的 完整文章 。\nOpenMotics 使用 GPLv2 许可证，它的源代码可以从 GitHub 上下载。\n当然了，我们的选择不仅有这些。许多家庭自动化爱好者使用不同的解决方案，甚至是他们自己动手做。其它用户选择使用单独的智能家庭设备而无需集成它们到一个单一的综合系统中。\n如果上面的解决方案并不能满足你的需求，下面还有一些潜在的替代者可以去考虑：\n\nEventGhost 是一个开源的（GPL v2）家庭影院自动化工具，它只能运行在 Microsoft Windows PC 上。它允许用户去控制多媒体电脑和连接的硬件，它通过触发宏指令的插件或者定制的 Python 脚本来使用。\nioBroker 是一个基于 JavaScript 的物联网平台，它能够控制灯、锁、空调、多媒体、网络摄像头等等。它可以运行在任何可以运行 Node.js 的硬件上，包括 Windows、Linux、以及 macOS，它使用 MIT 许可证。\nJeedom 是一个由开源软件（GPL v2）构成的家庭自动化平台，它可以控制灯、锁、多媒体等等。它包含一个移动应用程序（Android 和 iOS），并且可以运行在 Linux PC 上；该公司也销售 hub，它为配置家庭自动化提供一个现成的解决方案。\nLinuxMCE 标称它是你的多媒体与电子设备之间的“数字粘合剂”。它运行在 Linux（包括树莓派）上，它基于 Pluto 开源 许可证 发布，它可以用于家庭安全、电话（VoIP 和语音信箱）、A/V 设备、家庭自动化、以及玩视频游戏。\nOpenNetHome，和这一类中的其它解决方案一样，是一个控制灯、报警、应用程序等等的一个开源软件。它基于 Java 和 Apache Maven，可以运行在 Windows、macOS、以及 Linux —— 包括树莓派，它以 GPLv3 许可证发布。\nSmarthomatic 是一个专注于硬件设备和软件的开源家庭自动化框架，而不仅是用户界面。它基于 GPLv3 许可证，它可用于控制灯、电器、以及空调、检测温度、提醒给植物浇水。\n\n现在该轮到你了：你已经准备好家庭自动化系统了吗？或者正在研究去设计一个。你对家庭自动化的新手有什么建议，你会推荐什么样的系统？\n \n\r\n        \r\n        \r\n        \n    \n         2 赞\n         2 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "6 个开源的家庭自动化工具", "suggest": [{"input": ["自动化", "开源", "化工", "工具", "家庭", "自动"], "weight": 10}, {"input": ["自动化", "技术", "家居", "智能", "智能家居", "自动"], "weight": 7}], "fav_nums": 2, "comment_nums": 2, "url": "http://blog.jobbole.com/113713/"}
2018-04-08 21:36:17 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"478668b98ba578838009ccb38b2d6a09","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:17 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113713/>
{'comment_nums': 2,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" '
            'href="https://opensource.com/life/17/12/home-automation-tools">Jason '
            'Baker</a>\xa0\xa0\xa0译文出处：<a target="_blank" '
            'href="https://linux.cn/article-9410-1.html">Linux中国/qhwdw</a>\xa0\xa0\xa0'
            '</div><blockquote><p>用这些开源软件解决方案构建一个更智能的家庭。</p></blockquote>\n'
            '<p><a '
            'href="https://opensource.com/resources/internet-of-things">物联网</a> '
            '不仅是一个时髦词，在现实中，自 2016 年我们发布了一篇关于家庭自动化工具的评论文章以来，它也在迅速占领着我们的生活。在 '
            '2017，<a '
            'href="https://www.statista.com/outlook/279/109/smart-home/united-states">26.5% '
            '的美国家庭</a> 已经使用了一些智能家居技术；预计五年内，这一数字还将翻倍。</p>\n'
            '<p>随着这些数量持续增加的各种设备的使用，可以帮助你实现对家庭的自动化管理、安保、和监视，在家庭自动化方面，从来没有像现在这样容易和更加吸引人过。不论你是要远程控制你的 '
            'HVAC '
            '系统，集成一个家庭影院，保护你的家免受盗窃、火灾、或是其它威胁，还是节省能源或只是控制几盏灯，现在都有无数的设备可以帮到你。</p>\n'
            '<p>但同时，还有许多用户担心安装在他们家庭中的新设备带来的安全和隐私问题 —— 这是一个很现实也很 <a '
            'href="http://www.crn.com/slide-shows/internet-of-things/300089496/black-hat-2017-9-iot-security-threats-to-watch.htm">严肃的问题</a>。他们想要去控制有谁可以接触到这个重要的系统，这个系统管理着他们的应用程序，记录了他们生活中的点点滴滴。这种想法是可以理解的：毕竟在一个连你的冰箱都是智能设备的今天，你不想要一个基本的保证吗？甚至是如果你授权了设备可以与外界通讯，它是否是仅被授权的人访问它呢？</p>\n'
            '<p><a '
            'href="https://opensource.com/business/15/5/why-open-source-means-stronger-security">对安全的担心</a> '
            '是为什么开源对我们将来使用的互联设备至关重要的众多理由之一。由于源代码运行在他们自己的设备上，完全可以去搞明白控制你的家庭的程序，也就是说你可以查看它的代码，如果必要的话甚至可以去修改它。</p>\n'
            '<p>虽然联网设备通常都包含它们专有的组件，但是将开源引入家庭自动化的第一步是确保你的设备和这些设备可以共同工作 —— '
            '它们为你提供一个接口 —— 并且是开源的。幸运的是，现在有许多解决方案可供选择，从 PC '
            '到树莓派，你可以在它们上做任何事情。</p>\n'
            '<p>这里有几个我比较喜欢的。</p>\n'
            '<h3 id="toc_1">Calaos</h3>\n'
            '<p><a href="https://calaos.fr/en/">Calaos</a> '
            '是一个设计为全栈的家庭自动化平台，包含一个服务器应用程序、触摸屏界面、Web 应用程序、支持 iOS 和 Android '
            '的原生移动应用、以及一个运行在底层的预配置好的 Linux 操作系统。Calaos '
            '项目出自一个法国公司，因此它的支持论坛以法语为主，不过大量的介绍资料和文档都已经翻译为英语了。</p>\n'
            '<p>Calaos 使用的是 <a '
            'href="https://github.com/calaos/calaos-os/blob/master/LICENSE">GPL</a> '
            'v3 的许可证，你可以在 <a href="https://github.com/calaos">GitHub</a> '
            '上查看它的源代码。</p>\n'
            '<h3 id="toc_2">Domoticz</h3>\n'
            '<p><a href="https://domoticz.com/">Domoticz</a> '
            '是一个有大量设备库支持的家庭自动化系统，在它的项目网站上有大量的文档，从气象站到远程控制的烟雾探测器，以及大量的第三方 <a '
            'href="https://www.domoticz.com/wiki/Integrations_and_Protocols">集成软件</a> '
            '。它使用一个 HTML5 '
            '前端，可以从桌面浏览器或者大多数现代的智能手机上访问它，它是一个轻量级的应用，可以运行在像树莓派这样的低功耗设备上。</p>\n'
            '<p>Domoticz 是用 C++ 写的，使用 <a '
            'href="https://github.com/domoticz/domoticz/blob/master/License.txt">GPLv3</a> '
            '许可证。它的 <a href="https://github.com/domoticz/domoticz">源代码</a> 在 '
            'GitHub 上。</p>\n'
            '<h3 id="toc_3">Home Assistant</h3>\n'
            '<p><a href="https://home-assistant.io/">Home Assistant</a> '
            '是一个开源的家庭自动化平台，它可以轻松部署在任何能运行 Python 3 的机器上，从树莓派到网络存储（NAS），甚至可以使用 '
            'Docker 容器轻松地部署到其它系统上。它集成了大量的开源和商业的产品，允许你去连接它们，比如，IFTTT、天气信息、或者你的 '
            'Amazon Echo 设备，去控制从锁到灯的各种硬件。</p>\n'
            '<p>Home Assistant 以 <a '
            'href="https://github.com/home-assistant/home-assistant/blob/dev/LICENSE.md">MIT '
            '许可证</a> 发布，它的源代码可以从 <a '
            'href="https://github.com/balloob/home-assistant">GitHub</a> '
            '上下载。</p>\n'
            '<h3 id="toc_4">MisterHouse</h3>\n'
            '<p>从 2016 年起，<a '
            'href="http://misterhouse.sourceforge.net/">MisterHouse</a> '
            '取得了很多的进展，我们把它作为一个“可以考虑的另外选择”列在这个清单上。它使用 Perl '
            '脚本去监视任何东西，它可以通过一台计算机来查询或者控制任何可以远程控制的东西。它可以响应语音命令，查询当前时间、天气、位置、以及其它事件，比如去打开灯、唤醒你、记下你喜欢的电视节目、通报呼入的来电、开门报警、记录你儿子上了多长时间的网、如果你女儿汽车超速它也可以告诉你等等。它可以运行在 '
            'Linux、macOS、以及 Windows '
            '计算机上，它可以读/写很多的设备，包括安全系统、气象站、来电显示、路由器、机动车位置系统等等。</p>\n'
            '<p>MisterHouse 使用 <a '
            'href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html">GPLv2</a> '
            '许可证，你可以在 <a '
            'href="https://github.com/hollie/misterhouse">GitHub</a> '
            '上查看它的源代码。</p>\n'
            '<h3 id="toc_5">OpenHAB</h3>\n'
            '<p><a '
            'href="http://www.openhab.org/">OpenHAB</a>（开放家庭自动化总线的简称）是在开源爱好者中所熟知的家庭自动化工具，它拥有大量用户的社区以及支持和集成了大量的设备。它是用 '
            'Java 写的，OpenHAB '
            '非常轻便，可以跨大多数主流操作系统使用，它甚至在树莓派上也运行的很好。支持成百上千的设备，OpenHAB '
            '被设计为与设备无关的，这使开发者在系统中添加他们的设备或者插件很容易。OpenHAB 也支持通过 iOS 和 Android '
            '应用来控制设备以及设计工具，因此，你可以为你的家庭系统创建你自己的 UI。</p>\n'
            '<p>你可以在 GitHub 上找到 OpenHAB 的 <a '
            'href="https://github.com/openhab/openhab">源代码</a>，它使用 <a '
            'href="https://github.com/openhab/openhab/blob/master/LICENSE.TXT">Eclipse '
            '公共许可证</a>。</p>\n'
            '<h3 id="toc_6">OpenMotics</h3>\n'
            '<p><a href="https://www.openmotics.com/">OpenMotics</a> '
            '是一个开源的硬件和软件家庭自动化系统。它的设计目标是为控制设备提供一个综合的系统，而不是从不同的供应商处将各种设备拼接在一起。不像其它的系统主要是为了方便改装而设计的，OpenMotics '
            '专注于硬件解决方案。更多资料请查阅来自 OpenMotics 的后端开发者 Frederick Ryckbosch的 <a '
            'href="https://opensource.com/life/14/12/open-source-home-automation-system-opemmotics">完整文章</a> '
            '。</p>\n'
            '<p>OpenMotics 使用 <a '
            'href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html">GPLv2</a> '
            '许可证，它的源代码可以从 <a href="https://github.com/openmotics">GitHub</a> '
            '上下载。</p>\n'
            '<p>当然了，我们的选择不仅有这些。许多家庭自动化爱好者使用不同的解决方案，甚至是他们自己动手做。其它用户选择使用单独的智能家庭设备而无需集成它们到一个单一的综合系统中。</p>\n'
            '<p>如果上面的解决方案并不能满足你的需求，下面还有一些潜在的替代者可以去考虑：</p>\n'
            '<ul>\n'
            '<li><a href="http://www.eventghost.net/">EventGhost</a> 是一个开源的（<a '
            'href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">GPL '
            'v2</a>）家庭影院自动化工具，它只能运行在 Microsoft Windows PC '
            '上。它允许用户去控制多媒体电脑和连接的硬件，它通过触发宏指令的插件或者定制的 Python 脚本来使用。</li>\n'
            '<li><a href="http://iobroker.net/">ioBroker</a> 是一个基于 JavaScript '
            '的物联网平台，它能够控制灯、锁、空调、多媒体、网络摄像头等等。它可以运行在任何可以运行 Node.js 的硬件上，包括 '
            'Windows、Linux、以及 macOS，它使用 <a '
            'href="https://github.com/ioBroker/ioBroker#license">MIT '
            '许可证</a>。</li>\n'
            '<li><a '
            'href="https://www.jeedom.com/site/en/index.html">Jeedom</a> '
            '是一个由开源软件（<a '
            'href="http://www.gnu.org/licenses/old-licenses/gpl-2.0.html">GPL '
            'v2</a>）构成的家庭自动化平台，它可以控制灯、锁、多媒体等等。它包含一个移动应用程序（Android 和 '
            'iOS），并且可以运行在 Linux PC 上；该公司也销售 hub，它为配置家庭自动化提供一个现成的解决方案。</li>\n'
            '<li><a href="http://www.linuxmce.com/">LinuxMCE</a> '
            '标称它是你的多媒体与电子设备之间的“数字粘合剂”。它运行在 Linux（包括树莓派）上，它基于 Pluto 开源 <a '
            'href="http://wiki.linuxmce.org/index.php/License">许可证</a> '
            '发布，它可以用于家庭安全、电话（VoIP 和语音信箱）、A/V 设备、家庭自动化、以及玩视频游戏。</li>\n'
            '<li><a '
            'href="http://opennethome.org/">OpenNetHome</a>，和这一类中的其它解决方案一样，是一个控制灯、报警、应用程序等等的一个开源软件。它基于 '
            'Java 和 Apache Maven，可以运行在 Windows、macOS、以及 Linux —— 包括树莓派，它以 <a '
            'href="https://github.com/NetHome/NetHomeServer/blob/master/LICENSE">GPLv3</a> '
            '许可证发布。</li>\n'
            '<li><a href="https://www.smarthomatic.org/">Smarthomatic</a> '
            '是一个专注于硬件设备和软件的开源家庭自动化框架，而不仅是用户界面。它基于 <a '
            'href="https://github.com/breaker27/smarthomatic/blob/develop/GPL3.txt">GPLv3</a> '
            '许可证，它可用于控制灯、电器、以及空调、检测温度、提醒给植物浇水。</li>\n'
            '</ul>\n'
            '<p>现在该轮到你了：你已经准备好家庭自动化系统了吗？或者正在研究去设计一个。你对家庭自动化的新手有什么建议，你会推荐什么样的系统？</p>\n'
            '<p>\xa0</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113713" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113713votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113713" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 2 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 2,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/03/1503a298ec77047d9314ddceef5e4ff7.jpg'],
 'praise_nums': 2,
 'tags': 'IT技术,智能家居,自动化',
 'title': '6 个开源的家庭自动化工具',
 'url': 'http://blog.jobbole.com/113713/',
 'url_object_id': '478668b98ba578838009ccb38b2d6a09'}
2018-04-08 21:36:23 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113716/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1398
2018-04-08 21:36:24 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:24 [elasticsearch] DEBUG: > 为什么浏览器的用户代理字符串以 Mozilla 开头
2018-04-08 21:36:24 [elasticsearch] DEBUG: < {"tokens":[{"token":"为什么","start_offset":0,"end_offset":3,"type":"CN_WORD","position":0},{"token":"什么","start_offset":1,"end_offset":3,"type":"CN_WORD","position":1},{"token":"么","start_offset":2,"end_offset":3,"type":"CN_WORD","position":2},{"token":"浏览器","start_offset":3,"end_offset":6,"type":"CN_WORD","position":3},{"token":"浏览","start_offset":3,"end_offset":5,"type":"CN_WORD","position":4},{"token":"浏","start_offset":3,"end_offset":4,"type":"CN_WORD","position":5},{"token":"览","start_offset":4,"end_offset":5,"type":"CN_WORD","position":6},{"token":"器","start_offset":5,"end_offset":6,"type":"CN_CHAR","position":7},{"token":"用户","start_offset":7,"end_offset":9,"type":"CN_WORD","position":8},{"token":"户","start_offset":8,"end_offset":9,"type":"CN_WORD","position":9},{"token":"代理","start_offset":9,"end_offset":11,"type":"CN_WORD","position":10},{"token":"字符串","start_offset":11,"end_offset":14,"type":"CN_WORD","position":11},{"token":"字符","start_offset":11,"end_offset":13,"type":"CN_WORD","position":12},{"token":"符","start_offset":12,"end_offset":13,"type":"CN_WORD","position":13},{"token":"串","start_offset":13,"end_offset":14,"type":"CN_WORD","position":14},{"token":"mozilla","start_offset":16,"end_offset":23,"type":"ENGLISH","position":15},{"token":"开头","start_offset":24,"end_offset":26,"type":"CN_WORD","position":16}]}
2018-04-08 21:36:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 492
2018-04-08 21:36:24 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:24 [elasticsearch] DEBUG: > IT技术,浏览器
2018-04-08 21:36:24 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"浏览器","start_offset":5,"end_offset":8,"type":"CN_WORD","position":1},{"token":"浏览","start_offset":5,"end_offset":7,"type":"CN_WORD","position":2},{"token":"浏","start_offset":5,"end_offset":6,"type":"CN_WORD","position":3},{"token":"览","start_offset":6,"end_offset":7,"type":"CN_WORD","position":4},{"token":"器","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":5}]}
2018-04-08 21:36:24 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:24 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/a6f0ef6debff996ff3defb5399281308 HTTP/1.1" 201 174
2018-04-08 21:36:24 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/a6f0ef6debff996ff3defb5399281308 [status:201 request:0.018s]
2018-04-08 21:36:24 [elasticsearch] DEBUG: > {"praise_nums": 2, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2018/03/47a58f731472797655f14eeebe80e7d7.png"], "create_date": "2018-04-08", "tags": "IT技术,浏览器", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Solidot   最早流行的浏览器是 NCSA Mosaic，它称自己为 NCSA_Mosaic/2.0 (Windows 3.1)；后来一个新浏览器出现了，它的名字叫 Mozilla，是 Mosaic Killer 的缩写，Mosaic 并不觉得这好笑，因此该浏览器改名为 Netscape，它称自己为 Mozilla/1.0 (Win3.1)。\nNetscape 支持框架（frame），而 Mosaic 不支持，因此用户代理嗅探（User Agent sniffing）出现了，网站在检测到 Mozilla 后就发送框架，如果不是就不发送。后来微软开发了 IE，希望它成为 Netscape Killer，IE 也支持框架，但由于它不是 Mozilla，网站没有向它发送框架。\n微软没有耐心等待网站修改而是声称它兼容于 Mozilla，因此冒充 Netscape 称自己为 Mozilla/1.22 (compatible; MSIE 2.0; Windows 95)。第一次浏览器战争以 Netscape 的失利结束，但 Netscape 以 Mozilla 的名字获得了新生。\nMozilla 构建了 Gecko，称自己为 Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826。Gecko 是一个渲染引擎，Mozilla 在此基础上开发了 Firefox，它称自己为 Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0。因为 Gecko 好于 IE，因此用户代理嗅探又出现了，网站在检测到 Gecko 后会提供更好的页面代码。\n\nLinux 上的浏览器 Konqueror 使用的渲染引擎是 KHTM，它只能冒充 Gecko 称自己为 Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)。Opera 则提供了选项，让用户想冒充哪个浏览器就冒充哪个浏览器。苹果后来创建了 KHTML 的一个分支 WebKit，称自己为 Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5。这就是为什么浏览器的用户代理字符串以 Mozilla 开头。\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         1 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "为什么浏览器的用户代理字符串以 Mozilla 开头", "suggest": [{"input": ["字符", "为什么", "开头", "mozilla", "浏览", "用户", "浏览器", "字符串", "代理", "什么"], "weight": 10}, {"input": ["浏览", "浏览器", "技术"], "weight": 7}], "fav_nums": 1, "comment_nums": 2, "url": "http://blog.jobbole.com/113716/"}
2018-04-08 21:36:24 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"a6f0ef6debff996ff3defb5399281308","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:24 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113716/>
{'comment_nums': 2,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a target="_blank" '
            'href="https://www.solidot.org/story?sid=55694">Solidot</a>\xa0\xa0\xa0'
            '</div><p>最早流行的浏览器是 NCSA Mosaic，它称自己为 NCSA_Mosaic/2.0 (Windows '
            '3.1)；后来一个新浏览器出现了，它的名字叫 Mozilla，是 Mosaic Killer 的缩写，Mosaic '
            '并不觉得这好笑，因此该浏览器改名为 Netscape，它称自己为 Mozilla/1.0 (Win3.1)。</p>\n'
            '<p>Netscape 支持框架（frame），而 Mosaic 不支持，因此用户代理嗅探（User Agent '
            'sniffing）出现了，网站在检测到 Mozilla 后就发送框架，如果不是就不发送。后来微软开发了 IE，希望它成为 '
            'Netscape Killer，IE 也支持框架，但由于它不是 Mozilla，网站没有向它发送框架。</p>\n'
            '<p>微软没有耐心等待网站修改而是声称它兼容于 Mozilla，因此冒充 Netscape 称自己为 Mozilla/1.22 '
            '(compatible; MSIE 2.0; Windows 95)。第一次浏览器战争以 Netscape 的失利结束，但 '
            'Netscape 以 Mozilla 的名字获得了新生。</p>\n'
            '<p>Mozilla 构建了 Gecko，称自己为 Mozilla/5.0 (Windows; U; Windows NT '
            '5.0; en-US; rv:1.1) Gecko/20020826。Gecko 是一个渲染引擎，Mozilla 在此基础上开发了 '
            'Firefox，它称自己为 Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; '
            'rv:1.7.5) Gecko/20041108 Firefox/1.0。因为 Gecko 好于 '
            'IE，因此用户代理嗅探又出现了，网站在检测到 Gecko 后会提供更好的页面代码。</p>\n'
            '<p><img class="aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/47a58f731472797655f14eeebe80e7d7.png" '
            'alt="YL}%@8@6764CYM (9J]%W[LU.png"></p>\n'
            '<p>Linux 上的浏览器 Konqueror 使用的渲染引擎是 KHTM，它只能冒充 Gecko 称自己为 '
            'Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like '
            'Gecko)。Opera 则提供了选项，让用户想冒充哪个浏览器就冒充哪个浏览器。苹果后来创建了 KHTML 的一个分支 '
            'WebKit，称自己为 Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) '
            'AppleWebKit/85.7 (KHTML, like Gecko) '
            'Safari/85.5。这就是为什么浏览器的用户代理字符串以 Mozilla 开头。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113716" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113716votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113716" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 1,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2018/03/47a58f731472797655f14eeebe80e7d7.png'],
 'praise_nums': 2,
 'tags': 'IT技术,浏览器',
 'title': '为什么浏览器的用户代理字符串以 Mozilla 开头',
 'url': 'http://blog.jobbole.com/113716/',
 'url_object_id': 'a6f0ef6debff996ff3defb5399281308'}
2018-04-08 21:36:28 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113719/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:28 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:28 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1248
2018-04-08 21:36:28 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:28 [elasticsearch] DEBUG: > Linux 主目录中的隐藏文件是干什么用的？
2018-04-08 21:36:28 [elasticsearch] DEBUG: < {"tokens":[{"token":"linux","start_offset":0,"end_offset":5,"type":"ENGLISH","position":0},{"token":"主目录","start_offset":6,"end_offset":9,"type":"CN_WORD","position":1},{"token":"目录","start_offset":7,"end_offset":9,"type":"CN_WORD","position":2},{"token":"中","start_offset":9,"end_offset":10,"type":"CN_CHAR","position":3},{"token":"隐藏","start_offset":11,"end_offset":13,"type":"CN_WORD","position":4},{"token":"隐","start_offset":11,"end_offset":12,"type":"CN_WORD","position":5},{"token":"藏文","start_offset":12,"end_offset":14,"type":"CN_WORD","position":6},{"token":"藏","start_offset":12,"end_offset":13,"type":"CN_WORD","position":7},{"token":"文件","start_offset":13,"end_offset":15,"type":"CN_WORD","position":8},{"token":"干什么","start_offset":16,"end_offset":19,"type":"CN_WORD","position":9},{"token":"干什","start_offset":16,"end_offset":18,"type":"CN_WORD","position":10},{"token":"什么用","start_offset":17,"end_offset":20,"type":"CN_WORD","position":11},{"token":"什么","start_offset":17,"end_offset":19,"type":"CN_WORD","position":12},{"token":"么","start_offset":18,"end_offset":19,"type":"CN_WORD","position":13},{"token":"用","start_offset":19,"end_offset":20,"type":"CN_CHAR","position":14}]}
2018-04-08 21:36:28 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:28 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 174
2018-04-08 21:36:28 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2018-04-08 21:36:28 [elasticsearch] DEBUG: > IT技术,Linux
2018-04-08 21:36:28 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"linux","start_offset":5,"end_offset":10,"type":"ENGLISH","position":1}]}
2018-04-08 21:36:28 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:28 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/0ec536e6cc340e779e8be8c764ab39c0 HTTP/1.1" 201 174
2018-04-08 21:36:28 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/0ec536e6cc340e779e8be8c764ab39c0 [status:201 request:0.019s]
2018-04-08 21:36:28 [elasticsearch] DEBUG: > {"praise_nums": 1, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2018/03/c96c574ca76e6b552476e508f1247902.png"], "create_date": "2018-04-08", "tags": "IT技术,Linux", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Alexander Fox   译文出处：Linux中国/MjSeven   在 Linux 系统中，你可能会在主目录中存储了大量文件和文件夹。但在这些文件之外，你知道你的主目录还附带了很多隐藏的文件和文件夹吗？如果你在主目录中运行 ls -a，你会发现一堆带有点前缀的隐藏文件和目录。这些隐藏的文件到底做了什么？\n在主目录中隐藏的文件是干什么用的?\n\n通常，主目录中的隐藏文件和目录包含该用户程序访问的设置或数据。它们不打算让用户编辑，只需要应用程序进行编辑。这就是为什么它们被隐藏在用户的正常视图之外。\n通常，删除和修改自己主目录中的文件不会损坏操作系统。然而，依赖这些隐藏文件的应用程序可能不那么灵活。从主目录中删除隐藏文件时，通常会丢失与其关联的应用程序的设置。\n依赖该隐藏文件的程序通常会重新创建它。 但是，你将从“开箱即用”设置开始，如全新用户一般。如果你在使用应用程序时遇到问题，那实际上可能是一个巨大的帮助。它可以让你删除可能造成麻烦的自定义设置。但如果你不这样做，这意味着你需要把所有的东西都设置成原来的样子。\n主目录中某些隐藏文件的特定用途是什么？\n\n每个人在他们的主目录中都会有不同的隐藏文件。每个人都有一些。但是，无论应用程序如何，这些文件都有类似的用途。\n系统设置\n系统设置包括桌面环境和 shell 的配置。\n\nshell 和命令行程序的配置文件：根据你使用的特定 shell 和类似命令的应用程序，特定的文件名称会变化。你会看到 .bashrc、.vimrc 和 .zshrc。这些文件包含你已经更改的有关 shell 的操作环境的任何设置，或者对 vim 等命令行实用工具的设置进行的调整。删除这些文件将使关联的应用程序返回到其默认状态。考虑到许多 Linux 用户多年来建立了一系列微妙的调整和设置，删除这个文件可能是一个非常头疼的问题。\n用户配置文件：像上面的配置文件一样，这些文件（通常是 .profile 或 .bash_profile）保存 shell 的用户设置。该文件通常包含你的 PATH 环境变量。它还包含你设置的别名。用户也可以在 .bashrc 或其他位置放置别名。PATH 环境变量控制着 shell 寻找可执行命令的位置。通过添加或修改 PATH，可以更改 shell 的命令查找位置。别名更改了原有命令的名称。例如：一个别名可能将 ls -l 设置为 ll。这为经常使用的命令提供基于文本的快捷方式。如果删除 .profile 文件，通常可以在 /etc/skel 目录中找到默认版本。\n桌面环境设置：这里保存你的桌面环境的任何定制。其中包括桌面背景、屏幕保护程序、快捷键、菜单栏和任务栏图标以及用户针对其桌面环境设置的其他任何内容。当你删除这个文件时，用户的环境会在下一次登录时恢复到新的用户环境。\n\n应用配置文件\n你会在 Ubuntu 的 .config 文件夹中找到它们。 这些是针对特定应用程序的设置。 它们将包含喜好列表和设置等内容。\n\n应用程序的配置文件：这包括应用程序首选项菜单中的设置、工作区配置等。 你在这里找到的具体取决于应用程序。\nWeb 浏览器数据：这可能包括书签和浏览历史记录等内容。这些文件大部分是缓存。这是 Web 浏览器临时存储下载文件（如图片）的地方。删除这些内容可能会降低你首次访问某些媒体网站的速度。\n缓存：如果用户应用程序缓存仅与该用户相关的数据（如 Spotify 应用程序存储播放列表的缓存），则主目录是存储该目录的默认地点。 这些缓存可能包含大量数据或仅包含几行代码：这取决于应用程序需要什么。 如果你删除这些文件，则应用程序会根据需要重新创建它们。\n日志：一些用户应用程序也可能在这里存储日志。根据开发人员设置应用程序的方式，你可能会发现存储在你的主目录中的日志文件。然而，这不是一个常见的选择。\n\n结论\n在大多数情况下，你的 Linux 主目录中的隐藏文件用于存储用户设置。 这包括命令行程序以及基于 GUI 的应用程序的设置。删除它们将删除用户设置。 通常情况下，它不会导致程序被破坏。\n \n\r\n        \r\n        \r\n        \n    \n         1 赞\n         1 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "Linux 主目录中的隐藏文件是干什么用的？", "suggest": [{"input": ["主目录", "什么用", "目录", "文件", "linux", "藏文", "干什么", "干什", "隐藏", "什么"], "weight": 10}, {"input": ["技术", "linux"], "weight": 7}], "fav_nums": 1, "comment_nums": 1, "url": "http://blog.jobbole.com/113719/"}
2018-04-08 21:36:28 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"0ec536e6cc340e779e8be8c764ab39c0","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:28 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113719/>
{'comment_nums': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" '
            'href="https://www.maketecheasier.com/hidden-files-linux-home-directory/">Alexander '
            'Fox</a>\xa0\xa0\xa0译文出处：<a target="_blank" '
            'href="https://linux.cn/article-9409-1.html">Linux中国/MjSeven</a>\xa0\xa0\xa0'
            '</div><p>在 Linux '
            '系统中，你可能会在主目录中存储了大量文件和文件夹。但在这些文件之外，你知道你的主目录还附带了很多隐藏的文件和文件夹吗？如果你在主目录中运行 '
            '<code>ls -a</code>，你会发现一堆带有点前缀的隐藏文件和目录。这些隐藏的文件到底做了什么？</p>\n'
            '<h3 id="toc_1">在主目录中隐藏的文件是干什么用的?</h3>\n'
            '<p><img class="aligncenter" title="hidden-files-liunux-2" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/c96c574ca76e6b552476e508f1247902.png" '
            'alt="hidden-files-liunux-2"></p>\n'
            '<p>通常，主目录中的隐藏文件和目录包含该用户程序访问的设置或数据。它们不打算让用户编辑，只需要应用程序进行编辑。这就是为什么它们被隐藏在用户的正常视图之外。</p>\n'
            '<p>通常，删除和修改自己主目录中的文件不会损坏操作系统。然而，依赖这些隐藏文件的应用程序可能不那么灵活。从主目录中删除隐藏文件时，通常会丢失与其关联的应用程序的设置。</p>\n'
            '<p>依赖该隐藏文件的程序通常会重新创建它。 '
            '但是，你将从“开箱即用”设置开始，如全新用户一般。如果你在使用应用程序时遇到问题，那实际上可能是一个巨大的帮助。它可以让你删除可能造成麻烦的自定义设置。但如果你不这样做，这意味着你需要把所有的东西都设置成原来的样子。</p>\n'
            '<h3 id="toc_2">主目录中某些隐藏文件的特定用途是什么？</h3>\n'
            '<p><img class="aligncenter" title="hidden-files-linux-3" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/e5c7ad21014cb9f242377c5c8c36e38f.png" '
            'alt="hidden-files-linux-3"></p>\n'
            '<p>每个人在他们的主目录中都会有不同的隐藏文件。每个人都有一些。但是，无论应用程序如何，这些文件都有类似的用途。</p>\n'
            '<h4 id="toc_3">系统设置</h4>\n'
            '<p>系统设置包括桌面环境和 shell 的配置。</p>\n'
            '<ul>\n'
            '<li>shell 和命令行程序的<strong>配置文件</strong>：根据你使用的特定 shell '
            '和类似命令的应用程序，特定的文件名称会变化。你会看到 '
            '<code>.bashrc</code>、<code>.vimrc</code> 和 '
            '<code>.zshrc</code>。这些文件包含你已经更改的有关 shell 的操作环境的任何设置，或者对 '
            '<code>vim</code> 等命令行实用工具的设置进行的调整。删除这些文件将使关联的应用程序返回到其默认状态。考虑到许多 '
            'Linux 用户多年来建立了一系列微妙的调整和设置，删除这个文件可能是一个非常头疼的问题。</li>\n'
            '<li><strong>用户配置文件</strong>：像上面的配置文件一样，这些文件（通常是 '
            '<code>.profile</code> 或 <code>.bash_profile</code>）保存 shell '
            '的用户设置。该文件通常包含你的 <code>PATH</code> 环境变量。它还包含你设置的<a '
            'href="https://www.maketecheasier.com/making-the-linux-command-line-a-little-friendlier/#aliases">别名</a>。用户也可以在 '
            '<code>.bashrc</code> 或其他位置放置别名。<code>PATH</code> 环境变量控制着 shell '
            '寻找可执行命令的位置。通过添加或修改 <code>PATH</code>，可以更改 shell '
            '的命令查找位置。别名更改了原有命令的名称。例如：一个别名可能将 <code>ls -l</code> 设置为 '
            '<code>ll</code>。这为经常使用的命令提供基于文本的快捷方式。如果删除 <code>.profile</code> '
            '文件，通常可以在 <code>/etc/skel</code> 目录中找到默认版本。</li>\n'
            '<li><strong>桌面环境设置</strong>：这里保存你的桌面环境的任何定制。其中包括桌面背景、屏幕保护程序、快捷键、菜单栏和任务栏图标以及用户针对其桌面环境设置的其他任何内容。当你删除这个文件时，用户的环境会在下一次登录时恢复到新的用户环境。</li>\n'
            '</ul>\n'
            '<h4 id="toc_4">应用配置文件</h4>\n'
            '<p>你会在 Ubuntu 的 <code>.config</code> 文件夹中找到它们。 这些是针对特定应用程序的设置。 '
            '它们将包含喜好列表和设置等内容。</p>\n'
            '<ul>\n'
            '<li><strong>应用程序的配置文件</strong>：这包括应用程序首选项菜单中的设置、工作区配置等。 '
            '你在这里找到的具体取决于应用程序。</li>\n'
            '<li><strong>Web 浏览器数据</strong>：这可能包括书签和浏览历史记录等内容。这些文件大部分是缓存。这是 '
            'Web 浏览器临时存储下载文件（如图片）的地方。删除这些内容可能会降低你首次访问某些媒体网站的速度。</li>\n'
            '<li><strong>缓存</strong>：如果用户应用程序缓存仅与该用户相关的数据（如 <a '
            'href="https://www.maketecheasier.com/clear-spotify-cache/">Spotify '
            '应用程序存储播放列表的缓存</a>），则主目录是存储该目录的默认地点。 '
            '这些缓存可能包含大量数据或仅包含几行代码：这取决于应用程序需要什么。 '
            '如果你删除这些文件，则应用程序会根据需要重新创建它们。</li>\n'
            '<li><strong>日志</strong>：一些用户应用程序也可能在这里存储日志。根据开发人员设置应用程序的方式，你可能会发现存储在你的主目录中的日志文件。然而，这不是一个常见的选择。</li>\n'
            '</ul>\n'
            '<h3 id="toc_5">结论</h3>\n'
            '<p>在大多数情况下，你的 Linux 主目录中的隐藏文件用于存储用户设置。 这包括命令行程序以及基于 GUI '
            '的应用程序的设置。删除它们将删除用户设置。 通常情况下，它不会导致程序被破坏。</p>\n'
            '<p>\xa0</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113719" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113719votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113719" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 1,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2018/03/c96c574ca76e6b552476e508f1247902.png'],
 'praise_nums': 1,
 'tags': 'IT技术,Linux',
 'title': 'Linux 主目录中的隐藏文件是干什么用的？',
 'url': 'http://blog.jobbole.com/113719/',
 'url_object_id': '0ec536e6cc340e779e8be8c764ab39c0'}
2018-04-08 21:36:35 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113722/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:35 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:35 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1550
2018-04-08 21:36:35 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:35 [elasticsearch] DEBUG: > 励志！海外开发者讲述用脚做游戏的研发经历
2018-04-08 21:36:35 [elasticsearch] DEBUG: < {"tokens":[{"token":"励志","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"励","start_offset":0,"end_offset":1,"type":"CN_WORD","position":1},{"token":"志","start_offset":1,"end_offset":2,"type":"CN_WORD","position":2},{"token":"海外","start_offset":3,"end_offset":5,"type":"CN_WORD","position":3},{"token":"开发者","start_offset":5,"end_offset":8,"type":"CN_WORD","position":4},{"token":"开发","start_offset":5,"end_offset":7,"type":"CN_WORD","position":5},{"token":"发","start_offset":6,"end_offset":7,"type":"CN_WORD","position":6},{"token":"者","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":7},{"token":"讲述","start_offset":8,"end_offset":10,"type":"CN_WORD","position":8},{"token":"述","start_offset":9,"end_offset":10,"type":"CN_WORD","position":9},{"token":"用","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":10},{"token":"脚","start_offset":11,"end_offset":12,"type":"CN_WORD","position":11},{"token":"做","start_offset":12,"end_offset":13,"type":"CN_CHAR","position":12},{"token":"游戏","start_offset":13,"end_offset":15,"type":"CN_WORD","position":13},{"token":"游","start_offset":13,"end_offset":14,"type":"CN_WORD","position":14},{"token":"戏","start_offset":14,"end_offset":15,"type":"CN_CHAR","position":15},{"token":"研发","start_offset":16,"end_offset":18,"type":"CN_WORD","position":16},{"token":"发","start_offset":17,"end_offset":18,"type":"CN_WORD","position":17},{"token":"经历","start_offset":18,"end_offset":20,"type":"CN_WORD","position":18}]}
2018-04-08 21:36:35 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:35 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 414
2018-04-08 21:36:35 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:35 [elasticsearch] DEBUG: > IT技术,开发者
2018-04-08 21:36:35 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"开发者","start_offset":5,"end_offset":8,"type":"CN_WORD","position":1},{"token":"开发","start_offset":5,"end_offset":7,"type":"CN_WORD","position":2},{"token":"发","start_offset":6,"end_offset":7,"type":"CN_WORD","position":3},{"token":"者","start_offset":7,"end_offset":8,"type":"CN_CHAR","position":4}]}
2018-04-08 21:36:35 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:35 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/f7fd5491f869ff395a8d3670134dea28 HTTP/1.1" 201 174
2018-04-08 21:36:35 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/f7fd5491f869ff395a8d3670134dea28 [status:201 request:0.018s]
2018-04-08 21:36:35 [elasticsearch] DEBUG: > {"praise_nums": 1, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2018/03/f4b90537c9da89d7b415ea699c9fe008.jpg"], "create_date": "2018-04-08", "tags": "IT技术,开发者", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： gamelook   对于游戏开发者而言，失去双手对于职业和生活可能是灾难性的打击。\n\n然而，业内却有一小部分人每天都要面临这样的问题，位于奥斯丁的开发者Rusty Moyher就是其中之一。五年前，他被诊断为重复性劳损（RSI），而作为一名写代码的游戏策划，这个病症几乎让他的职业生涯和对游戏的热情遭遇毁灭性打击。\n\n图片来自网络，并非开发者本人\n为了便于理解，这里我们复制了一段百度百科的介绍:重复使力伤害（repetitive strain injury，缩写RSI），或称重复性劳损、劳肌损伤、重复性动作的伤害，是指因长时间重复使用某组肌肉造成的损害。吉他、打字、在装配线工作、某些球类运动（棒球、网球、高尔夫球）都可能引致RSI，是常见的职业病，疼痛、肿胀、僵硬和易累等都是RSI的病征。不会在瞬间发生，是经年累月，不知不觉地缠上电脑使用者。如未经治疗，可能会对双手造成无可挽救的损害，一旦严重的伤害，双手将不再灵活。但到了这个时候，往往神经、肌肉和结缔组织，早已受到严重的损伤。\n对于游戏开发者来说这个问题是很严重的，因为鼠标和键盘是最有效的工作和交流方式，但对于患有RSI疾病的人而言，这两个外设几乎形同虚设，所以使用电脑都是很大的问题。\n然而，Rusty决定学习不用手的方式做游戏研发，他几乎用了一年半的时间学习与电脑互动的新方式，通过语音编程、眼部追踪和脚踏板的方式完成了游戏研发。上个月，他创作的新游戏《Dig Dog》正式登录PC、主机和手游平台。\n患病之后：如何替代键盘鼠标输入\n本质来说，Moyher是可以使用手的，但RSI意味着连续几个小时使用键盘鼠标已经是不可能的，为了找回对游戏研发的热情，他必须使用新的方式与电脑互动。最开始的时候，他尝试了很多种非传统外设，但却没有一个能够满足需求。\nMoyher说，“我尝试了各种辅助设备，但投入了大量资金之后发现这些并没有什么作用，比如立体键盘、和立体鼠标等等，我买过250美元一个的辊轮鼠标，用起来还可以，但我觉得人类的身体素质各异，所以你很难找到真正适合你用的”。\n\n他的第一次突破是发现了一个可以用语音写代码的视频，这个视频是Travis Rudd在2013年发布的，后者也是一个患有RSI症状的程序员和开发者，视频中展示了Rudd自己研发的声音识别软件Dragon NaturallySpeaking，这样就可以通过语音指令写Python代码。\n与Rudd联系之后，Moyher学习了Natlink与Dragonfly工具，这些可以让用户把定制化的关键短语作为触发器，如果你不太熟悉这个软件，那么我们进行简单的介绍，在默认情况下，它的主要工作就是把一个人的声音转化为文字，如果没有额外的工具和变成，那么使用Dragon写代码是非常消耗时间的工作。\n通过配合Natlink与Dragonfly工具，Moyher可以直接使用语音指令，但这对他来说并没有那么容易适应。“我用了很长时间适应这种工具的使用方法，实际上在项目开始的一年半之前就已经在尝试了，当时我只是在研究这些工具，尝试适合我的方式”。\n据Moyher透露，大多数的时间都用在了把输入方式简单化，这样他在工作的时候就不用担心一个失误导致所有工作都白费，“我看到过有些人使用这种语音写代码的案例，他们会设置中继设备，比如在虚拟机里运行Windows系统和Dragon软件，比如Parallels，而且他们使用这些与操作系统的外界声音进行交流”。\n这让整个过程更加复杂，所以他决定进行简化，“我是直接使用Windows，所以就没有那么多的相关环节，这样错误的几率就会降低，“在简化之后，我用起来更为得心应手”。Moyher遇到的另一个问题就是他不能直接使用Rudd研发的Python指令，因为Moyher使用的集成研发环境（IDE）是Visual Studio和Xcode。他不仅要研发新的语音指令，由于这些环境使用鼠标的频率很高，所以他还要需要新的指令输入方式。\n不用手如何做游戏研发？\n虽然Moyher尝试了大量不同的外设，但没有一个真正令他满意，直到体验了Natural Point的SmartNav 4，SmartNav的工作原理就是追踪与Moyher帽子上连接的反射器，由于灵敏度较高，他只需要很小幅度的转头就可以在屏幕上发出指令，然而他也表示，SmartNav 4也并不是100%理想。\n\n“SmartNav 4是我在网上找到的，由于我知道自己的病情，只能尽可能少的用手，多休息，所以它成为了一个很好的鼠标替代工具，至少已经足够好用。但我认为它可以变得更好，软件版本很老，而且也是一个不那么注意细节的USB设备”。\n用了这个设备之后，Moyher对它的要求更高了，“我从其他人那里得到了很多使用眼睛追踪的建议，这些事情实际上我以前就尝试过，所以决定深度挖掘这种方式”。\n当然，找到不用手操作鼠标并不是唯一的问题，他还需要解决鼠标点击输入的问题，当然，这跟眼部追踪或者语音识别比起来就简单很多，“我是用脚点击的，所以这种设备用起来较为便宜，而且使用起来也很方便”。\n游戏研发是辛苦的，但如果你面临Moyher这样的困难，那就更艰难了。《Dig Dog》最初是一个很简单的游戏，只是让一条狗在沙漠中行走，他非常喜欢平台游戏，但加入了挖掘玩法之后，这款游戏的玩法重心就发生了变化，而且项目最初的名字也不是Dig Dog。\n“游戏名字并不是参考了《Dig Dug》，最初我只是想做一款让狗狗在沙漠中行走的游戏，一开始我很想做一款iOS平台游戏，这个游戏就是这么开始的。发现了挖掘玩法之后，游戏的主要玩法就变成了挖掘，曾几何时我给项目取的名字是Dig A Dog A Bone，但最后《Dig Dog》更利于传播”。\n为了写代码，Moyher不仅要重新思考新的代码输入方式，还需要重新设计代码整体布局，在游戏研发过程中，他的输入方式也发生了很多变化。不过，游戏测试仍然需要他使用双手，“的确，这是一款平台游戏，游戏带给玩家的感觉是很重要的，你必须亲自体验和经历手柄操作，所以我有时候也避免不了”。\n新挑战：不用手玩游戏\n在编写《Dig Dog》代码的时候，Moyher克服了重重困难，他打算继续追逐游戏研发的梦想，疾病没有扼杀他对于游戏研发的热爱，他不仅继续编程，还坚持玩游戏，这样可以让游戏设计被更多人接受。\n\n“这些方法是我在使用SmartNav 4的时候发现的，我最开始只是用鼠标和脚踏板玩游戏，随后我开始尝试其他回合制游戏，并且寻找不用手进行游戏操作的方式”。\n虽然游戏速度是一方面的因素，Moyher表示一款游戏真正的难度在于，玩家需要同时处理很多东西，“我觉得回合制游戏比较适合，比如《RimWorld》用这种方法玩起来就很难，你需要点击太多的东西，鼠标的不精确让你很难操作这么多的单位”。\n之所以提到Moyher的故事，主要是为了说明，只要你对于某些事情有热情，就能找到方法克服重重困难，或许，他在采访最后所说的话可以给业内所有同行共勉：我开始这个项目的时候，就已经有了足够多的工具，所以很确定整个游戏是能够做出来的，我只需要更有耐心就可以完成，但当时我甚至不知道能否做得到，虽然写代码很难，但我认为只要你想学，所有人都能学会。\n\n\r\n        \r\n        \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "励志！海外开发者讲述用脚做游戏的研发经历", "suggest": [{"input": ["讲述", "励志", "开发者", "经历", "研发", "游戏", "开发", "海外"], "weight": 10}, {"input": ["开发者", "开发", "技术"], "weight": 7}], "fav_nums": 0, "comment_nums": 1, "url": "http://blog.jobbole.com/113722/"}
2018-04-08 21:36:35 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"f7fd5491f869ff395a8d3670134dea28","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:35 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113722/>
{'comment_nums': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a target="_blank" '
            'href="http://www.gamelook.com.cn/2018/03/322396">gamelook</a>\xa0\xa0\xa0'
            '</div><p>对于游戏开发者而言，失去双手对于职业和生活可能是灾难性的打击。</p>\n'
            '<div>\n'
            '<p>然而，业内却有一小部分人每天都要面临这样的问题，位于奥斯丁的开发者Rusty '
            'Moyher就是其中之一。五年前，他被诊断为重复性劳损（RSI），而作为一名写代码的游戏策划，这个病症几乎让他的职业生涯和对游戏的热情遭遇毁灭性打击。</p>\n'
            '<p><img '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/0f9786b2767ac6277e33aa54660bf447.jpg" '
            'alt="" width="675" height="411"></p>\n'
            '<p>图片来自网络，并非开发者本人</p>\n'
            '<p>为了便于理解，这里我们复制了一段百度百科的介绍:重复使力伤害（repetitive strain '
            'injury，缩写RSI），或称重复性劳损、劳肌损伤、重复性动作的伤害，是指因长时间重复使用某组肌肉造成的损害。吉他、打字、在装配线工作、某些球类运动（棒球、网球、高尔夫球）都可能引致RSI，是常见的职业病，疼痛、肿胀、僵硬和易累等都是RSI的病征。不会在瞬间发生，是经年累月，不知不觉地缠上电脑使用者。如未经治疗，可能会对双手造成无可挽救的损害，一旦严重的伤害，双手将不再灵活。但到了这个时候，往往神经、肌肉和结缔组织，早已受到严重的损伤。</p>\n'
            '<p>对于游戏开发者来说这个问题是很严重的，因为鼠标和键盘是最有效的工作和交流方式，但对于患有RSI疾病的人而言，这两个外设几乎形同虚设，所以使用电脑都是很大的问题。</p>\n'
            '<p>然而，Rusty决定学习不用手的方式做游戏研发，他几乎用了一年半的时间学习与电脑互动的新方式，通过语音编程、眼部追踪和脚踏板的方式完成了游戏研发。上个月，他创作的新游戏《Dig '
            'Dog》正式登录PC、主机和手游平台。</p>\n'
            '<h1>患病之后：如何替代键盘鼠标输入</h1>\n'
            '<p>本质来说，Moyher是可以使用手的，但RSI意味着连续几个小时使用键盘鼠标已经是不可能的，为了找回对游戏研发的热情，他必须使用新的方式与电脑互动。最开始的时候，他尝试了很多种非传统外设，但却没有一个能够满足需求。</p>\n'
            '<p>Moyher说，“我尝试了各种辅助设备，但投入了大量资金之后发现这些并没有什么作用，比如立体键盘、和立体鼠标等等，我买过250美元一个的辊轮鼠标，用起来还可以，但我觉得人类的身体素质各异，所以你很难找到真正适合你用的”。</p>\n'
            '<p><img '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/db5539029e3bf667ad59b7af9d39ec1e.gif" '
            'alt="" width="643" height="359"></p>\n'
            '<p>他的第一次突破是发现了一个可以用语音写代码的视频，这个视频是Travis '
            'Rudd在2013年发布的，后者也是一个患有RSI症状的程序员和开发者，视频中展示了Rudd自己研发的声音识别软件Dragon '
            'NaturallySpeaking，这样就可以通过语音指令写Python代码。</p>\n'
            '<p>与Rudd联系之后，Moyher学习了Natlink与Dragonfly工具，这些可以让用户把定制化的关键短语作为触发器，如果你不太熟悉这个软件，那么我们进行简单的介绍，在默认情况下，它的主要工作就是把一个人的声音转化为文字，如果没有额外的工具和变成，那么使用Dragon写代码是非常消耗时间的工作。</p>\n'
            '<p>通过配合Natlink与Dragonfly工具，Moyher可以直接使用语音指令，但这对他来说并没有那么容易适应。“我用了很长时间适应这种工具的使用方法，实际上在项目开始的一年半之前就已经在尝试了，当时我只是在研究这些工具，尝试适合我的方式”。</p>\n'
            '<p>据Moyher透露，大多数的时间都用在了把输入方式简单化，这样他在工作的时候就不用担心一个失误导致所有工作都白费，“我看到过有些人使用这种语音写代码的案例，他们会设置中继设备，比如在虚拟机里运行Windows系统和Dragon软件，比如Parallels，而且他们使用这些与操作系统的外界声音进行交流”。</p>\n'
            '<p>这让整个过程更加复杂，所以他决定进行简化，“我是直接使用Windows，所以就没有那么多的相关环节，这样错误的几率就会降低，“在简化之后，我用起来更为得心应手”。Moyher遇到的另一个问题就是他不能直接使用Rudd研发的Python指令，因为Moyher使用的集成研发环境（IDE）是Visual '
            'Studio和Xcode。他不仅要研发新的语音指令，由于这些环境使用鼠标的频率很高，所以他还要需要新的指令输入方式。</p>\n'
            '<h1>不用手如何做游戏研发？</h1>\n'
            '<p>虽然Moyher尝试了大量不同的外设，但没有一个真正令他满意，直到体验了Natural Point的SmartNav '
            '4，SmartNav的工作原理就是追踪与Moyher帽子上连接的反射器，由于灵敏度较高，他只需要很小幅度的转头就可以在屏幕上发出指令，然而他也表示，SmartNav '
            '4也并不是100%理想。</p>\n'
            '<p><img '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/f495b537370340dfba8da04fff31ba71.jpg" '
            'alt="" width="646" height="406"></p>\n'
            '<p>“SmartNav '
            '4是我在网上找到的，由于我知道自己的病情，只能尽可能少的用手，多休息，所以它成为了一个很好的鼠标替代工具，至少已经足够好用。但我认为它可以变得更好，软件版本很老，而且也是一个不那么注意细节的USB设备”。</p>\n'
            '<p>用了这个设备之后，Moyher对它的要求更高了，“我从其他人那里得到了很多使用眼睛追踪的建议，这些事情实际上我以前就尝试过，所以决定深度挖掘这种方式”。</p>\n'
            '<p>当然，找到不用手操作鼠标并不是唯一的问题，他还需要解决鼠标点击输入的问题，当然，这跟眼部追踪或者语音识别比起来就简单很多，“我是用脚点击的，所以这种设备用起来较为便宜，而且使用起来也很方便”。</p>\n'
            '<p>游戏研发是辛苦的，但如果你面临Moyher这样的困难，那就更艰难了。《Dig '
            'Dog》最初是一个很简单的游戏，只是让一条狗在沙漠中行走，他非常喜欢平台游戏，但加入了挖掘玩法之后，这款游戏的玩法重心就发生了变化，而且项目最初的名字也不是Dig '
            'Dog。</p>\n'
            '<p>“游戏名字并不是参考了《Dig '
            'Dug》，最初我只是想做一款让狗狗在沙漠中行走的游戏，一开始我很想做一款iOS平台游戏，这个游戏就是这么开始的。发现了挖掘玩法之后，游戏的主要玩法就变成了挖掘，曾几何时我给项目取的名字是Dig '
            'A Dog A Bone，但最后《Dig Dog》更利于传播”。</p>\n'
            '<p>为了写代码，Moyher不仅要重新思考新的代码输入方式，还需要重新设计代码整体布局，在游戏研发过程中，他的输入方式也发生了很多变化。不过，游戏测试仍然需要他使用双手，“的确，这是一款平台游戏，游戏带给玩家的感觉是很重要的，你必须亲自体验和经历手柄操作，所以我有时候也避免不了”。</p>\n'
            '<h1>新挑战：不用手玩游戏</h1>\n'
            '<p>在编写《Dig '
            'Dog》代码的时候，Moyher克服了重重困难，他打算继续追逐游戏研发的梦想，疾病没有扼杀他对于游戏研发的热爱，他不仅继续编程，还坚持玩游戏，这样可以让游戏设计被更多人接受。</p>\n'
            '<p><img '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/ff478803b38378840f749436e1e8ce80.jpg" '
            'alt="" width="792" height="449"></p>\n'
            '<p>“这些方法是我在使用SmartNav '
            '4的时候发现的，我最开始只是用鼠标和脚踏板玩游戏，随后我开始尝试其他回合制游戏，并且寻找不用手进行游戏操作的方式”。</p>\n'
            '<p>虽然游戏速度是一方面的因素，Moyher表示一款游戏真正的难度在于，玩家需要同时处理很多东西，“我觉得回合制游戏比较适合，比如《RimWorld》用这种方法玩起来就很难，你需要点击太多的东西，鼠标的不精确让你很难操作这么多的单位”。</p>\n'
            '<p>之所以提到Moyher的故事，主要是为了说明，只要你对于某些事情有热情，就能找到方法克服重重困难，或许，他在采访最后所说的话可以给业内所有同行共勉：我开始这个项目的时候，就已经有了足够多的工具，所以很确定整个游戏是能够做出来的，我只需要更有耐心就可以完成，但当时我甚至不知道能否做得到，虽然写代码很难，但我认为只要你想学，所有人都能学会。</p>\n'
            '</div>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113722" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113722votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113722" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 0,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2018/03/f4b90537c9da89d7b415ea699c9fe008.jpg'],
 'praise_nums': 1,
 'tags': 'IT技术,开发者',
 'title': '励志！海外开发者讲述用脚做游戏的研发经历',
 'url': 'http://blog.jobbole.com/113722/',
 'url_object_id': 'f7fd5491f869ff395a8d3670134dea28'}
2018-04-08 21:36:42 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113728/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:42 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:42 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 732
2018-04-08 21:36:42 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:42 [elasticsearch] DEBUG: > 开源作者遭受小白的 9 种伤害
2018-04-08 21:36:42 [elasticsearch] DEBUG: < {"tokens":[{"token":"开源","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"作者","start_offset":2,"end_offset":4,"type":"CN_WORD","position":1},{"token":"遭受","start_offset":4,"end_offset":6,"type":"CN_WORD","position":2},{"token":"遭","start_offset":4,"end_offset":5,"type":"CN_WORD","position":3},{"token":"受","start_offset":5,"end_offset":6,"type":"CN_CHAR","position":4},{"token":"小白","start_offset":6,"end_offset":8,"type":"CN_WORD","position":5},{"token":"9","start_offset":10,"end_offset":11,"type":"ARABIC","position":6},{"token":"种","start_offset":12,"end_offset":13,"type":"CN_CHAR","position":7},{"token":"伤害","start_offset":13,"end_offset":15,"type":"CN_WORD","position":8}]}
2018-04-08 21:36:42 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:42 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 174
2018-04-08 21:36:42 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:42 [elasticsearch] DEBUG: > 业界,,开源
2018-04-08 21:36:42 [elasticsearch] DEBUG: < {"tokens":[{"token":"业界","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"开源","start_offset":4,"end_offset":6,"type":"CN_WORD","position":1}]}
2018-04-08 21:36:42 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:42 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/aa94da9060b646e6772ebf4ad4c5ffe7 HTTP/1.1" 201 174
2018-04-08 21:36:42 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/aa94da9060b646e6772ebf4ad4c5ffe7 [status:201 request:0.021s]
2018-04-08 21:36:42 [elasticsearch] DEBUG: > {"praise_nums": 2, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2017/09/f1a3d556b79a7fae23ad3ecc6f972164.jpg"], "create_date": "2018-04-08", "tags": "业界,,开源", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： 闲大赋   \n我是Beetl和BeetlSQL开源的作者，这俩类技术实现难度较大，前者是属于语言实现类开源，后者则是全功能ORM实现。但是这俩个开源使用门槛又低，能遇到各种各样的小白用户。我帮助小白解决了非常多技术问题，但也遭遇过小白给予的困扰。我总结了一下9种小白对开源作者造成的有意无意的伤害，并且按照严重程度分为3个级别\n一级伤害，普通伤害\n聊天式提问\n这种行为的小白从来没有察觉到提问是一门学科，没有研究如何提问，也没有观摩过别人的提问为何能得到专家的仔细回答。他总觉得，专家就在身边，专家有足够的时间帮助自己。他通常提问方式是\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n小白&gt;你好，在吗？\r\n小白&gt;（10分钟后）大神，有空吗？我有一个问题想问问\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123\r\n\t\t\t\t\r\n\t\t\t\t\t\t小白&gt;你好，在吗？小白&gt;（10分钟后）大神，有空吗？我有一个问题想问问 \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这类小白并不知道，开源作者都很忙，如果他空闲了恰好看到你的提问，但你没有科学提问，他几乎不会跟你去互动接下来你希望的事情。这种无意义的叨扰开源作者，挺让人心烦的。\n从不阅读官方文档\n这种行为小白是最为常见的小白，遇到问题都是以Baidu为工具来解决。小白需要清楚几点关于搜索引擎不能做到的地方\n\n对新技术，小微技术的查询滞后\n对流行技术，有会让人陷入信息汪洋大海中\n\n靠搜索引擎来解决问题的人，都会技术积累不牢固，较好的办法是以官网手册为中心，结合官网论坛，或者oschina这样专门的技术社区，结合源代码和搜索引擎来找到解决办法。对于小白来说，大部分问题都能从官网文档中找到答案。但小白却没有时间去研究官官网文档。以我经验，越是厉害的人越对官网文档重视，越要花时间去通读官网手册，官网的其他技术资料。 越是小白呢，因为忙就不详细了解官网文档，结果知识不牢固，会导致后面越来越忙（因为会一直解决跟本不是问题的问题），陷入恶心循环\n我在我的SpringBoot-Plus开源中，安装说明有14行，有5行且标准了重点，都提到要用JDK8和打开Parameter参数，并详细说明了如果系统启动时报报错，应该就是paramter参数没有打开（我同时也链接了如何打开JDK8 paramter参数的文章),结果还是有10几位小白告诉我系统起不来，并附上了我在安装说明里提到过的相同错误。\n这类小白老是问一下显而易见的问题，对开源作者和其他初级用户造成了困惑\n要这要那，不经过思考和探索\n这类小白对开源作者造成了常规性的伤害最多。有时候我都怀疑他们并不是不会，而是懒，以为开源作者就是他身边的老师，或者身边的同事 ，比如他们经常提一些明显能自己解决的问题，比如\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n小白&gt;BeetlSQL如何翻页（实际上官网文档有专门一章讲翻页）\r\n小白&gt;Beetl的Maven坐标是什么（同样官网文档肯定有哇）\r\n小白&gt;SpringBoot-Plus 数据库安装脚本有吗（如果没有，还能叫开源吗，就在doc目录下）\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234\r\n\t\t\t\t\r\n\t\t\t\t\t\t小白&gt;BeetlSQL如何翻页（实际上官网文档有专门一章讲翻页）小白&gt;Beetl的Maven坐标是什么（同样官网文档肯定有哇）小白&gt;SpringBoot-Plus 数据库安装脚本有吗（如果没有，还能叫开源吗，就在doc目录下） \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这类小白的问题，如果你真有空回答，还并不好回答，这类小白的问题通常都需要大篇幅的解答其疑问，因为问的实在太基础了\n二级伤害，常规伤害\n情绪宣泄类型小白\n这类小白有一定技术能力，但靠自己没有解决问题，因此在和开源作者交流过程中过于注重自己的情感体验了，比如\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n小白&gt;这个问题我花了周末俩天都没解决，难道Beetl真的很不好用吗？（作为开源作者的我，真想一棍子敲打上去，你是不是来解决问题的？）\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\t小白&gt;这个问题我花了周末俩天都没解决，难道Beetl真的很不好用吗？（作为开源作者的我，真想一棍子敲打上去，你是不是来解决问题的？） \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n还比如经常有小白辛苦工作到晚上11点，然后qq群提问\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n小白&gt;大家好，问个问题,很着急解决......\r\n\r\n小白&gt;(半小时后)，这个群太冷漠了，都没人愿意帮助我\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234\r\n\t\t\t\t\r\n\t\t\t\t\t\t小白&gt;大家好，问个问题,很着急解决...... 小白&gt;(半小时后)，这个群太冷漠了，都没人愿意帮助我 \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n其实大家不愿帮助，可能是因为都睡觉了，或者没有精力再深夜去帮你解决问题，但你宣泄了个人情感，估计第二天也不会得到社区任何帮助\n选择性的展示问题线索\n这类小白是最让人开源作者头疼的，因为他们在寻求帮助的时候，不知道自己需要向开源作者提供什么样的信息。甚至有时候故意只将自己写正确的部分展示出来，来取得开源作者的认同。但这无法解决问题\n最常见的是只贴出自己的代码，但并没有贴出错误提示。其实错误提示更能帮助开源作者解决问题，甚至不需要贴出你的代码都行。 有些人贴出了错误提示，比如异常栈，但并没有完整的贴出异常栈，有些人贴出了代码，但并没有把IDE的代码行也跟图粘贴出来，这导致无法交流\n比如这个贴图，很难给开源作者提供详细的线索，真正的线索应该在下面未贴出的异常栈里\n\n这个贴图则没有包含代码行数，会出现交流困难 \n较好的方式是这个图\n\n这类小白会非常浪费开源作者的时间，所以我认为是二级伤害。\n我经常说一句话，你若仔细提问，我便详细回答。通常，对于社区提问附带多张图片的小白，非常受我欢迎\n向开源作者提出错误的问题\n有些小白经过思考和探索后，提出了错误的问题。比如\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n小白&gt;为什么XXX开源不兼容Java7(实际上根本不是版本的事情）\r\n小白&gt;为什么BeetlSQL不支持SQLServer(实际上是数据库配置不正确)\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123\r\n\t\t\t\t\r\n\t\t\t\t\t\t小白&gt;为什么XXX开源不兼容Java7(实际上根本不是版本的事情）小白&gt;为什么BeetlSQL不支持SQLServer(实际上是数据库配置不正确) \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n。这类提问能错误引导问题解答者。正确的姿势应该是完整的说出自己的期望和自己的过程以及最后的现象。然后可以提出自己认为的解答方向来辅助开源作者帮你解决问题\n隐藏自己的背景信息\n开源作者回答的思路很多，背景信息对开源作者回答问题有很大帮助。比如，你是个新手，那么SpringBoot-Plus没有启动，可能是你没有安装Maven或者JDK，如果你是个SpringBoot有经验者，曾经用SpringBoot在好几个项目里，那么启动失败可能真的意味这有环境不兼容，甚至是开源Bug\n小白提问的时候花几句介绍一下自己是非常有必要的，比如\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n大有前途的小白&gt;我是SpringBoot-Plus使用新手，我有3年java经验，也使用过Spring，自己也实现过AOP，现在有一个SpringBoot的自定义AOP如何实现的问题....\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t12\r\n\t\t\t\t\r\n\t\t\t\t\t\t大有前途的小白&gt;我是SpringBoot-Plus使用新手，我有3年java经验，也使用过Spring，自己也实现过AOP，现在有一个SpringBoot的自定义AOP如何实现的问题.... \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n这样的提问，比小白一上来就问如何实现AOP好很多，前者能帮助开源作者知道解答的范围从而精确解答，节省了开源作者的时间，也节省了小白时间\n三级伤害，伤透了心\n对于开源作者招待不周行为进行攻击，造谣\n开源作者都是出于兴趣在业余时间完成开源，也是抽空帮助解答问题，因此如果开源作者不回答问题，或者简洁回答，这都是开源作者的常态行为。但有些小白却认为受到了冒犯从而转为攻击开源作者。\n我就遭受过俩个人类似的攻击，他们嫌我怠慢他们，或者是言语上让他们难堪，就转而在社区攻击我，比如，用小号再次潜入群里，故意激怒我踢走他，然后他在oschina上发帖子说《beetl作者闲大赋为什么如此自负和目中无人》，并截图为证。这个帖子在oschina首页因为热门而存在了一个月时间\n还有人因为我的怠慢而在社区收集我的各种黑证据，比如有一次看到并发里的内存模型，我就在社区提问（其实当时我已经了解了），意图是想让大家讨论一下技术，结果又有人马上把这个截图发到社区，然后说《闲大赋连并发都不懂》\n\n三级++伤害\n攻击网站，黑掉开源作者的开源社区\n这个也许是特列，但我碰上了，这位小白是某大互联网公司的技术人员，在社区里不可一世，甚至开始教育其他人的品德。作为一个年轻人，非常猖狂。我后来驱逐他出社区后，没想到的是，网站立刻不能访问，一直遭受暴力破解，而且他还通过小号在社区直播破坏过程。第二天，ibeetl.com 真的不能访问，整个社区被黑，数据被清空，积累了3年的技术问答全不不复存在。\n后来在社区其他人员帮助写，用SpringBoot+Beetl+BeetlSQL重写了一个java论坛，甚至开源了这个项目，因祸得福吧。远离了恶人，结交了真朋友\n总结\n作为开源作者，提供了自己的想法和实践出来的作品，难得可贵，如果有好的小白，那么开源产品会更加完美。如果遭遇到上面我列举出来的各种小白，那就是开源作者的不幸，我觉得这个一直是常态，遇上几个特别优秀的小白，又会碰上几个对开源作者造成各种级别伤害的小白。希望小白们看了这个博客，能减少自己对开源作者造成的困扰和伤害，同时提高自己的技术水平\n\n\r\n        \r\n        \r\n        \n    \n         2 赞\n         2 收藏\n\n                     2 评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "开源作者遭受小白的 9 种伤害", "suggest": [{"input": ["开源", "小白", "伤害", "遭受", "作者"], "weight": 10}, {"input": ["开源", "业界"], "weight": 7}], "fav_nums": 2, "comment_nums": 2, "url": "http://blog.jobbole.com/113728/"}
2018-04-08 21:36:42 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"aa94da9060b646e6772ebf4ad4c5ffe7","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:42 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113728/>
{'comment_nums': 2,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a target="_blank" '
            'href="https://my.oschina.net/xiandafu/blog/1630989">闲大赋</a>\xa0\xa0\xa0'
            '</div><div>\n'
            '<p>我是Beetl和BeetlSQL开源的作者，这俩类技术实现难度较大，前者是属于语言实现类开源，后者则是全功能ORM实现。但是这俩个开源使用门槛又低，能遇到各种各样的小白用户。我帮助小白解决了非常多技术问题，但也遭遇过小白给予的困扰。我总结了一下9种小白对开源作者造成的有意无意的伤害，并且按照严重程度分为3个级别</p>\n'
            '<h1>一级伤害，普通伤害</h1>\n'
            '<h2>聊天式提问</h2>\n'
            '<p>这种行为的小白从来没有察觉到提问是一门学科，没有研究如何提问，也没有观摩过别人的提问为何能得到专家的仔细回答。他总觉得，专家就在身边，专家有足够的时间帮助自己。他通常提问方式是</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547b8c089688769" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '小白&gt;你好，在吗？\r\n'
            '小白&gt;（10分钟后）大神，有空吗？我有一个问题想问问\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547b8c089688769-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547b8c089688769-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547b8c089688769-3">3</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547b8c089688769-1">小白<span '
            'class="crayon-o">&gt;</span>你好，在吗？</div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f78547b8c089688769-2">小白<span '
            'class="crayon-o">&gt;</span>（<span '
            'class="crayon-cn">10</span>分钟后）大神，有空吗？我有一个问题想问问</div><div '
            'class="crayon-line" id="crayon-5ac9f78547b8c089688769-3">\xa0'
            '</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0007 seconds] -->\r\n'
            '<p>这类小白并不知道，开源作者都很忙，如果他空闲了恰好看到你的提问，但你没有科学提问，他几乎不会跟你去互动接下来你希望的事情。这种无意义的叨扰开源作者，挺让人心烦的。</p>\n'
            '<h2>从不阅读官方文档</h2>\n'
            '<p>这种行为小白是最为常见的小白，遇到问题都是以Baidu为工具来解决。小白需要清楚几点关于搜索引擎不能做到的地方</p>\n'
            '<ul>\n'
            '<li>对新技术，小微技术的查询滞后</li>\n'
            '<li>对流行技术，有会让人陷入信息汪洋大海中</li>\n'
            '</ul>\n'
            '<p>靠搜索引擎来解决问题的人，都会技术积累不牢固，较好的办法是以官网手册为中心，结合官网论坛，或者oschina这样专门的技术社区，结合源代码和搜索引擎来找到解决办法。对于小白来说，大部分问题都能从官网文档中找到答案。但小白却没有时间去研究官官网文档。以我经验，越是厉害的人越对官网文档重视，越要花时间去通读官网手册，官网的其他技术资料。 '
            '越是小白呢，因为忙就不详细了解官网文档，结果知识不牢固，会导致后面越来越忙（因为会一直解决跟本不是问题的问题），陷入恶心循环</p>\n'
            '<p>我在我的SpringBoot-Plus开源中，安装说明有14行，有5行且标准了重点，都提到要用JDK8和打开Parameter参数，并详细说明了如果系统启动时报报错，应该就是paramter参数没有打开（我同时也链接了如何打开JDK8 '
            'paramter参数的文章),结果还是有10几位小白告诉我系统起不来，并附上了我在安装说明里提到过的相同错误。</p>\n'
            '<p>这类小白老是问一下显而易见的问题，对开源作者和其他初级用户造成了困惑</p>\n'
            '<h2>要这要那，不经过思考和探索</h2>\n'
            '<p>这类小白对开源作者造成了常规性的伤害最多。有时候我都怀疑他们并不是不会，而是懒，以为开源作者就是他身边的老师，或者身边的同事 '
            '，比如他们经常提一些明显能自己解决的问题，比如</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547b97754424875" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '小白&gt;BeetlSQL如何翻页（实际上官网文档有专门一章讲翻页）\r\n'
            '小白&gt;Beetl的Maven坐标是什么（同样官网文档肯定有哇）\r\n'
            '小白&gt;SpringBoot-Plus 数据库安装脚本有吗（如果没有，还能叫开源吗，就在doc目录下）\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547b97754424875-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547b97754424875-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547b97754424875-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547b97754424875-4">4</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547b97754424875-1">小白<span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-i">BeetlSQL</span>如何翻页（实际上官网文档有专门一章讲翻页）</div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5ac9f78547b97754424875-2">小白<span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-i">Beetl</span>的<span '
            'class="crayon-i">Maven</span>坐标是什么（同样官网文档肯定有哇）</div><div '
            'class="crayon-line" id="crayon-5ac9f78547b97754424875-3">小白<span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-v">SpringBoot</span><span '
            'class="crayon-o">-</span><span class="crayon-i">Plus</span><span '
            'class="crayon-h"> </span>数据库安装脚本有吗（如果没有，还能叫开源吗，就在<span '
            'class="crayon-i">doc</span>目录下）</div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f78547b97754424875-4">\xa0'
            '</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0013 seconds] -->\r\n'
            '<p>这类小白的问题，如果你真有空回答，还并不好回答，这类小白的问题通常都需要大篇幅的解答其疑问，因为问的实在太基础了</p>\n'
            '<h1>二级伤害，常规伤害</h1>\n'
            '<h2>情绪宣泄类型小白</h2>\n'
            '<p>这类小白有一定技术能力，但靠自己没有解决问题，因此在和开源作者交流过程中过于注重自己的情感体验了，比如</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547b9e317203022" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '小白&gt;这个问题我花了周末俩天都没解决，难道Beetl真的很不好用吗？（作为开源作者的我，真想一棍子敲打上去，你是不是来解决问题的？）\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547b9e317203022-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547b9e317203022-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547b9e317203022-1">小白<span '
            'class="crayon-o">&gt;</span>这个问题我花了周末俩天都没解决，难道<span '
            'class="crayon-i">Beetl</span>真的很不好用吗？（作为开源作者的我，真想一棍子敲打上去，你是不是来解决问题的？）</div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5ac9f78547b9e317203022-2">\xa0</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0008 seconds] -->\r\n'
            '<p>还比如经常有小白辛苦工作到晚上11点，然后qq群提问</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547ba2278133002" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '小白&gt;大家好，问个问题,很着急解决......\r\n'
            '\r\n'
            '小白&gt;(半小时后)，这个群太冷漠了，都没人愿意帮助我\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547ba2278133002-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547ba2278133002-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547ba2278133002-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547ba2278133002-4">4</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547ba2278133002-1">小白<span '
            'class="crayon-o">&gt;</span>大家好，问个问题<span '
            'class="crayon-sy">,</span>很着急解决<span '
            'class="crayon-sy">.</span><span class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span><span class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f78547ba2278133002-2">\xa0'
            '</div><div class="crayon-line" '
            'id="crayon-5ac9f78547ba2278133002-3">小白<span '
            'class="crayon-o">&gt;</span><span '
            'class="crayon-sy">(</span>半小时后<span '
            'class="crayon-sy">)</span>，这个群太冷漠了，都没人愿意帮助我</div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5ac9f78547ba2278133002-4">\xa0</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0008 seconds] -->\r\n'
            '<p>其实大家不愿帮助，可能是因为都睡觉了，或者没有精力再深夜去帮你解决问题，但你宣泄了个人情感，估计第二天也不会得到社区任何帮助</p>\n'
            '<h2>选择性的展示问题线索</h2>\n'
            '<p>这类小白是最让人开源作者头疼的，因为他们在寻求帮助的时候，不知道自己需要向开源作者提供什么样的信息。甚至有时候故意只将自己写正确的部分展示出来，来取得开源作者的认同。但这无法解决问题</p>\n'
            '<p>最常见的是只贴出自己的代码，但并没有贴出错误提示。其实错误提示更能帮助开源作者解决问题，甚至不需要贴出你的代码都行。 '
            '有些人贴出了错误提示，比如异常栈，但并没有完整的贴出异常栈，有些人贴出了代码，但并没有把IDE的代码行也跟图粘贴出来，这导致无法交流</p>\n'
            '<p>比如这个贴图，很难给开源作者提供详细的线索，真正的线索应该在下面未贴出的异常栈里</p>\n'
            '<p><img title="在这里输入图片标题" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/44fecd417e8fb41407739e36f8842fd8.png" '
            'alt="输入图片说明"></p>\n'
            '<p>这个贴图则没有包含代码行数，会出现交流困难 <img title="在这里输入图片标题" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/fbf597c38a270d90e2370b006ee08304.png" '
            'alt="输入图片说明"></p>\n'
            '<p>较好的方式是这个图</p>\n'
            '<p><img title="在这里输入图片标题" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/05a9aac62b2942fcdade9d3f841d4549.png" '
            'alt="输入图片说明"></p>\n'
            '<p>这类小白会非常浪费开源作者的时间，所以我认为是二级伤害。</p>\n'
            '<p>我经常说一句话，你若仔细提问，我便详细回答。通常，对于社区提问附带多张图片的小白，非常受我欢迎</p>\n'
            '<h2>向开源作者提出错误的问题</h2>\n'
            '<p>有些小白经过思考和探索后，提出了错误的问题。比如</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547ba7594546700" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '小白&gt;为什么XXX开源不兼容Java7(实际上根本不是版本的事情）\r\n'
            '小白&gt;为什么BeetlSQL不支持SQLServer(实际上是数据库配置不正确)\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547ba7594546700-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547ba7594546700-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547ba7594546700-3">3</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547ba7594546700-1">小白<span '
            'class="crayon-o">&gt;</span>为什么<span '
            'class="crayon-i">XXX</span>开源不兼容<span '
            'class="crayon-e">Java7</span><span '
            'class="crayon-sy">(</span>实际上根本不是版本的事情）</div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5ac9f78547ba7594546700-2">小白<span '
            'class="crayon-o">&gt;</span>为什么<span '
            'class="crayon-i">BeetlSQL</span>不支持<span '
            'class="crayon-e">SQLServer</span><span '
            'class="crayon-sy">(</span>实际上是数据库配置不正确<span '
            'class="crayon-sy">)</span></div><div class="crayon-line" '
            'id="crayon-5ac9f78547ba7594546700-3">\xa0</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0346 seconds] -->\r\n'
            '<p>。这类提问能错误引导问题解答者。正确的姿势应该是完整的说出自己的期望和自己的过程以及最后的现象。然后可以提出自己认为的解答方向来辅助开源作者帮你解决问题</p>\n'
            '<h2>隐藏自己的背景信息</h2>\n'
            '<p>开源作者回答的思路很多，背景信息对开源作者回答问题有很大帮助。比如，你是个新手，那么SpringBoot-Plus没有启动，可能是你没有安装Maven或者JDK，如果你是个SpringBoot有经验者，曾经用SpringBoot在好几个项目里，那么启动失败可能真的意味这有环境不兼容，甚至是开源Bug</p>\n'
            '<p>小白提问的时候花几句介绍一下自己是非常有必要的，比如</p><!-- Crayon Syntax Highlighter '
            'v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f78547bad385666129" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '大有前途的小白&gt;我是SpringBoot-Plus使用新手，我有3年java经验，也使用过Spring，自己也实现过AOP，现在有一个SpringBoot的自定义AOP如何实现的问题....\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f78547bad385666129-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f78547bad385666129-2">2</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f78547bad385666129-1">大有前途的小白<span '
            'class="crayon-o">&gt;</span>我是<span '
            'class="crayon-v">SpringBoot</span><span '
            'class="crayon-o">-</span><span '
            'class="crayon-i">Plus</span>使用新手，我有<span '
            'class="crayon-cn">3</span>年<span '
            'class="crayon-i">java</span>经验，也使用过<span '
            'class="crayon-i">Spring</span>，自己也实现过<span '
            'class="crayon-i">AOP</span>，现在有一个<span '
            'class="crayon-i">SpringBoot</span>的自定义<span '
            'class="crayon-i">AOP</span>如何实现的问题<span '
            'class="crayon-sy">.</span><span class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f78547bad385666129-2">\xa0'
            '</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0028 seconds] -->\r\n'
            '<p>这样的提问，比小白一上来就问如何实现AOP好很多，前者能帮助开源作者知道解答的范围从而精确解答，节省了开源作者的时间，也节省了小白时间</p>\n'
            '<h1>三级伤害，伤透了心</h1>\n'
            '<h2>对于开源作者招待不周行为进行攻击，造谣</h2>\n'
            '<p>开源作者都是出于兴趣在业余时间完成开源，也是抽空帮助解答问题，因此如果开源作者不回答问题，或者简洁回答，这都是开源作者的常态行为。但有些小白却认为受到了冒犯从而转为攻击开源作者。</p>\n'
            '<p>我就遭受过俩个人类似的攻击，他们嫌我怠慢他们，或者是言语上让他们难堪，就转而在社区攻击我，比如，用小号再次潜入群里，故意激怒我踢走他，然后他在oschina上发帖子说《beetl作者闲大赋为什么如此自负和目中无人》，并截图为证。这个帖子在oschina首页因为热门而存在了一个月时间</p>\n'
            '<p>还有人因为我的怠慢而在社区收集我的各种黑证据，比如有一次看到并发里的内存模型，我就在社区提问（其实当时我已经了解了），意图是想让大家讨论一下技术，结果又有人马上把这个截图发到社区，然后说《闲大赋连并发都不懂》</p>\n'
            '<p><img title="在这里输入图片标题" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/85ed9e2d4e339bcdd6c6eb005bd0dbeb.png" '
            'alt="输入图片说明"></p>\n'
            '<h1>三级++伤害</h1>\n'
            '<h2>攻击网站，黑掉开源作者的开源社区</h2>\n'
            '<p>这个也许是特列，但我碰上了，这位小白是某大互联网公司的技术人员，在社区里不可一世，甚至开始教育其他人的品德。作为一个年轻人，非常猖狂。我后来驱逐他出社区后，没想到的是，网站立刻不能访问，一直遭受暴力破解，而且他还通过小号在社区直播破坏过程。第二天，ibeetl.com '
            '真的不能访问，整个社区被黑，数据被清空，积累了3年的技术问答全不不复存在。</p>\n'
            '<p>后来在社区其他人员帮助写，用SpringBoot+Beetl+BeetlSQL重写了一个java论坛，甚至开源了这个项目，因祸得福吧。远离了恶人，结交了真朋友</p>\n'
            '<h1>总结</h1>\n'
            '<p>作为开源作者，提供了自己的想法和实践出来的作品，难得可贵，如果有好的小白，那么开源产品会更加完美。如果遭遇到上面我列举出来的各种小白，那就是开源作者的不幸，我觉得这个一直是常态，遇上几个特别优秀的小白，又会碰上几个对开源作者造成各种级别伤害的小白。希望小白们看了这个博客，能减少自己对开源作者造成的困扰和伤害，同时提高自己的技术水平</p>\n'
            '</div>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113728" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113728votetotal">2</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113728" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 2 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i> 2 评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 2,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2017/09/f1a3d556b79a7fae23ad3ecc6f972164.jpg'],
 'praise_nums': 2,
 'tags': '业界,,开源',
 'title': '开源作者遭受小白的 9 种伤害',
 'url': 'http://blog.jobbole.com/113728/',
 'url_object_id': 'aa94da9060b646e6772ebf4ad4c5ffe7'}
2018-04-08 21:36:48 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113735/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 572
2018-04-08 21:36:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:48 [elasticsearch] DEBUG: > Linux 跟踪器之选
2018-04-08 21:36:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"linux","start_offset":0,"end_offset":5,"type":"ENGLISH","position":0},{"token":"跟踪器","start_offset":6,"end_offset":9,"type":"CN_WORD","position":1},{"token":"跟踪","start_offset":6,"end_offset":8,"type":"CN_WORD","position":2},{"token":"踪","start_offset":7,"end_offset":8,"type":"CN_WORD","position":3},{"token":"器","start_offset":8,"end_offset":9,"type":"CN_CHAR","position":4},{"token":"之","start_offset":9,"end_offset":10,"type":"CN_CHAR","position":5},{"token":"选","start_offset":10,"end_offset":11,"type":"CN_CHAR","position":6}]}
2018-04-08 21:36:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 174
2018-04-08 21:36:48 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.002s]
2018-04-08 21:36:48 [elasticsearch] DEBUG: > IT技术,Linux
2018-04-08 21:36:48 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"linux","start_offset":5,"end_offset":10,"type":"ENGLISH","position":1}]}
2018-04-08 21:36:48 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:48 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/b49b820d1a88139adbc0e923d2f824f6 HTTP/1.1" 201 174
2018-04-08 21:36:48 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/b49b820d1a88139adbc0e923d2f824f6 [status:201 request:0.014s]
2018-04-08 21:36:48 [elasticsearch] DEBUG: > {"praise_nums": 1, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2018/01/1b8322e1daff605d71fc81e724421f17.jpg"], "create_date": "2018-04-08", "tags": "IT技术,Linux", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Brendan Gregg   译文出处：Linux中国/qhwdw   Linux 跟踪很神奇！\n跟踪器tracer是一个高级的性能分析和调试工具，如果你使用过 strace(1) 或者 tcpdump(8)，你不应该被它吓到 … 你使用的就是跟踪器。系统跟踪器能让你看到很多的东西，而不仅是系统调用或者数据包，因为常见的跟踪器都可以跟踪内核或者应用程序的任何东西。\n有大量的 Linux 跟踪器可供你选择。由于它们中的每个都有一个官方的（或者非官方的）的吉祥物，我们有足够多的选择给孩子们展示。\n你喜欢使用哪一个呢？\n我从两类读者的角度来回答这个问题：大多数人和性能/内核工程师。当然，随着时间的推移，这也可能会发生变化，因此，我需要及时去更新本文内容，或许是每年一次，或者更频繁。（LCTT 译注：本文最后更新于 2015 年）\n对于大多数人\n大多数人（开发者、系统管理员、运维人员、网络可靠性工程师（SRE）…）是不需要去学习系统跟踪器的底层细节的。以下是你需要去了解和做的事情：\n1. 使用 perf_events 进行 CPU 剖析\n可以使用 perf_events 进行 CPU 剖析profiling。它可以用一个 火焰图 来形象地表示。比如：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\ngit clone --depth 1 https://github.com/brendangregg/FlameGraph\r\nperf record -F 99 -a -g -- sleep 30\r\nperf script | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl &gt; perf.svg\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t1234\r\n\t\t\t\t\r\n\t\t\t\t\t\tgit clone --depth 1 https://github.com/brendangregg/FlameGraphperf record -F 99 -a -g -- sleep 30perf script | ./FlameGraph/stackcollapse-perf.pl | ./FlameGraph/flamegraph.pl &gt; perf.svg \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n\nLinux 的 perf_events（即 perf，后者是它的命令）是官方为 Linux 用户准备的跟踪器/分析器。它位于内核源码中，并且维护的非常好（而且现在它的功能还在快速变强）。它一般是通过 linux-tools-common 这个包来添加的。\nperf 可以做的事情很多，但是，如果我只能建议你学习其中的一个功能的话，那就是 CPU 剖析。虽然从技术角度来说，这并不是事件“跟踪”，而是采样sampling。最难的部分是获得完整的栈和符号，这部分在我的 Linux Profiling at Netflix 中针对 Java 和 Node.js 讨论过。\n2. 知道它能干什么\n正如一位朋友所说的：“你不需要知道 X 光机是如何工作的，但你需要明白的是，如果你吞下了一个硬币，X 光机是你的一个选择！”你需要知道使用跟踪器能够做什么，因此，如果你在业务上确实需要它，你可以以后再去学习它，或者请会使用它的人来做。\n简单地说：几乎任何事情都可以通过跟踪来了解它。内部文件系统、TCP/IP 处理过程、设备驱动、应用程序内部情况。阅读我在 lwn.net 上的 ftrace 的文章，也可以去浏览 perf_events 页面，那里有一些跟踪（和剖析）能力的示例。\n3. 需要一个前端工具\n如果你要购买一个性能分析工具（有许多公司销售这类产品），并要求支持 Linux 跟踪。想要一个直观的“点击”界面去探查内核的内部，以及包含一个在不同堆栈位置的延迟热力图。就像我在 Monitorama 演讲 中描述的那样。\n我创建并开源了我自己的一些前端工具，虽然它是基于 CLI 的（不是图形界面的）。这样可以使其它人使用跟踪器更快更容易。比如，我的 perf-tools，跟踪新进程是这样的：\r\n\r\n\t\t\r\n\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\n# ./execsnoop\r\nTracing exec()s. Ctrl-C to end.\r\n PID PPID ARGS\r\n 22898 22004 man ls\r\n 22905 22898 preconv -e UTF-8\r\n 22908 22898 pager -s\r\n 22907 22898 nroff -mandoc -rLL=164n -rLT=164n -Tutf8\r\n[...]\r\n\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t123456789\r\n\t\t\t\t\r\n\t\t\t\t\t\t# ./execsnoopTracing exec()s. Ctrl-C to end. PID PPID ARGS 22898 22004 man ls 22905 22898 preconv -e UTF-8 22908 22898 pager -s 22907 22898 nroff -mandoc -rLL=164n -rLT=164n -Tutf8[...] \r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\r\n\r\n在 Netflix 公司，我正在开发 Vector，它是一个实例分析工具，实际上它也是一个 Linux 跟踪器的前端。\n对于性能或者内核工程师\n一般来说，我们的工作都非常难，因为大多数人或许要求我们去搞清楚如何去跟踪某个事件，以及因此需要选择使用哪个跟踪器。为完全理解一个跟踪器，你通常需要花至少一百多个小时去使用它。理解所有的 Linux 跟踪器并能在它们之间做出正确的选择是件很难的事情。（我或许是唯一接近完成这件事的人）\n在这里我建议选择如下，要么：\nA）选择一个全能的跟踪器，并以它为标准。这需要在一个测试环境中花大量的时间来搞清楚它的细微差别和安全性。我现在的建议是 SystemTap 的最新版本（例如，从 源代码 构建）。我知道有的公司选择的是 LTTng ，尽管它并不是很强大（但是它很安全），但他们也用的很好。如果在 sysdig 中添加了跟踪点或者是 kprobes，它也是另外的一个候选者。\nB）按我的 Velocity 教程中 的流程图。这意味着尽可能使用 ftrace 或者 perf_events，eBPF 已经集成到内核中了，然后用其它的跟踪器，如 SystemTap/LTTng 作为对 eBPF 的补充。我目前在 Netflix 的工作中就是这么做的。\n\n以下是我对各个跟踪器的评价：\n1. ftrace\n我爱 ftrace，它是内核黑客最好的朋友。它被构建进内核中，它能够利用跟踪点、kprobes、以及 uprobes，以提供一些功能：使用可选的过滤器和参数进行事件跟踪；事件计数和计时，内核概览；函数流步进function-flow walking。关于它的示例可以查看内核源代码树中的 ftrace.txt。它通过 /sys 来管理，是面向单一的 root 用户的（虽然你可以使用缓冲实例以让其支持多用户），它的界面有时很繁琐，但是它比较容易调校hackable，并且有个前端：ftrace 的主要创建者 Steven Rostedt 设计了一个 trace-cmd，而且我也创建了 perf-tools 集合。我最诟病的就是它不是可编程的programmable，因此，举个例子说，你不能保存和获取时间戳、计算延迟，以及将其保存为直方图。你需要转储事件到用户级以便于进行后期处理，这需要花费一些成本。它也许可以通过 eBPF 实现可编程。\n2. perf_events\nperf_events 是 Linux 用户的主要跟踪工具，它的源代码位于 Linux 内核中，一般是通过 linux-tools-common 包来添加的。它又称为 perf，后者指的是它的前端，它相当高效（动态缓存），一般用于跟踪并转储到一个文件中（perf.data），然后可以在之后进行后期处理。它可以做大部分 ftrace 能做的事情。它不能进行函数流步进，并且不太容易调校（而它的安全/错误检查做的更好一些）。但它可以做剖析（采样）、CPU 性能计数、用户级的栈转换、以及使用本地变量利用调试信息debuginfo进行行级跟踪line tracing。它也支持多个并发用户。与 ftrace 一样，它也不是内核可编程的，除非 eBPF 支持（补丁已经在计划中）。如果只学习一个跟踪器，我建议大家去学习 perf，它可以解决大量的问题，并且它也相当安全。\n3. eBPF\n扩展的伯克利包过滤器extended Berkeley Packet Filter（eBPF）是一个内核内in-kernel的虚拟机，可以在事件上运行程序，它非常高效（JIT）。它可能最终为 ftrace 和 perf_events 提供内核内编程in-kernel programming，并可以去增强其它跟踪器。它现在是由 Alexei Starovoitov 开发的，还没有实现完全的整合，但是对于一些令人印象深刻的工具，有些内核版本（比如，4.1）已经支持了：比如，块设备 I/O 的延迟热力图latency heat map。更多参考资料，请查阅 Alexei 的 BPF 演示，和它的 eBPF 示例。\n4. SystemTap\nSystemTap 是一个非常强大的跟踪器。它可以做任何事情：剖析、跟踪点、kprobes、uprobes（它就来自 SystemTap）、USDT、内核内编程等等。它将程序编译成内核模块并加载它们 —— 这是一种很难保证安全的方法。它开发是在内核代码树之外进行的，并且在过去出现过很多问题（内核崩溃或冻结）。许多并不是 SystemTap 的过错 —— 它通常是首次对内核使用某些跟踪功能，并率先遇到 bug。最新版本的 SystemTap 是非常好的（你需要从它的源代码编译），但是，许多人仍然没有从早期版本的问题阴影中走出来。如果你想去使用它，花一些时间去测试环境，然后，在 irc.freenode.net 的 #systemtap 频道与开发者进行讨论。（Netflix 有一个容错架构，我们使用了 SystemTap，但是我们或许比起你来说，更少担心它的安全性）我最诟病的事情是，它似乎假设你有办法得到内核调试信息，而我并没有这些信息。没有它我实际上可以做很多事情，但是缺少相关的文档和示例（我现在自己开始帮着做这些了）。\n5. LTTng\nLTTng 对事件收集进行了优化，性能要好于其它的跟踪器，也支持许多的事件类型，包括 USDT。它的开发是在内核代码树之外进行的。它的核心部分非常简单：通过一个很小的固定指令集写入事件到跟踪缓冲区。这样让它既安全又快速。缺点是做内核内编程不太容易。我觉得那不是个大问题，由于它优化的很好，可以充分的扩展，尽管需要后期处理。它也探索了一种不同的分析技术。很多的“黑匣子”记录了所有感兴趣的事件，以便可以在 GUI 中以后分析它。我担心该记录会错失之前没有预料的事件，我真的需要花一些时间去看看它在实践中是如何工作的。这个跟踪器上我花的时间最少（没有特别的原因）。\n6. ktap\nktap 是一个很有前途的跟踪器，它在内核中使用了一个 lua 虚拟机，不需要调试信息和在嵌入时设备上可以工作的很好。这使得它进入了人们的视野，在某个时候似乎要成为 Linux 上最好的跟踪器。然而，由于 eBPF 开始集成到了内核，而 ktap 的集成工作被推迟了，直到它能够使用 eBPF 而不是它自己的虚拟机。由于 eBPF 在几个月过去之后仍然在集成过程中，ktap 的开发者已经等待了很长的时间。我希望在今年的晚些时间它能够重启开发。\n7. dtrace4linux\ndtrace4linux 主要由一个人（Paul Fox）利用业务时间将 Sun DTrace 移植到 Linux 中的。它令人印象深刻，一些供应器provider可以工作，还不是很完美，它最多应该算是实验性的工具（不安全）。我认为对于许可证的担心，使人们对它保持谨慎：它可能永远也进入不了 Linux 内核，因为 Sun 是基于 CDDL 许可证发布的 DTrace；Paul 的方法是将它作为一个插件。我非常希望看到 Linux 上的 DTrace，并且希望这个项目能够完成，我想我加入 Netflix 时将花一些时间来帮它完成。但是，我一直在使用内置的跟踪器 ftrace 和 perf_events。\n8. OL DTrace\nOracle Linux DTrace 是将 DTrace 移植到 Linux （尤其是 Oracle Linux）的重大努力。过去这些年的许多发布版本都一直稳定的进步，开发者甚至谈到了改善 DTrace 测试套件，这显示出这个项目很有前途。许多有用的功能已经完成：系统调用、剖析、sdt、proc、sched、以及 USDT。我一直在等待着 fbt（函数边界跟踪，对内核的动态跟踪），它将成为 Linux 内核上非常强大的功能。它最终能否成功取决于能否吸引足够多的人去使用 Oracle Linux（并为支持付费）。另一个羁绊是它并非完全开源的：内核组件是开源的，但用户级代码我没有看到。\n9. sysdig\nsysdig 是一个很新的跟踪器，它可以使用类似 tcpdump 的语法来处理系统调用syscall事件，并用 lua 做后期处理。它也是令人印象深刻的，并且很高兴能看到在系统跟踪领域的创新。它的局限性是，它的系统调用只能是在当时，并且，它转储所有事件到用户级进行后期处理。你可以使用系统调用来做许多事情，虽然我希望能看到它去支持跟踪点、kprobes、以及 uprobes。我也希望看到它支持 eBPF 以查看内核内概览。sysdig 的开发者现在正在增加对容器的支持。可以关注它的进一步发展。\n深入阅读\n我自己的工作中使用到的跟踪器包括：\n\nftrace ： 我的 perf-tools 集合（查看示例目录）；我的 lwn.net 的 ftrace 跟踪器的文章； 一个 LISA14 演讲；以及帖子： 函数计数、 iosnoop、 opensnoop、 execsnoop、 TCP retransmits、 uprobes 和 USDT。\nperf_events ： 我的 perf_events 示例 页面；在 SCALE 的一个 Linux Profiling at Netflix 演讲；和帖子：CPU 采样、静态跟踪点、热力图、计数、内核行级跟踪、off-CPU 时间火焰图。\neBPF : 帖子 eBPF：一个小的进步，和一些 BPF-tools （我需要发布更多）。\nSystemTap ： 很久以前，我写了一篇 使用 SystemTap 的文章，它有点过时了。最近我发布了一些 systemtap-lwtools，展示了在没有内核调试信息的情况下，SystemTap 是如何使用的。\nLTTng ： 我使用它的时间很短，不足以发布什么文章。\nktap ： 我的 ktap 示例 页面包括一行程序和脚本，虽然它是早期的版本。\ndtrace4linux ： 在我的 系统性能 书中包含了一些示例，并且在过去我为了某些事情开发了一些小的修补，比如， timestamps。\nOL DTrace ： 因为它是对 DTrace 的直接移植，我早期 DTrace 的工作大多与之相关（链接太多了，可以去 我的主页 上搜索）。一旦它更加完美，我可以开发很多专用工具。\nsysdig ： 我贡献了 fileslower 和 subsecond offset spectrogram 的 chisel。\n其它 ： 关于 strace，我写了一些告诫文章。\n\n不好意思，没有更多的跟踪器了！ … 如果你想知道为什么 Linux 中的跟踪器不止一个，或者关于 DTrace 的内容，在我的 从 DTrace 到 Linux 的演讲中有答案，从 第 28 张幻灯片 开始。\n感谢 Deirdre Straughan 的编辑，以及跟踪小马的创建（General Zoi 是小马的创建者）。\n \n\r\n        \r\n        \r\n        \n    \n         1 赞\n         2 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "Linux 跟踪器之选", "suggest": [{"input": ["跟踪器", "跟踪", "linux"], "weight": 10}, {"input": ["技术", "linux"], "weight": 7}], "fav_nums": 2, "comment_nums": 1, "url": "http://blog.jobbole.com/113735/"}
2018-04-08 21:36:48 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"b49b820d1a88139adbc0e923d2f824f6","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:48 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113735/>
{'comment_nums': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" '
            'href="http://www.brendangregg.com/blog/2015-07-08/choosing-a-linux-tracer.html">Brendan '
            'Gregg</a>\xa0\xa0\xa0译文出处：<a target="_blank" '
            'href="https://linux.cn/article-9424-1.html">Linux中国/qhwdw</a>\xa0\xa0\xa0'
            '</div><blockquote><p>Linux 跟踪很神奇！</p></blockquote>\n'
            '<p>跟踪器tracer是一个高级的性能分析和调试工具，如果你使用过 <code>strace(1)</code> 或者 '
            '<code>tcpdump(8)</code>，你不应该被它吓到 … '
            '你使用的就是跟踪器。系统跟踪器能让你看到很多的东西，而不仅是系统调用或者数据包，因为常见的跟踪器都可以跟踪内核或者应用程序的任何东西。</p>\n'
            '<p>有大量的 Linux '
            '跟踪器可供你选择。由于它们中的每个都有一个官方的（或者非官方的）的吉祥物，我们有足够多的选择给孩子们展示。</p>\n'
            '<p>你喜欢使用哪一个呢？</p>\n'
            '<p>我从两类读者的角度来回答这个问题：大多数人和性能/内核工程师。当然，随着时间的推移，这也可能会发生变化，因此，我需要及时去更新本文内容，或许是每年一次，或者更频繁。（LCTT '
            '译注：本文最后更新于 2015 年）</p>\n'
            '<h3 id="toc_1">对于大多数人</h3>\n'
            '<p>大多数人（开发者、系统管理员、运维人员、网络可靠性工程师（SRE）…）是不需要去学习系统跟踪器的底层细节的。以下是你需要去了解和做的事情：</p>\n'
            '<h4 id="toc_2">1. 使用 perf_events 进行 CPU 剖析</h4>\n'
            '<p>可以使用 perf_events 进行 CPU 剖析profiling。它可以用一个 <a '
            'href="http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html">火焰图</a> '
            '来形象地表示。比如：</p><!-- Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f87614283923419147" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            'git clone --depth 1 https://github.com/brendangregg/FlameGraph\r\n'
            'perf record -F 99 -a -g -- sleep 30\r\n'
            'perf script | ./FlameGraph/stackcollapse-perf.pl | '
            './FlameGraph/flamegraph.pl &gt; perf.svg\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f87614283923419147-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f87614283923419147-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f87614283923419147-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f87614283923419147-4">4</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f87614283923419147-1"><span class="crayon-e">git '
            '</span><span class="crayon-r">clone</span><span class="crayon-h"> '
            '</span><span class="crayon-o">--</span><span '
            'class="crayon-i">depth</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">1</span><span class="crayon-h"> </span><span '
            'class="crayon-v">https</span><span class="crayon-o">:</span><span '
            'class="crayon-c">//github.com/brendangregg/FlameGraph</span></div><div '
            'class="crayon-line crayon-striped-line" '
            'id="crayon-5ac9f87614283923419147-2"><span class="crayon-e">perf '
            '</span><span class="crayon-v">record</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-i">F</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">99</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">a</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-v">g</span><span class="crayon-h"> </span><span '
            'class="crayon-o">--</span><span class="crayon-h"> </span><span '
            'class="crayon-i">sleep</span><span class="crayon-h"> </span><span '
            'class="crayon-cn">30</span></div><div class="crayon-line" '
            'id="crayon-5ac9f87614283923419147-3"><span class="crayon-e">perf '
            '</span><span class="crayon-v">script</span><span '
            'class="crayon-h"> </span><span class="crayon-o">|</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">.</span><span '
            'class="crayon-o">/</span><span '
            'class="crayon-v">FlameGraph</span><span '
            'class="crayon-o">/</span><span '
            'class="crayon-v">stackcollapse</span><span '
            'class="crayon-o">-</span><span class="crayon-v">perf</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">pl</span><span '
            'class="crayon-h"> </span><span class="crayon-o">|</span><span '
            'class="crayon-h"> </span><span class="crayon-sy">.</span><span '
            'class="crayon-o">/</span><span '
            'class="crayon-v">FlameGraph</span><span '
            'class="crayon-o">/</span><span '
            'class="crayon-v">flamegraph</span><span '
            'class="crayon-sy">.</span><span class="crayon-v">pl</span><span '
            'class="crayon-h"> </span><span class="crayon-o">&gt;</span><span '
            'class="crayon-h"> </span><span class="crayon-v">perf</span><span '
            'class="crayon-sy">.</span><span '
            'class="crayon-i">svg</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f87614283923419147-4">\xa0'
            '</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0419 seconds] -->\r\n'
            '<p><img class="aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/a5247adc2d78d2586e73f049d6d2347c.png" '
            'alt=""></p>\n'
            '<p>Linux 的 perf_events（即 <code>perf</code>，后者是它的命令）是官方为 Linux '
            '用户准备的跟踪器/分析器。它位于内核源码中，并且维护的非常好（而且现在它的功能还在快速变强）。它一般是通过 '
            'linux-tools-common 这个包来添加的。</p>\n'
            '<p><code>perf</code> 可以做的事情很多，但是，如果我只能建议你学习其中的一个功能的话，那就是 CPU '
            '剖析。虽然从技术角度来说，这并不是事件“跟踪”，而是采样sampling。最难的部分是获得完整的栈和符号，这部分在我的 <a '
            'href="http://www.brendangregg.com/blog/2015-02-27/linux-profiling-at-netflix.html">Linux '
            'Profiling at Netflix</a> 中针对 Java 和 Node.js 讨论过。</p>\n'
            '<h4 id="toc_3">2. 知道它能干什么</h4>\n'
            '<p>正如一位朋友所说的：“你不需要知道 X 光机是如何工作的，但你需要明白的是，如果你吞下了一个硬币，X '
            '光机是你的一个选择！”你需要知道使用跟踪器能够做什么，因此，如果你在业务上确实需要它，你可以以后再去学习它，或者请会使用它的人来做。</p>\n'
            '<p>简单地说：几乎任何事情都可以通过跟踪来了解它。内部文件系统、TCP/IP 处理过程、设备驱动、应用程序内部情况。阅读我在 '
            'lwn.net 上的 <a href="http://lwn.net/Articles/608497/">ftrace</a> '
            '的文章，也可以去浏览 <a '
            'href="http://www.brendangregg.com/perf.html">perf_events '
            '页面</a>，那里有一些跟踪（和剖析）能力的示例。</p>\n'
            '<h4 id="toc_4">3. 需要一个前端工具</h4>\n'
            '<p>如果你要购买一个性能分析工具（有许多公司销售这类产品），并要求支持 Linux '
            '跟踪。想要一个直观的“点击”界面去探查内核的内部，以及包含一个在不同堆栈位置的延迟热力图。就像我在 <a '
            'href="http://www.brendangregg.com/blog/2015-06-23/netflix-instance-analysis-requirements.html">Monitorama '
            '演讲</a> 中描述的那样。</p>\n'
            '<p>我创建并开源了我自己的一些前端工具，虽然它是基于 CLI '
            '的（不是图形界面的）。这样可以使其它人使用跟踪器更快更容易。比如，我的 <a '
            'href="http://www.brendangregg.com/blog/2015-03-17/linux-performance-analysis-perf-tools.html">perf-tools</a>，跟踪新进程是这样的：</p><!-- '
            'Crayon Syntax Highlighter v2.7.1.1 -->\r\n'
            '\r\n'
            '\t\t<div id="crayon-5ac9f8761428f374880689" class="crayon-syntax '
            'crayon-theme-github crayon-font-monaco crayon-os-pc print-yes '
            'notranslate" data-settings=" minimize scroll-always" style=" '
            'margin-top: 12px; margin-bottom: 12px; font-size: 13px '
            '!important; line-height: 15px !important;">\r\n'
            '\t\t\r\n'
            '\t\t\t<div class="crayon-toolbar" data-settings=" show" '
            'style="font-size: 13px !important;height: 19.5px !important; '
            'line-height: 19.5px !important;"><span '
            'class="crayon-title"></span>\r\n'
            '\t\t\t<div class="crayon-tools" style="font-size: 13px '
            '!important;height: 19.5px !important; line-height: 19.5px '
            '!important;"><div class="crayon-button crayon-nums-button" '
            'title="切换是否显示行编号"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-plain-button" title="纯文本显示代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-wrap-button" title="切换自动换行"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-expand-button" title="点击展开代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-copy-button" title="复制代码"><div '
            'class="crayon-button-icon"></div></div><div class="crayon-button '
            'crayon-popup-button" title="在新窗口中显示代码"><div '
            'class="crayon-button-icon"></div></div></div></div>\r\n'
            '\t\t\t<div class="crayon-info" style="min-height: 18.2px '
            '!important; line-height: 18.2px !important;"></div>\r\n'
            '\t\t\t<div class="crayon-plain-wrap"><textarea wrap="soft" '
            'class="crayon-plain print-no" data-settings="dblclick" readonly '
            'style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4; font-size: 13px !important; line-height: 15px '
            '!important;">\n'
            '# ./execsnoop\r\n'
            'Tracing exec()s. Ctrl-C to end.\r\n'
            ' PID PPID ARGS\r\n'
            ' 22898 22004 man ls\r\n'
            ' 22905 22898 preconv -e UTF-8\r\n'
            ' 22908 22898 pager -s\r\n'
            ' 22907 22898 nroff -mandoc -rLL=164n -rLT=164n -Tutf8\r\n'
            '[...]\r\n'
            '</textarea></div>\r\n'
            '\t\t\t<div class="crayon-main" style="">\r\n'
            '\t\t\t\t<table class="crayon-table">\r\n'
            '\t\t\t\t\t<tr class="crayon-row">\r\n'
            '\t\t\t\t<td class="crayon-nums " data-settings="show">\r\n'
            '\t\t\t\t\t<div class="crayon-nums-content" style="font-size: 13px '
            '!important; line-height: 15px !important;"><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f8761428f374880689-1">1</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f8761428f374880689-2">2</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f8761428f374880689-3">3</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f8761428f374880689-4">4</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f8761428f374880689-5">5</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f8761428f374880689-6">6</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f8761428f374880689-7">7</div><div '
            'class="crayon-num crayon-striped-num" '
            'data-line="crayon-5ac9f8761428f374880689-8">8</div><div '
            'class="crayon-num" '
            'data-line="crayon-5ac9f8761428f374880689-9">9</div></div>\r\n'
            '\t\t\t\t</td>\r\n'
            '\t\t\t\t\t\t<td class="crayon-code"><div class="crayon-pre" '
            'style="font-size: 13px !important; line-height: 15px !important; '
            '-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; '
            'tab-size:4;"><div class="crayon-line" '
            'id="crayon-5ac9f8761428f374880689-1"><span class="crayon-p"># '
            './execsnoop</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f8761428f374880689-2"><span '
            'class="crayon-e">Tracing </span><span '
            'class="crayon-e">exec</span><span class="crayon-sy">(</span><span '
            'class="crayon-sy">)</span><span class="crayon-v">s</span><span '
            'class="crayon-sy">.</span><span class="crayon-h"> </span><span '
            'class="crayon-v">Ctrl</span><span class="crayon-o">-</span><span '
            'class="crayon-i">C</span><span class="crayon-h"> </span><span '
            'class="crayon-st">to</span><span class="crayon-h"> </span><span '
            'class="crayon-st">end</span><span '
            'class="crayon-sy">.</span></div><div class="crayon-line" '
            'id="crayon-5ac9f8761428f374880689-3"><span class="crayon-h"> '
            '</span><span class="crayon-e">PID </span><span '
            'class="crayon-e">PPID </span><span '
            'class="crayon-i">ARGS</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f8761428f374880689-4"><span '
            'class="crayon-h"> </span><span '
            'class="crayon-cn">22898</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">22004</span><span '
            'class="crayon-h"> </span><span class="crayon-e">man </span><span '
            'class="crayon-i">ls</span></div><div class="crayon-line" '
            'id="crayon-5ac9f8761428f374880689-5"><span class="crayon-h"> '
            '</span><span class="crayon-cn">22905</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-cn">22898</span><span class="crayon-h"> '
            '</span><span class="crayon-v">preconv</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-i">e</span><span class="crayon-h"> </span><span '
            'class="crayon-v">UTF</span><span class="crayon-o">-</span><span '
            'class="crayon-cn">8</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f8761428f374880689-6"><span '
            'class="crayon-h"> </span><span '
            'class="crayon-cn">22908</span><span class="crayon-h"> '
            '</span><span class="crayon-cn">22898</span><span '
            'class="crayon-h"> </span><span class="crayon-v">pager</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-i">s</span></div><div class="crayon-line" '
            'id="crayon-5ac9f8761428f374880689-7"><span class="crayon-h"> '
            '</span><span class="crayon-cn">22907</span><span '
            'class="crayon-h"> </span><span '
            'class="crayon-cn">22898</span><span class="crayon-h"> '
            '</span><span class="crayon-v">nroff</span><span class="crayon-h"> '
            '</span><span class="crayon-o">-</span><span '
            'class="crayon-v">mandoc</span><span class="crayon-h"> '
            '</span><span class="crayon-o">-</span><span '
            'class="crayon-v">rLL</span><span class="crayon-o">=</span><span '
            'class="crayon-cn">164n</span><span class="crayon-h"> </span><span '
            'class="crayon-o">-</span><span class="crayon-v">rLT</span><span '
            'class="crayon-o">=</span><span class="crayon-cn">164n</span><span '
            'class="crayon-h"> </span><span class="crayon-o">-</span><span '
            'class="crayon-i">Tutf8</span></div><div class="crayon-line '
            'crayon-striped-line" id="crayon-5ac9f8761428f374880689-8"><span '
            'class="crayon-sy">[</span><span class="crayon-sy">.</span><span '
            'class="crayon-sy">.</span><span class="crayon-sy">.</span><span '
            'class="crayon-sy">]</span></div><div class="crayon-line" '
            'id="crayon-5ac9f8761428f374880689-9">\xa0</div></div></td>\r\n'
            '\t\t\t\t\t</tr>\r\n'
            '\t\t\t\t</table>\r\n'
            '\t\t\t</div>\r\n'
            '\t\t</div>\r\n'
            '<!-- [Format Time: 0.0419 seconds] -->\r\n'
            '<p>在 Netflix 公司，我正在开发 <a '
            'href="http://techblog.netflix.com/2015/04/introducing-vector-netflixs-on-host.html">Vector</a>，它是一个实例分析工具，实际上它也是一个 '
            'Linux 跟踪器的前端。</p>\n'
            '<h3 id="toc_5">对于性能或者内核工程师</h3>\n'
            '<p>一般来说，我们的工作都非常难，因为大多数人或许要求我们去搞清楚如何去跟踪某个事件，以及因此需要选择使用哪个跟踪器。为完全理解一个跟踪器，你通常需要花至少一百多个小时去使用它。理解所有的 '
            'Linux 跟踪器并能在它们之间做出正确的选择是件很难的事情。（我或许是唯一接近完成这件事的人）</p>\n'
            '<p>在这里我建议选择如下，要么：</p>\n'
            '<p>A）选择一个全能的跟踪器，并以它为标准。这需要在一个测试环境中花大量的时间来搞清楚它的细微差别和安全性。我现在的建议是 '
            'SystemTap 的最新版本（例如，从 <a '
            'href="https://sourceware.org/git/?p=systemtap.git;a=blob_plain;f=README;hb=HEAD">源代码</a> '
            '构建）。我知道有的公司选择的是 LTTng ，尽管它并不是很强大（但是它很安全），但他们也用的很好。如果在 '
            '<code>sysdig</code> 中添加了跟踪点或者是 kprobes，它也是另外的一个候选者。</p>\n'
            '<p>B）按我的 <a '
            'href="http://www.slideshare.net/brendangregg/velocity-2015-linux-perf-tools">Velocity '
            '教程中</a> 的流程图。这意味着尽可能使用 ftrace 或者 perf_events，eBPF '
            '已经集成到内核中了，然后用其它的跟踪器，如 SystemTap/LTTng 作为对 eBPF 的补充。我目前在 Netflix '
            '的工作中就是这么做的。</p>\n'
            '<p><img class="aligncenter" '
            'src="http://jbcdn2.b0.upaiyun.com/2018/03/e8c50ccc72d9f49c3f75c3d34f139c65.png" '
            'alt=""></p>\n'
            '<p>以下是我对各个跟踪器的评价：</p>\n'
            '<h4 id="toc_6">1. ftrace</h4>\n'
            '<p>我爱 <a '
            'href="http://lwn.net/Articles/370423/">ftrace</a>，它是内核黑客最好的朋友。它被构建进内核中，它能够利用跟踪点、kprobes、以及 '
            'uprobes，以提供一些功能：使用可选的过滤器和参数进行事件跟踪；事件计数和计时，内核概览；函数流步进function-flow '
            'walking。关于它的示例可以查看内核源代码树中的 <a '
            'href="https://www.kernel.org/doc/Documentation/trace/ftrace.txt">ftrace.txt</a>。它通过 '
            '<code>/sys</code> 来管理，是面向单一的 root '
            '用户的（虽然你可以使用缓冲实例以让其支持多用户），它的界面有时很繁琐，但是它比较容易调校hackable，并且有个前端：ftrace '
            '的主要创建者 Steven Rostedt 设计了一个 trace-cmd，而且我也创建了 perf-tools '
            '集合。我最诟病的就是它不是可编程的programmable，因此，举个例子说，你不能保存和获取时间戳、计算延迟，以及将其保存为直方图。你需要转储事件到用户级以便于进行后期处理，这需要花费一些成本。它也许可以通过 '
            'eBPF 实现可编程。</p>\n'
            '<h4 id="toc_7">2. perf_events</h4>\n'
            '<p><a '
            'href="https://perf.wiki.kernel.org/index.php/Main_Page">perf_events</a> '
            '是 Linux 用户的主要跟踪工具，它的源代码位于 Linux 内核中，一般是通过 linux-tools-common '
            '包来添加的。它又称为 '
            '<code>perf</code>，后者指的是它的前端，它相当高效（动态缓存），一般用于跟踪并转储到一个文件中（perf.data），然后可以在之后进行后期处理。它可以做大部分 '
            'ftrace '
            '能做的事情。它不能进行函数流步进，并且不太容易调校（而它的安全/错误检查做的更好一些）。但它可以做剖析（采样）、CPU '
            '性能计数、用户级的栈转换、以及使用本地变量利用调试信息debuginfo进行行级跟踪line '
            'tracing。它也支持多个并发用户。与 ftrace 一样，它也不是内核可编程的，除非 eBPF '
            '支持（补丁已经在计划中）。如果只学习一个跟踪器，我建议大家去学习 perf，它可以解决大量的问题，并且它也相当安全。</p>\n'
            '<h4 id="toc_8">3. eBPF</h4>\n'
            '<p>扩展的伯克利包过滤器extended Berkeley Packet '
            'Filter（eBPF）是一个内核内in-kernel的虚拟机，可以在事件上运行程序，它非常高效（JIT）。它可能最终为 '
            'ftrace 和 perf_events 提供内核内编程in-kernel '
            'programming，并可以去增强其它跟踪器。它现在是由 Alexei Starovoitov '
            '开发的，还没有实现完全的整合，但是对于一些令人印象深刻的工具，有些内核版本（比如，4.1）已经支持了：比如，块设备 I/O '
            '的延迟热力图latency heat map。更多参考资料，请查阅 Alexei 的 <a '
            'href="http://www.phoronix.com/scan.php?page=news_item&amp;px=BPF-Understanding-Kernel-VM">BPF '
            '演示</a>，和它的 <a '
            'href="https://github.com/torvalds/linux/tree/master/samples/bpf">eBPF '
            '示例</a>。</p>\n'
            '<h4 id="toc_9">4. SystemTap</h4>\n'
            '<p><a href="https://sourceware.org/systemtap/wiki">SystemTap</a> '
            '是一个非常强大的跟踪器。它可以做任何事情：剖析、跟踪点、kprobes、uprobes（它就来自 '
            'SystemTap）、USDT、内核内编程等等。它将程序编译成内核模块并加载它们 —— '
            '这是一种很难保证安全的方法。它开发是在内核代码树之外进行的，并且在过去出现过很多问题（内核崩溃或冻结）。许多并不是 '
            'SystemTap 的过错 —— 它通常是首次对内核使用某些跟踪功能，并率先遇到 bug。最新版本的 SystemTap '
            '是非常好的（你需要从它的源代码编译），但是，许多人仍然没有从早期版本的问题阴影中走出来。如果你想去使用它，花一些时间去测试环境，然后，在 '
            'irc.freenode.net 的 #systemtap 频道与开发者进行讨论。（Netflix 有一个容错架构，我们使用了 '
            'SystemTap，但是我们或许比起你来说，更少担心它的安全性）我最诟病的事情是，它似乎假设你有办法得到内核调试信息，而我并没有这些信息。没有它我实际上可以做很多事情，但是缺少相关的文档和示例（我现在自己开始帮着做这些了）。</p>\n'
            '<h4 id="toc_10">5. LTTng</h4>\n'
            '<p><a href="http://lttng.org/">LTTng</a> '
            '对事件收集进行了优化，性能要好于其它的跟踪器，也支持许多的事件类型，包括 '
            'USDT。它的开发是在内核代码树之外进行的。它的核心部分非常简单：通过一个很小的固定指令集写入事件到跟踪缓冲区。这样让它既安全又快速。缺点是做内核内编程不太容易。我觉得那不是个大问题，由于它优化的很好，可以充分的扩展，尽管需要后期处理。它也探索了一种不同的分析技术。很多的“黑匣子”记录了所有感兴趣的事件，以便可以在 '
            'GUI '
            '中以后分析它。我担心该记录会错失之前没有预料的事件，我真的需要花一些时间去看看它在实践中是如何工作的。这个跟踪器上我花的时间最少（没有特别的原因）。</p>\n'
            '<h4 id="toc_11">6. ktap</h4>\n'
            '<p><a href="http://ktap.org/">ktap</a> 是一个很有前途的跟踪器，它在内核中使用了一个 lua '
            '虚拟机，不需要调试信息和在嵌入时设备上可以工作的很好。这使得它进入了人们的视野，在某个时候似乎要成为 Linux '
            '上最好的跟踪器。然而，由于 eBPF 开始集成到了内核，而 ktap 的集成工作被推迟了，直到它能够使用 eBPF '
            '而不是它自己的虚拟机。由于 eBPF 在几个月过去之后仍然在集成过程中，ktap '
            '的开发者已经等待了很长的时间。我希望在今年的晚些时间它能够重启开发。</p>\n'
            '<h4 id="toc_12">7. dtrace4linux</h4>\n'
            '<p><a '
            'href="https://github.com/dtrace4linux/linux">dtrace4linux</a> '
            '主要由一个人（Paul Fox）利用业务时间将 Sun DTrace 移植到 Linux '
            '中的。它令人印象深刻，一些供应器provider可以工作，还不是很完美，它最多应该算是实验性的工具（不安全）。我认为对于许可证的担心，使人们对它保持谨慎：它可能永远也进入不了 '
            'Linux 内核，因为 Sun 是基于 CDDL 许可证发布的 DTrace；Paul 的方法是将它作为一个插件。我非常希望看到 '
            'Linux 上的 DTrace，并且希望这个项目能够完成，我想我加入 Netflix '
            '时将花一些时间来帮它完成。但是，我一直在使用内置的跟踪器 ftrace 和 perf_events。</p>\n'
            '<h4 id="toc_13">8. OL DTrace</h4>\n'
            '<p><a '
            'href="http://docs.oracle.com/cd/E37670_01/E38608/html/index.html">Oracle '
            'Linux DTrace</a> 是将 DTrace 移植到 Linux （尤其是 Oracle '
            'Linux）的重大努力。过去这些年的许多发布版本都一直稳定的进步，开发者甚至谈到了改善 DTrace '
            '测试套件，这显示出这个项目很有前途。许多有用的功能已经完成：系统调用、剖析、sdt、proc、sched、以及 '
            'USDT。我一直在等待着 fbt（函数边界跟踪，对内核的动态跟踪），它将成为 Linux '
            '内核上非常强大的功能。它最终能否成功取决于能否吸引足够多的人去使用 Oracle '
            'Linux（并为支持付费）。另一个羁绊是它并非完全开源的：内核组件是开源的，但用户级代码我没有看到。</p>\n'
            '<h4 id="toc_14">9. sysdig</h4>\n'
            '<p><a href="http://www.sysdig.org/">sysdig</a> 是一个很新的跟踪器，它可以使用类似 '
            '<code>tcpdump</code> 的语法来处理系统调用syscall事件，并用 lua '
            '做后期处理。它也是令人印象深刻的，并且很高兴能看到在系统跟踪领域的创新。它的局限性是，它的系统调用只能是在当时，并且，它转储所有事件到用户级进行后期处理。你可以使用系统调用来做许多事情，虽然我希望能看到它去支持跟踪点、kprobes、以及 '
            'uprobes。我也希望看到它支持 eBPF 以查看内核内概览。sysdig '
            '的开发者现在正在增加对容器的支持。可以关注它的进一步发展。</p>\n'
            '<h3 id="toc_15">深入阅读</h3>\n'
            '<p>我自己的工作中使用到的跟踪器包括：</p>\n'
            '<ul>\n'
            '<li><strong>ftrace</strong> ： 我的 <a '
            'href="http://www.brendangregg.com/blog/2015-03-17/linux-performance-analysis-perf-tools.html">perf-tools</a> '
            '集合（查看示例目录）；我的 lwn.net 的 <a '
            'href="http://lwn.net/Articles/608497/">ftrace 跟踪器的文章</a>； 一个 <a '
            'href="http://www.brendangregg.com/blog/2015-03-17/linux-performance-analysis-perf-tools.html">LISA14</a> '
            '演讲；以及帖子： <a '
            'href="http://www.brendangregg.com/blog/2014-07-13/linux-ftrace-function-counting.html">函数计数</a>、 '
            '<a '
            'href="http://www.brendangregg.com/blog/2014-07-16/iosnoop-for-linux.html">iosnoop</a>、 '
            '<a '
            'href="http://www.brendangregg.com/blog/2014-07-25/opensnoop-for-linux.html">opensnoop</a>、 '
            '<a '
            'href="http://www.brendangregg.com/blog/2014-07-28/execsnoop-for-linux.html">execsnoop</a>、 '
            '<a '
            'href="http://www.brendangregg.com/blog/2014-09-06/linux-ftrace-tcp-retransmit-tracing.html">TCP '
            'retransmits</a>、 <a '
            'href="http://www.brendangregg.com/blog/2015-06-28/linux-ftrace-uprobe.html">uprobes</a> '
            '和 <a '
            'href="http://www.brendangregg.com/blog/2015-07-03/hacking-linux-usdt-ftrace.html">USDT</a>。</li>\n'
            '<li><strong>perf_events</strong> ： 我的 <a '
            'href="http://www.brendangregg.com/perf.html">perf_events 示例</a> '
            '页面；在 SCALE 的一个 <a '
            'href="http://www.brendangregg.com/blog/2015-02-27/linux-profiling-at-netflix.html">Linux '
            'Profiling at Netflix</a> 演讲；和帖子：<a '
            'href="http://www.brendangregg.com/blog/2014-06-22/perf-cpu-sample.html">CPU '
            '采样</a>、<a '
            'href="http://www.brendangregg.com/blog/2014-06-29/perf-static-tracepoints.html">静态跟踪点</a>、<a '
            'href="http://www.brendangregg.com/blog/2014-07-01/perf-heat-maps.html">热力图</a>、<a '
            'href="http://www.brendangregg.com/blog/2014-07-03/perf-counting.html">计数</a>、<a '
            'href="http://www.brendangregg.com/blog/2014-09-11/perf-kernel-line-tracing.html">内核行级跟踪</a>、<a '
            'href="http://www.brendangregg.com/blog/2015-02-26/linux-perf-off-cpu-flame-graph.html">off-CPU '
            '时间火焰图</a>。</li>\n'
            '<li><strong>eBPF</strong> : 帖子 <a '
            'href="http://www.brendangregg.com/blog/2015-05-15/ebpf-one-small-step.html">eBPF：一个小的进步</a>，和一些 '
            '<a href="https://github.com/brendangregg/BPF-tools">BPF-tools</a> '
            '（我需要发布更多）。</li>\n'
            '<li><strong>SystemTap</strong> ： 很久以前，我写了一篇 <a '
            'href="http://dtrace.org/blogs/brendan/2011/10/15/using-systemtap/">使用 '
            'SystemTap</a> 的文章，它有点过时了。最近我发布了一些 <a '
            'href="https://github.com/brendangregg/systemtap-lwtools">systemtap-lwtools</a>，展示了在没有内核调试信息的情况下，SystemTap '
            '是如何使用的。</li>\n'
            '<li><strong>LTTng</strong> ： 我使用它的时间很短，不足以发布什么文章。</li>\n'
            '<li><strong>ktap</strong> ： 我的 <a '
            'href="http://www.brendangregg.com/ktap.html">ktap 示例</a> '
            '页面包括一行程序和脚本，虽然它是早期的版本。</li>\n'
            '<li><strong>dtrace4linux</strong> ： 在我的 <a '
            'href="http://www.brendangregg.com/sysperfbook.html">系统性能</a> '
            '书中包含了一些示例，并且在过去我为了某些事情开发了一些小的修补，比如， <a '
            'href="https://github.com/dtrace4linux/linux/issues/55">timestamps</a>。</li>\n'
            '<li><strong>OL DTrace</strong> ： 因为它是对 DTrace 的直接移植，我早期 DTrace '
            '的工作大多与之相关（链接太多了，可以去 <a '
            'href="http://www.brendangregg.com">我的主页</a> '
            '上搜索）。一旦它更加完美，我可以开发很多专用工具。</li>\n'
            '<li><strong>sysdig</strong> ： 我贡献了 <a '
            'href="https://github.com/brendangregg/sysdig/commit/d0eeac1a32d6749dab24d1dc3fffb2ef0f9d7151">fileslower</a> '
            '和 <a '
            'href="https://github.com/brendangregg/sysdig/commit/2f21604dce0b561407accb9dba869aa19c365952">subsecond '
            'offset spectrogram</a> 的 chisel。</li>\n'
            '<li><strong>其它</strong> ： 关于 <a '
            'href="http://www.brendangregg.com/blog/2014-05-11/strace-wow-much-syscall.html">strace</a>，我写了一些告诫文章。</li>\n'
            '</ul>\n'
            '<p>不好意思，没有更多的跟踪器了！ … 如果你想知道为什么 Linux 中的跟踪器不止一个，或者关于 DTrace '
            '的内容，在我的 <a '
            'href="http://www.brendangregg.com/blog/2015-02-28/from-dtrace-to-linux.html">从 '
            'DTrace 到 Linux</a> 的演讲中有答案，从 <a '
            'href="http://www.slideshare.net/brendangregg/from-dtrace-to-linux/28">第 '
            '28 张幻灯片</a> 开始。</p>\n'
            '<p>感谢 <a href="http://www.beginningwithi.com/">Deirdre '
            'Straughan</a> 的编辑，以及跟踪小马的创建（General Zoi 是小马的创建者）。</p>\n'
            '<p>\xa0</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113735" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113735votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113735" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 2 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 2,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2018/01/1b8322e1daff605d71fc81e724421f17.jpg'],
 'praise_nums': 1,
 'tags': 'IT技术,Linux',
 'title': 'Linux 跟踪器之选',
 'url': 'http://blog.jobbole.com/113735/',
 'url_object_id': 'b49b820d1a88139adbc0e923d2f824f6'}
2018-04-08 21:36:55 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113726/> (referer: http://blog.jobbole.com/all-posts/page/2/)
2018-04-08 21:36:55 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:55 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 1136
2018-04-08 21:36:55 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:55 [elasticsearch] DEBUG: > 索引表和 ES 的一点点思考
2018-04-08 21:36:55 [elasticsearch] DEBUG: < {"tokens":[{"token":"索引","start_offset":0,"end_offset":2,"type":"CN_WORD","position":0},{"token":"索","start_offset":0,"end_offset":1,"type":"CN_WORD","position":1},{"token":"引","start_offset":1,"end_offset":2,"type":"CN_CHAR","position":2},{"token":"表","start_offset":2,"end_offset":3,"type":"CN_WORD","position":3},{"token":"和","start_offset":3,"end_offset":4,"type":"CN_CHAR","position":4},{"token":"es","start_offset":5,"end_offset":7,"type":"ENGLISH","position":5},{"token":"一点点","start_offset":9,"end_offset":12,"type":"CN_WORD","position":6},{"token":"一点","start_offset":9,"end_offset":11,"type":"CN_WORD","position":7},{"token":"一","start_offset":9,"end_offset":10,"type":"TYPE_CNUM","position":8},{"token":"点点","start_offset":10,"end_offset":12,"type":"CN_WORD","position":9},{"token":"点","start_offset":10,"end_offset":11,"type":"COUNT","position":10},{"token":"点","start_offset":11,"end_offset":12,"type":"COUNT","position":11},{"token":"思考","start_offset":12,"end_offset":14,"type":"CN_WORD","position":12},{"token":"考","start_offset":13,"end_offset":14,"type":"CN_WORD","position":13}]}
2018-04-08 21:36:55 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:55 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 499
2018-04-08 21:36:55 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:36:55 [elasticsearch] DEBUG: > IT技术,搜索,数据库
2018-04-08 21:36:55 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"搜索","start_offset":5,"end_offset":7,"type":"CN_WORD","position":1},{"token":"索","start_offset":6,"end_offset":7,"type":"CN_WORD","position":2},{"token":"数据库","start_offset":8,"end_offset":11,"type":"CN_WORD","position":3},{"token":"数据","start_offset":8,"end_offset":10,"type":"CN_WORD","position":4},{"token":"库","start_offset":10,"end_offset":11,"type":"CN_WORD","position":5}]}
2018-04-08 21:36:55 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:36:55 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/7cb32f69be9fc1f56a8f1a54e4cf6b00 HTTP/1.1" 201 174
2018-04-08 21:36:55 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/7cb32f69be9fc1f56a8f1a54e4cf6b00 [status:201 request:0.016s]
2018-04-08 21:36:55 [elasticsearch] DEBUG: > {"praise_nums": 1, "front_image_url": ["http://jbcdn2.b0.upaiyun.com/2011/11/go-out-of-the-three-errors-of-the-seo.jpg"], "create_date": "2018-04-08", "tags": "IT技术,搜索,数据库", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t本文作者： 伯乐在线 - Sam哥哥 。未经作者许可，禁止转载！欢迎加入伯乐在线 专栏作者。索引表设计\n在电商项目中，物理库存系统是个极其重要的系统，订单支付后，就会开始来占用物理库存。一般情况下，库存系统都是要分库的，因为主要的操作是写操作，例如占用/释放/取消等写操作。使用分库可以降低数据库写的压力。尽管写操作为主，但是读操作也是有的。\n比如说，库存占用的时候，得先查询是否有库存，而这个查询操作并不都会带上分库因子(用于路由到具体的某个数据库)，而是一些比较宽松的查询条件，这些查询条件对应的数据可能分布在不同的数据库上。这个时候为了查询的方便，会构建一个索引表。这个索引表是存在另外的单独的一个数据库中，不会再分库了的。\n索引表的设计也分不同情况，大体可以分三种。\n1、查询字段+数据库主键\n把查询字段放到索引表，还需要把对应的数据库主键ID也放置进去。当查询请求到来时，根据查询条件找出对应的数据主键，再根据数据主键路由到对应的存有完整业务数据的数据分库上。这种方案呢。索引表占用空间小，可以支撑很久。但是要找出业务数据，还是需要路由到分库上。另外，如果要把索引表的数据存储到ES搜索引擎上的话，这种方式就不行了。因为索引表中没有外部系统要的业务数据。所以当时的库存系统没有使用这种索引表设计方案。\n2、查询字段+数据库主键+需要展示的业务字段\n这种方案呢。当请求到来的时候，直接查询索引表即可。无需根据主键路由到分库了。同时如果要结合ES的话。可以直接把索引表的数据弄到ES上即可。后续直接让ES暴露查询接口即可。目前我在唯品会参与的物理库存项目中，是使用这种方式的。但是这个方案也有个缺点。就是索引表的体积比较大，后续数据量一大的话，也是个问题。能不能优化一下呢？\n3、索引表拆分\n上面说到的第二种方案，索引表的膨胀可能很快，可以考虑将索引表拆分。比如说：索引表只是保存查询条件和主键，而需要展示给外部系统的数据，另外存储在单独的表上。比如叫index_detail表。这个表拥有索引表的主键。这样的话，当查询请求到来的时候，先从索引表查询到主键，再根据主键从index_detail表中查询出数据。当然这样做的话。ES的数据来源就变成多张表了，不过这是可以接受的。\n如何把业务数据写入到索引表\n使用MQ\n一般来说，构建索引数据是使用单独一个应用来做的。比如叫data-index域。这个域会从消息队列中读取消息，用于构建索引数据。当业务数据发生变化后，生产者发送MQ消息到队列上。\n这里的消息设计也分两种情况。一种是消息只是带有数据主键和操作类型(ADD/Update/DELETE),消费者拿到主键后再去DB获取完整的数据并插入到索引表中。另一种方案呢，是消息包含了大部分需要的字段，消费者拿到消息后直接把数据插入到索引表中。这两种消息设计，我在实际项目中都有用过。\n直接操作DB\n这种方案呢就比较粗暴，直接配置一个索引表库的数据源，当业务数据发生变化时，使用Mybatis或者JDBC把数据更新到索引表中。一般不建议这么做，一来构建索引数据的逻辑跟数据的CRUD操作融合在一起了。二来，操作其他数据库的数据，要么通过接口的方式，要么由单独的域来做。建议还是使用MQ的方式来构建索引数据。\n如何把索引表数据弄到ES上\n监听数据库表的数据变化\n像在唯品会这边，自研了一个叫VDP的组件，使用storm job去监听索引表数据的变化，一旦有变化，就把数据同步到队列中，ES直接从队列中获取数据，并存储到ES上。\n这种方案的好处是，我们无需写任何代码，数据自动可以同步到ES上。\n使用MQ\n如果公司内部没有开发VDP这样的组件，可以通过发送MQ消息的方式来将索引表的数据同步数据到ES上。\n让ES暴露CUD接口\n另外一种方案是，让ES暴露CUD接口，用于同步索引表数据。但是这样就跟ES耦合在一块了。不太推荐这么做。\n进一步的思考\n1、ES不支持Group By这样的操作，所以在构建索引表的时候，可以事先计算好Group By的一些统计数据，并存储到索引表中；\n2、一些后台应用中，如果数据库表的数量已经很大，好几个亿了，并且查询的SQL还非常变态，用数据库已经无法支持了，那么可以使用ES，查询速度快，也支持一些统计操作；\n3、使用ES输出数据时，也有个坑。经常会拿到脏数据的。例如当数据发送变化后，构建索引数据并把索引数据同步到ES上是需要时间的，但是我们后台通常有将数据下架的操作，下架的操作操作完后，再次点击查询按钮，可能还是看到脏数据，因为数据同步到ES上没那么快。现在我还没想到很好的办法来解决这个问题。欢迎网友提些建议。\n\r\n        \r\n            \n        打赏支持我写出更多好文章，谢谢！\n         打赏作者\n    \n\n    \n        打赏支持我写出更多好文章，谢谢！\n                \n                        \n            \n                    \n    \n\n    \r\n        \n    \n         1 赞\n         1 收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\t\r\n\t\r\n\t关于作者：Sam哥哥\r\n\t\r\n\t\r\n\t\t\r\n\t\t\t\r\n\t\t\r\n\t\r\n\r\n    \r\n\r\n        \r\n            互联网技术爱好者，目前就职于广州唯品会担任JAVA高级开发。个人的csdn技术博客如下：http://blog.csdn.net/linsongbin1本人伯乐在线的文章，都出自这个csdn博客        \r\n        \r\n             个人主页 ·\r\n             我的文章\r\n\r\n             ·  15        \r\n    \r\n\t\r\n\r\n\r\n\r\n\t", "title": "索引表和 ES 的一点点思考", "suggest": [{"input": ["一点点", "索引", "es", "一点", "点点", "思考"], "weight": 10}, {"input": ["数据库", "搜索", "数据", "技术"], "weight": 7}], "fav_nums": 1, "comment_nums": 1, "url": "http://blog.jobbole.com/113726/"}
2018-04-08 21:36:55 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"7cb32f69be9fc1f56a8f1a54e4cf6b00","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:36:55 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113726/>
{'comment_nums': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">本文作者： <a '
            'href="http://blog.jobbole.com">伯乐在线</a> - <a '
            'href="http://www.jobbole.com/members/Sam%E5%93%A5%E5%93%A5">Sam哥哥</a> '
            '。未经作者许可，禁止转载！<br>欢迎加入伯乐在线 <a href="http://blog.jobbole.com/99322" '
            'target="_blank">专栏作者</a>。</div><h3>索引表设计</h3>\n'
            '<p>在电商项目中，物理库存系统是个极其重要的系统，订单支付后，就会开始来占用物理库存。一般情况下，库存系统都是要分库的，因为主要的操作是写操作，例如占用/释放/取消等写操作。使用分库可以降低数据库写的压力。尽管写操作为主，但是读操作也是有的。</p>\n'
            '<p>比如说，库存占用的时候，得先查询是否有库存，而这个查询操作并不都会带上分库因子(用于路由到具体的某个数据库)，而是一些比较宽松的查询条件，这些查询条件对应的数据可能分布在不同的数据库上。这个时候为了查询的方便，会构建一个索引表。这个索引表是<strong>存在另外的单独的一个数据库中</strong>，不会再分库了的。</p>\n'
            '<p>索引表的设计也分不同情况，大体可以分三种。<br>\n'
            '1、查询字段+数据库主键</p>\n'
            '<blockquote><p>把查询字段放到索引表，还需要把对应的数据库主键ID也放置进去。当查询请求到来时，根据查询条件找出对应的数据主键，再根据数据主键路由到对应的存有完整业务数据的数据分库上。这种方案呢。索引表占用空间小，可以支撑很久。但是要找出业务数据，还是需要路由到分库上。另外，如果要把索引表的数据存储到ES搜索引擎上的话，这种方式就不行了。因为索引表中没有外部系统要的业务数据。所以当时的库存系统没有使用这种索引表设计方案。</p></blockquote>\n'
            '<p>2、查询字段+数据库主键+需要展示的业务字段</p>\n'
            '<blockquote><p>这种方案呢。当请求到来的时候，直接查询索引表即可。无需根据主键路由到分库了。同时如果要结合ES的话。可以直接把索引表的数据弄到ES上即可。后续直接让ES暴露查询接口即可。目前我在唯品会参与的物理库存项目中，是使用这种方式的。但是这个方案也有个缺点。就是索引表的体积比较大，后续数据量一大的话，也是个问题。能不能优化一下呢？</p></blockquote>\n'
            '<p>3、索引表拆分</p>\n'
            '<blockquote><p>上面说到的第二种方案，索引表的膨胀可能很快，可以考虑将索引表拆分。比如说：索引表只是保存查询条件和主键，而需要展示给外部系统的数据，另外存储在单独的表上。比如叫index_detail表。这个表拥有索引表的主键。这样的话，当查询请求到来的时候，先从索引表查询到主键，再根据主键从index_detail表中查询出数据。当然这样做的话。ES的数据来源就变成多张表了，不过这是可以接受的。</p></blockquote>\n'
            '<h3>如何把业务数据写入到索引表</h3>\n'
            '<h4 id="使用mq">使用MQ</h4>\n'
            '<p>一般来说，构建索引数据是使用单独一个应用来做的。比如叫data-index域。这个域会从消息队列中读取消息，用于构建索引数据。当业务数据发生变化后，生产者发送MQ消息到队列上。<br>\n'
            '这里的消息设计也分两种情况。一种是消息只是带有数据主键和操作类型(ADD/Update/DELETE),消费者拿到主键后再去DB获取完整的数据并插入到索引表中。另一种方案呢，是消息包含了大部分需要的字段，消费者拿到消息后直接把数据插入到索引表中。这两种消息设计，我在实际项目中都有用过。</p>\n'
            '<h4 id="直接操作db">直接操作DB</h4>\n'
            '<p>这种方案呢就比较粗暴，直接配置一个索引表库的数据源，当业务数据发生变化时，使用Mybatis或者JDBC把数据更新到索引表中。一般不建议这么做，一来构建索引数据的逻辑跟数据的CRUD操作融合在一起了。二来，操作其他数据库的数据，要么通过接口的方式，要么由单独的域来做。建议还是使用MQ的方式来构建索引数据。</p>\n'
            '<h3>如何把索引表数据弄到ES上</h3>\n'
            '<h4 id="监听数据库表的数据变化">监听数据库表的数据变化</h4>\n'
            '<p>像在唯品会这边，自研了一个叫VDP的组件，使用storm '
            'job去监听索引表数据的变化，一旦有变化，就把数据同步到队列中，ES直接从队列中获取数据，并存储到ES上。<br>\n'
            '这种方案的好处是，我们无需写任何代码，数据自动可以同步到ES上。</p>\n'
            '<h4 id="使用mq-1">使用MQ</h4>\n'
            '<p>如果公司内部没有开发VDP这样的组件，可以通过发送MQ消息的方式来将索引表的数据同步数据到ES上。</p>\n'
            '<h4 id="让es暴露cud接口">让ES暴露CUD接口</h4>\n'
            '<p>另外一种方案是，让ES暴露CUD接口，用于同步索引表数据。但是这样就跟ES耦合在一块了。不太推荐这么做。</p>\n'
            '<h3>进一步的思考</h3>\n'
            '<p>1、ES不支持Group By这样的操作，所以在构建索引表的时候，可以事先计算好Group '
            'By的一些统计数据，并存储到索引表中；<br>\n'
            '2、一些后台应用中，如果数据库表的数量已经很大，好几个亿了，并且查询的SQL还非常变态，用数据库已经无法支持了，那么可以使用ES，查询速度快，也支持一些统计操作；<br>\n'
            '3、使用ES输出数据时，也有个坑。经常会拿到脏数据的。例如当数据发送变化后，构建索引数据并把索引数据同步到ES上是需要时间的，但是我们后台通常有将数据下架的操作，下架的操作操作完后，再次点击查询按钮，可能还是看到脏数据，因为数据同步到ES上没那么快。现在我还没想到很好的办法来解决这个问题。欢迎网友提些建议。</p>\n'
            '\r\n'
            '        \r\n'
            '            <blockquote class="rewards">\n'
            '        <p><strong>打赏支持我写出更多好文章，谢谢！</strong></p>\n'
            '        <a href="#rewardbox" id="rewards-button" '
            'class="fancybox"><span class="btn-bluet-blue href-style"><i '
            'class="fa fa-jpy"></i> 打赏作者</span></a>\n'
            '    </blockquote>\n'
            '\n'
            '    <div id="rewardbox">\n'
            '        <h4>打赏支持我写出更多好文章，谢谢！</h4>\n'
            '                <p>\n'
            '                        <img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/07/54f7206fd1f1907bec78ddf32f50d66d.png">\n'
            '            \n'
            '                    </p>\n'
            '    </div>\n'
            '\n'
            '    \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113726" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113726votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113726" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i> 1 收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '<div id="author-bio">\r\n'
            '\t\r\n'
            '\t<h3 class="widget-title">\r\n'
            '\t关于作者：<a target="_blank" '
            'href="http://www.jobbole.com/members/Sam%E5%93%A5%E5%93%A5">Sam哥哥</a>\r\n'
            '\t</h3>\r\n'
            '\t<div class="alignleft">\r\n'
            '\t\t<a target="_blank" '
            'href="http://www.jobbole.com/members/Sam%E5%93%A5%E5%93%A5">\r\n'
            '\t\t\t<img '
            'src="http://jbcdn2.b0.upaiyun.com/2016/07/3660a090181b2b6ae3bd8c07d393aa36.jpg">\r\n'
            '\t\t</a>\r\n'
            '\t</div>\r\n'
            '\r\n'
            '    <div class="author-bio-info">\r\n'
            '\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            '
            '互联网技术爱好者，目前就职于广州唯品会担任JAVA高级开发。个人的csdn技术博客如下：http://blog.csdn.net/linsongbin1本人伯乐在线的文章，都出自这个csdn博客        '
            '</span>\r\n'
            '        <span class="author-bio-info-block">\r\n'
            '            <a '
            'href="http://www.jobbole.com/members/Sam%E5%93%A5%E5%93%A5" '
            'target="_blank"><i class="fa fa-user"></i> 个人主页</a> ·\r\n'
            '            <a href="http://blog.jobbole.com/author/sam-2/" '
            'target="_blank"><i class="fa fa-file-text-o"></i> 我的文章</a>\r\n'
            '\r\n'
            '             · <a title="声望值" target="_blank" '
            'href="http://www.jobbole.com/members/Sam%E5%93%A5%E5%93%A5/reputation/"><i '
            'class="fa fa-graduation-cap"></i> 15</a>        </span>\r\n'
            '    </div>\r\n'
            '\t<div class="clear"></div>\r\n'
            '</div>\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 1,
 'front_image_url': ['http://jbcdn2.b0.upaiyun.com/2011/11/go-out-of-the-three-errors-of-the-seo.jpg'],
 'praise_nums': 1,
 'tags': 'IT技术,搜索,数据库',
 'title': '索引表和 ES 的一点点思考',
 'url': 'http://blog.jobbole.com/113726/',
 'url_object_id': '7cb32f69be9fc1f56a8f1a54e4cf6b00'}
2018-04-08 21:37:01 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/all-posts/> (referer: None)
2018-04-08 21:37:01 [scrapy_redis.dupefilter] DEBUG: Filtered duplicate request <GET http://blog.jobbole.com/113826/> - no more duplicates will be shown (see DUPEFILTER_DEBUG to show all duplicates)
2018-04-08 21:37:07 [scrapy.core.engine] DEBUG: Crawled (200) <GET http://blog.jobbole.com/113828/> (referer: http://blog.jobbole.com/all-posts/)
2018-04-08 21:37:08 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:37:08 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 510
2018-04-08 21:37:08 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:37:08 [elasticsearch] DEBUG: > 计算机语言的巨变
2018-04-08 21:37:08 [elasticsearch] DEBUG: < {"tokens":[{"token":"计算机语言","start_offset":0,"end_offset":5,"type":"CN_WORD","position":0},{"token":"计算机","start_offset":0,"end_offset":3,"type":"CN_WORD","position":1},{"token":"计算","start_offset":0,"end_offset":2,"type":"CN_WORD","position":2},{"token":"算机","start_offset":1,"end_offset":3,"type":"CN_WORD","position":3},{"token":"语言","start_offset":3,"end_offset":5,"type":"CN_WORD","position":4},{"token":"巨变","start_offset":6,"end_offset":8,"type":"CN_WORD","position":5}]}
2018-04-08 21:37:08 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:37:08 [urllib3.connectionpool] DEBUG: http://localhost:9200 "GET /jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word HTTP/1.1" 200 174
2018-04-08 21:37:08 [elasticsearch] INFO: GET http://localhost:9200/jobbole/_analyze?filter=%5B%27lowercase%27%5D&analyzer=ik_max_word [status:200 request:0.003s]
2018-04-08 21:37:08 [elasticsearch] DEBUG: > IT技术,语言
2018-04-08 21:37:08 [elasticsearch] DEBUG: < {"tokens":[{"token":"技术","start_offset":2,"end_offset":4,"type":"CN_WORD","position":0},{"token":"语言","start_offset":5,"end_offset":7,"type":"CN_WORD","position":1}]}
2018-04-08 21:37:08 [urllib3.util.retry] DEBUG: Converted retries value: False -> Retry(total=False, connect=None, read=None, redirect=0, status=None)
2018-04-08 21:37:08 [urllib3.connectionpool] DEBUG: http://localhost:9200 "PUT /jobbole/article/942003ecbc643f51f276927739872b18 HTTP/1.1" 201 174
2018-04-08 21:37:08 [elasticsearch] INFO: PUT http://localhost:9200/jobbole/article/942003ecbc643f51f276927739872b18 [status:201 request:0.016s]
2018-04-08 21:37:08 [elasticsearch] DEBUG: > {"praise_nums": 1, "front_image_url": ["https://dn-linuxcn.qbox.me/data/attachment/album/201804/01/123903dpmgspk0trmlpkwl.jpg"], "create_date": "2018-04-08", "tags": "IT技术,语言", "content": "\r\n\r\n        \t\t\t\n\t\t\r\n\t\t原文出处： Eric Raymond   译文出处：Linux中国/name1e5s   我的上一篇博文《与 C 语言长别离》引来了我的老朋友，一位 C++ 专家的评论。在评论里，他推荐把 C++ 作为 C 的替代品。这是不可能发生的，如果 C++ 代替 C 是趋势的话，那么 Go 和 Rust 也就不会出现了。\n\n但是我不能只给我的读者一个光秃秃的看法（LCTT 译注：此处是双关语）。所以，在这篇文章中，我来讲述一下为什么我不再碰 C++ 的故事。这是关于计算机语言设计经济学专题文章的起始点。这篇文章会讨论为什么一些真心不好的决策会被做出来，然后进入语言的基础设计之中，以及我们该如何修正这些问题。\n在这篇文章中，我会一点一点的指出人们（当然也包括我）自从 20 世纪 80 年代以来就存在的关于未来的编程语言的预见失误。直到最近，我们才找到了证明我们错了的证据。\n我记得我第一次学习 C++ 是因为我需要使用 GNU eqn 输出 MathXML，而 eqn 是使用 C++ 写的。那个项目不错。在那之后，21 世纪初，我在韦诺之战Battle For Wesnoth那边当了多年的资深开发人生，并且与 C++ 相处甚欢。\n在那之后啊，有一天我们发现一个不小心被我们授予提交权限的人已经把游戏的 AI 核心搞崩掉了。显然，在团队中只有我是不那么害怕查看代码的。最终，我把一切都恢复正常了 —— 我折腾了整整两周。再那之后，我就发誓我再也不靠近 C++ 了。\n在那次经历过后，我发现这个语言的问题就是它在尝试使得本来就复杂的东西更加复杂，来粗陋补上因为基础概念的缺失造成的漏洞。对于裸指针这样东西，它说“别这样做”，这没有问题。对于小规模的个人项目（比如我的魔改版 eqn），遵守这些规定没有问题。\n但是对于大型项目，或者开发者水平参差不齐的多人项目（这是我经常要处理的情况）就不能这样。随着时间的推移以及代码行数的增加，有的人就会捅篓子。当别人指出有 BUG 时，因为诸如 STL 之类的东西给你增加了一层复杂度，你处理这种问题所需要的精力就比处理同等规模的 C 语言的问题就要难上很多。我在韦诺之战时，我就知道了，处理这种问题真的相当棘手。\n我给 Stell Heller（我的老朋友，C++ 的支持者）写代码时不会发生的问题在我与非 Heller 们合作时就被放大了，我和他们合作的结局可能就是我得给他们擦屁股。所以我就不用 C++ ，我觉得不值得为了其花时间。 C 是有缺陷的，但是 C 有 C++ 没有的优点 —— 如果你能在脑内模拟出硬件，那么你就能很简单的看出程序是怎么运行的。如果 C++ 真的能解决 C 的问题（也就是说，C++ 是类型安全以及内存安全的），那么失去其透明性也是值得的。但是，C++ 并没有这样。\n我们判断 C++ 做的还不够的方法之一是想象一个 C++ 已经搞得不错的世界。在那个世界里，老旧的 C 语言项目会被迁移到 C++ 上来。主流的操作系统内核会是 C++ 写就，而现存的内核实现，比如 Linux 会渐渐升级成那样。在现实世界，这些都没有发生。C++ 不仅没有打消语言设计者设想像 D、Go 以及 Rust 那样的新语言的想法，它甚至都没有取代它的前辈。不改变 C++ 的核心思想，它就没有未来，也因此，C++ 的抽象泄露leaky abstraction也不会消失。\n既然我刚刚提到了 D 语言，那我就说说为什么我不把 D 视为一个够格的 C 语言竞争者的原因吧。尽管它比 Rust 早出现了八年（和 Rust 相比是九年）Walter Bright 早在那时就有了构建那样一个语言的想法。但是在 2001 年，以 Python 和 Perl 为首的语言的出现已经确定了，专有语言能和开源语言抗衡的时代已经过去。官方 D 语言库/运行时和 Tangle 的无谓纷争也打击了其发展。它从未修正这些错误。\n然后就是 Go 语言（我本来想说“以及 Rust”。但是如前文所述，我认为 Rust 还需要几年时间才能有竞争力）。它的确是类型安全以及内存安全的（好吧，是在大多数时候是这样，但是如果你要使用接口的话就不是如此了，但是自找麻烦可不是正常人的做法）。我的一位好友，Mark Atwood，曾指出过 Go 语言是脾气暴躁的老头子因为愤怒而创造出的语言，主要是 C 语言的作者之一（Ken Thompson） 因为 C++ 的混乱臃肿造成的愤怒，我深以为然。\n我能理解 Ken 恼火的原因。这几十年来我就一直认为 C++ 搞错了需要解决的问题。C 语言的后继者有两条路可走。其一就是 C++ 那样，接受 C 的抽象泄漏、裸指针等等，以保证兼容性。然后以此为基础，构建一个最先进的语言。还有一条道路，就是从根源上解决问题 —— 修正 C语言的抽象泄露。这一来就会破环其兼容性，但是也会杜绝 C/C++ 现有的问题。\n对于第二条道路，第一次严谨的尝试就是 1995 年出现的 Java。Java 搞得不错，但是在语言解释器上构建这门语言使其不适合系统编程。这就在系统编程那留下一个巨大的洞，在 Go 以及 Rust 出现之前的 15 年里，都没有语言来填补这个空白。这也就是我的 GPSD 和 NTPsec 等软件在 2017 年仍然主要用 C 写成的原因，尽管 C 的问题也很多。\n在许多方面这都是很糟糕的情况。尽管由于缺少足够多样化的选择，我们很难认识到 C/C++ 做的不够好的地方。我们都认为在软件里面出现缺陷以及基于安全方面考虑的妥协是理所当然的，而不是想想这其中多少是真的由于语言的设计问题导致的，就像缓存区溢出漏洞一样。\n所以，为什么我们花了这么长时间才开始解决这个问题？从 C 1972 年面世到 Go 2009 年出现，这其中隔了 37 年；Rust 也是在其仅仅一年之前出现。我想根本原因还是经济。\n从最早的计算机语言开始，人们就已经知道，每种语言的设计都体现了程序员时间与机器资源的相对价值的权衡。在机器这端，就是汇编语言，以及之后的 C 语言，这些语言以牺牲开发人员的时间为代价来提高性能。 另一方面，像 Lisp 和（之后的）Python 这样的语言则试图自动处理尽可能多的细节，但这是以牺牲机器性能为代价的。\n广义地说，这两端的语言的最重要的区别就是有没有自动内存管理。这与经验一致，内存管理缺陷是以机器为中心的语言中最常见的一类缺陷，程序员需要手动管理资源。\n当相对价值断言与软件开发在某个特定领域的实际成本动因相匹配时，这个语言就是在经济上可行的。语言设计者通过设计一个适合处理现在或者不远的将来出现的情况的语言，而不是使用现有的语言来解决他们遇到的问题。\n随着时间的推移，时兴的编程语言已经渐渐从需要手动管理内存的语言变为带有自动内存管理以及垃圾回收（GC）机制的语言。这种变化对应了摩尔定律导致的计算机硬件成本的降低，使得程序员的时间与之前相比更加的宝贵。但是，除了程序员的时间以及机器效率的变化之外，至少还有两个维度与这种变化相关。\n其一就是距离底层硬件的距离。底层软件（内核与服务代码）的低效率会被成倍地扩大。因此我们可以发现，以机器为中心的语言向底层推进，而以程序员为中心的语言向着高级发展。因为大多数情况下面向用户的语言仅仅需要以人类的反应速度（0.1 秒）做出回应即可。\n另一个维度就是项目的规模。由于程序员抽象发生的问题的漏洞以及自身的疏忽，任何语言都会有可预期的每千行代码的出错率。这个比率在以机器为中心的语言上很高，而在程序员为中心的带有 GC 的语言里就大大降低。随着项目规模的增大，带有 GC 的语言作为一个防止出错率不堪入目的策略就显得愈发重要起来。\n当我们使用这三种维度来看当今的编程语言的形势 —— C 语言在底层，蓬勃发展的带有 GC 的语言在上层，我们会发现这基本上很合理。但是还有一些看似不合理的是 —— C 语言的应用不合理地广泛。\n我为什么这么说？想想那些经典的 Unix 命令行工具吧。那些小程序通常都可以使用带有完整的 POSIX 支持的脚本语言快速实现出来。重新编码那些程序将使得它们调试、维护和拓展起来都会更加简单。\n但是为什么还是使用 C （或者某些像 eqn 的项目，使用 C++）？因为有转换成本。就算是把相当小、相当简单的程序使用新的语言重写并且确认你已经忠实地保留了所有非错误行为都是相当困难的。笼统地说，在任何一个领域的应用编程或者系统编程在一种语言的权衡过时之后，仍然坚持使用它。\n这就是我和其他预测者犯的大错。 我们认为，降低机器资源成本（增加程序员时间的相对成本）本身就足以取代 C 语言（以及没有 GC 的语言）。 在这个过程中，我们有一部分或者甚至一大部分都是错误的 —— 自 20 世纪 90 年代初以来，脚本语言、Java 以及像 Node.js 这样的东西的兴起显然都是这样兴起的。\n但是，竞争系统编程语言的新浪潮并非如此。 Rust 和 Go 都明确地回应了增加项目规模 这一需求。 脚本语言是先是作为编写小程序的有效途径，并逐渐扩大规模，而 Rust 和 Go 从一开始就定位为减少大型项目中的缺陷率。 比如 Google 的搜索服务和 Facebook 的实时聊天复用。\n我认为这就是对 “为什么不再早点儿” 这个问题的回答。Rust 和 Go 实际上并不算晚，它们相对迅速地回应了一个直到最近才被发现低估的成本动因问题。\n好，说了这么多理论上的问题。按照这些理论我们能预言什么？它告诉我们在 C 之后会出现什么？\n推动 GC 语言发展的趋势还没有扭转，也不要期待其扭转。这是大势所趋。因此：最终我们将拥有具有足够低延迟的 GC 技术，可用于内核和底层固件，这些技术将以语言实现方式被提供。 这些才是真正结束 C 长期统治的语言应有的特性。\n我们能从 Go 语言开发团队的工作文件中发现端倪，他们正朝着这个方向前进 —— 可参见关于并发 GC 的学术研究 —— 从未停止研究。 如果 Go 语言自己没有选择这么做，其他的语言设计师也会这样。 但我认为他们会这么做 —— 谷歌推动他们的项目的能力是显而易见的（我们从 “Android 的发展”就能看出来）。\n在我们拥有那么理想的 GC 之前，我把能替换 C 语言的赌注押在 Go 语言上。因为其 GC 的开销是可以接受的 —— 也就是说不只是应用，甚至是大部分内核外的服务都可以使用。原因很简单： C 的出错率无药可医，转化成本还很高。\n上周我尝试将 C 语言项目转化到 Go 语言上，我发现了两件事。其一就是这活很简单， C 的语言和 Go 对应的很好。还有就是写出的代码相当简单。由于 GC 的存在以及把集合视为首要的数据结构，人们会预期代码减少，但是我意识到我写的代码比我最初期望的减少的更多，比例约为 2:1 —— 和 C 转 Python 类似。\n抱歉呐，Rust 粉们。你们在内核以及底层固件上有着美好的未来，但是你们在别的 C 领域被 Go 压的很惨。没有 GC ，再加上难以从 C 语言转化过来，还有就是 API 的标准部分还是不够完善。（我的 select(2) 又哪去了啊？）。\n对你们来说，唯一的安慰就是，C++ 粉比你们更糟糕 —— 如果这算是安慰的话。至少 Rust 还可以在 Go 顾及不到的 C 领域内大展宏图。C++ 可不能。\n\r\n        \r\n        \r\n        \n    \n         1 赞\n          收藏\n\n                      评论\n        \n        \n        \n        \n        \n            \n            \n            \n            \n            \n        \n\n    \n\n\n\n\r\n        \r\n\r\n\r\n\r\n\t", "title": "计算机语言的巨变", "suggest": [{"input": ["计算机", "巨变", "语言", "计算", "计算机语言", "算机"], "weight": 10}, {"input": ["语言", "技术"], "weight": 7}], "fav_nums": 0, "comment_nums": 1, "url": "http://blog.jobbole.com/113828/"}
2018-04-08 21:37:08 [elasticsearch] DEBUG: < {"_index":"jobbole","_type":"article","_id":"942003ecbc643f51f276927739872b18","_version":1,"result":"created","_shards":{"total":2,"successful":1,"failed":0},"created":true}
2018-04-08 21:37:08 [scrapy.core.scraper] DEBUG: Scraped from <200 http://blog.jobbole.com/113828/>
{'comment_nums': 1,
 'content': '<div class="entry">\r\n'
            '\r\n'
            '        \t\t\t<div class="textwidget"></div>\n'
            '\t\t\r\n'
            '\t\t<div class="copyright-area">原文出处： <a ref="nofollow" '
            'target="_blank" href="http://esr.ibiblio.org/?p=7724">Eric '
            'Raymond</a>\xa0\xa0\xa0译文出处：<a target="_blank" '
            'href="https://linux.cn/article-9503-1.html">Linux中国/name1e5s</a>\xa0\xa0\xa0'
            '</div><p>我的上一篇博文《<a href="http://blog.jobbole.com/113538/">与 C '
            '语言长别离</a>》引来了我的老朋友，一位 C++ 专家的评论。在评论里，他推荐把 C++ 作为 C '
            '的替代品。这是不可能发生的，如果 C++ 代替 C 是趋势的话，那么 Go 和 Rust 也就不会出现了。</p>\n'
            '<p class="article_img"><img class="aligncenter" '
            'src="https://dn-linuxcn.qbox.me/data/attachment/album/201804/01/123903dpmgspk0trmlpkwl.jpg" '
            'alt=""></p>\n'
            '<p>但是我不能只给我的读者一个光秃秃的看法（LCTT 译注：此处是双关语）。所以，在这篇文章中，我来讲述一下为什么我不再碰 '
            'C++ '
            '的故事。这是关于计算机语言设计经济学专题文章的起始点。这篇文章会讨论为什么一些真心不好的决策会被做出来，然后进入语言的基础设计之中，以及我们该如何修正这些问题。</p>\n'
            '<p>在这篇文章中，我会一点一点的指出人们（当然也包括我）自从 20 世纪 80 '
            '年代以来就存在的关于未来的编程语言的预见失误。直到最近，我们才找到了证明我们错了的证据。</p>\n'
            '<p>我记得我第一次学习 C++ 是因为我需要使用 GNU eqn 输出 MathXML，而 eqn 是使用 C++ '
            '写的。那个项目不错。在那之后，21 世纪初，我在韦诺之战Battle For Wesnoth那边当了多年的资深开发人生，并且与 '
            'C++ 相处甚欢。</p>\n'
            '<p>在那之后啊，有一天我们发现一个不小心被我们授予提交权限的人已经把游戏的 AI '
            '核心搞崩掉了。显然，在团队中只有我是不那么害怕查看代码的。最终，我把一切都恢复正常了 —— '
            '我折腾了整整两周。再那之后，我就发誓我再也不靠近 C++ 了。</p>\n'
            '<p>在那次经历过后，我发现这个语言的问题就是它在尝试使得本来就复杂的东西更加复杂，来粗陋补上因为基础概念的缺失造成的漏洞。对于裸指针这样东西，它说“别这样做”，这没有问题。对于小规模的个人项目（比如我的魔改版 '
            'eqn），遵守这些规定没有问题。</p>\n'
            '<p>但是对于大型项目，或者开发者水平参差不齐的多人项目（这是我经常要处理的情况）就不能这样。随着时间的推移以及代码行数的增加，有的人就会捅篓子。当别人指出有 '
            'BUG 时，因为诸如 STL 之类的东西给你增加了一层复杂度，你处理这种问题所需要的精力就比处理同等规模的 C '
            '语言的问题就要难上很多。我在韦诺之战时，我就知道了，处理这种问题真的相当棘手。</p>\n'
            '<p>我给 Stell Heller（我的老朋友，C++ 的支持者）写代码时不会发生的问题在我与非 Heller '
            '们合作时就被放大了，我和他们合作的结局可能就是我得给他们擦屁股。所以我就不用 C++ ，我觉得不值得为了其花时间。 C '
            '是有缺陷的，但是 C 有 C++ 没有的优点 —— 如果你能在脑内模拟出硬件，那么你就能很简单的看出程序是怎么运行的。如果 C++ '
            '真的能解决 C 的问题（也就是说，C++ 是类型安全以及内存安全的），那么失去其透明性也是值得的。但是，C++ '
            '并没有这样。</p>\n'
            '<p>我们判断 C++ 做的还不够的方法之一是想象一个 C++ 已经搞得不错的世界。在那个世界里，老旧的 C 语言项目会被迁移到 '
            'C++ 上来。主流的操作系统内核会是 C++ 写就，而现存的内核实现，比如 Linux '
            '会渐渐升级成那样。在现实世界，这些都没有发生。C++ 不仅没有打消语言设计者设想像 D、Go 以及 Rust '
            '那样的新语言的想法，它甚至都没有取代它的前辈。不改变 C++ 的核心思想，它就没有未来，也因此，C++ 的抽象泄露leaky '
            'abstraction也不会消失。</p>\n'
            '<p>既然我刚刚提到了 D 语言，那我就说说为什么我不把 D 视为一个够格的 C 语言竞争者的原因吧。尽管它比 Rust '
            '早出现了八年（和 Rust 相比是九年）Walter Bright 早在那时就有了构建那样一个语言的想法。但是在 2001 年，以 '
            'Python 和 Perl 为首的语言的出现已经确定了，专有语言能和开源语言抗衡的时代已经过去。官方 D 语言库/运行时和 '
            'Tangle 的无谓纷争也打击了其发展。它从未修正这些错误。</p>\n'
            '<p>然后就是 Go 语言（我本来想说“以及 Rust”。但是如前文所述，我认为 Rust '
            '还需要几年时间才能有竞争力）。它<em>的确是</em>类型安全以及内存安全的（好吧，是在大多数时候是这样，但是如果你要使用接口的话就不是如此了，但是自找麻烦可不是正常人的做法）。我的一位好友，Mark '
            'Atwood，曾指出过 Go 语言是脾气暴躁的老头子因为愤怒而创造出的语言，主要是\xa0<em>C '
            '语言的作者之一</em>（Ken Thompson） 因为 C++ 的混乱臃肿造成的愤怒，我深以为然。</p>\n'
            '<p>我能理解 Ken 恼火的原因。这几十年来我就一直认为 C++ 搞错了需要解决的问题。C 语言的后继者有两条路可走。其一就是 '
            'C++ 那样，接受 C '
            '的抽象泄漏、裸指针等等，以保证兼容性。然后以此为基础，构建一个最先进的语言。还有一条道路，就是从根源上解决问题 ——\xa0'
            '<em>修正</em>\xa0C语言的抽象泄露。这一来就会破环其兼容性，但是也会杜绝 C/C++ 现有的问题。</p>\n'
            '<p>对于第二条道路，第一次严谨的尝试就是 1995 年出现的 Java。Java '
            '搞得不错，但是在语言解释器上构建这门语言使其不适合系统编程。这就在系统编程那留下一个巨大的洞，在 Go 以及 Rust 出现之前的 '
            '15 年里，都没有语言来填补这个空白。这也就是我的 GPSD 和 NTPsec 等软件在 2017 年仍然主要用 C '
            '写成的原因，尽管 C 的问题也很多。</p>\n'
            '<p>在许多方面这都是很糟糕的情况。尽管由于缺少足够多样化的选择，我们很难认识到 C/C++ '
            '做的不够好的地方。我们都认为在软件里面出现缺陷以及基于安全方面考虑的妥协是理所当然的，而不是想想这其中多少是真的由于语言的设计问题导致的，就像缓存区溢出漏洞一样。</p>\n'
            '<p>所以，为什么我们花了这么长时间才开始解决这个问题？从 C 1972 年面世到 Go 2009 年出现，这其中隔了 37 '
            '年；Rust 也是在其仅仅一年之前出现。我想根本原因还是经济。</p>\n'
            '<p>从最早的计算机语言开始，人们就已经知道，每种语言的设计都体现了程序员时间与机器资源的相对价值的权衡。在机器这端，就是汇编语言，以及之后的 '
            'C 语言，这些语言以牺牲开发人员的时间为代价来提高性能。 另一方面，像 Lisp 和（之后的）Python '
            '这样的语言则试图自动处理尽可能多的细节，但这是以牺牲机器性能为代价的。</p>\n'
            '<p>广义地说，这两端的语言的最重要的区别就是有没有自动内存管理。这与经验一致，内存管理缺陷是以机器为中心的语言中最常见的一类缺陷，程序员需要手动管理资源。</p>\n'
            '<p>当相对价值断言与软件开发在某个特定领域的实际成本动因相匹配时，这个语言就是在经济上可行的。语言设计者通过设计一个适合处理现在或者不远的将来出现的情况的语言，而不是使用现有的语言来解决他们遇到的问题。</p>\n'
            '<p>随着时间的推移，时兴的编程语言已经渐渐从需要手动管理内存的语言变为带有自动内存管理以及垃圾回收（GC）机制的语言。这种变化对应了摩尔定律导致的计算机硬件成本的降低，使得程序员的时间与之前相比更加的宝贵。但是，除了程序员的时间以及机器效率的变化之外，至少还有两个维度与这种变化相关。</p>\n'
            '<p>其一就是距离底层硬件的距离。底层软件（内核与服务代码）的低效率会被成倍地扩大。因此我们可以发现，以机器为中心的语言向底层推进，而以程序员为中心的语言向着高级发展。因为大多数情况下面向用户的语言仅仅需要以人类的反应速度（0.1 '
            '秒）做出回应即可。</p>\n'
            '<p>另一个维度就是项目的规模。由于程序员抽象发生的问题的漏洞以及自身的疏忽，任何语言都会有可预期的每千行代码的出错率。这个比率在以机器为中心的语言上很高，而在程序员为中心的带有 '
            'GC 的语言里就大大降低。随着项目规模的增大，带有 GC 的语言作为一个防止出错率不堪入目的策略就显得愈发重要起来。</p>\n'
            '<p>当我们使用这三种维度来看当今的编程语言的形势 —— C 语言在底层，蓬勃发展的带有 GC '
            '的语言在上层，我们会发现这基本上很合理。但是还有一些看似不合理的是 —— C 语言的应用不合理地广泛。</p>\n'
            '<p>我为什么这么说？想想那些经典的 Unix 命令行工具吧。那些小程序通常都可以使用带有完整的 POSIX '
            '支持的脚本语言快速实现出来。重新编码那些程序将使得它们调试、维护和拓展起来都会更加简单。</p>\n'
            '<p>但是为什么还是使用 C （或者某些像 eqn 的项目，使用 '
            'C++）？因为有转换成本。就算是把相当小、相当简单的程序使用新的语言重写并且确认你已经忠实地保留了所有非错误行为都是相当困难的。笼统地说，在任何一个领域的应用编程或者系统编程在一种语言的权衡过时之后，仍然坚持使用它。</p>\n'
            '<p>这就是我和其他预测者犯的大错。 我们认为，降低机器资源成本（增加程序员时间的相对成本）本身就足以取代 C 语言（以及没有 '
            'GC 的语言）。 在这个过程中，我们有一部分或者甚至一大部分都是错误的 —— 自 20 世纪 90 年代初以来，脚本语言、Java '
            '以及像 Node.js 这样的东西的兴起显然都是这样兴起的。</p>\n'
            '<p>但是，竞争系统编程语言的新浪潮并非如此。 Rust 和 Go 都明确地回应了<em>增加项目规模</em>\xa0这一需求。 '
            '脚本语言是先是作为编写小程序的有效途径，并逐渐扩大规模，而 Rust 和 Go '
            '从一开始就定位为减少<em>大型项目</em>中的缺陷率。 比如 Google 的搜索服务和 Facebook '
            '的实时聊天复用。</p>\n'
            '<p>我认为这就是对 “为什么不再早点儿” 这个问题的回答。Rust 和 Go '
            '实际上并不算晚，它们相对迅速地回应了一个直到最近才被发现低估的成本动因问题。</p>\n'
            '<p>好，说了这么多理论上的问题。按照这些理论我们能预言什么？它告诉我们在 C 之后会出现什么？</p>\n'
            '<p>推动 GC 语言发展的趋势还没有扭转，也不要期待其扭转。这是大势所趋。因此：最终我们<em>将</em>拥有具有足够低延迟的 '
            'GC 技术，可用于内核和底层固件，这些技术将以语言实现方式被提供。 这些才是真正结束 C 长期统治的语言应有的特性。</p>\n'
            '<p>我们能从 Go 语言开发团队的工作文件中发现端倪，他们正朝着这个方向前进 —— 可参见关于并发 GC 的学术研究 —— '
            '从未停止研究。 如果 Go 语言自己没有选择这么做，其他的语言设计师也会这样。 但我认为他们会这么做 —— '
            '谷歌推动他们的项目的能力是显而易见的（我们从 “Android 的发展”就能看出来）。</p>\n'
            '<p>在我们拥有那么理想的 GC 之前，我把能替换 C 语言的赌注押在 Go 语言上。因为其 GC 的开销是可以接受的 —— '
            '也就是说不只是应用，甚至是大部分内核外的服务都可以使用。原因很简单： C 的出错率无药可医，转化成本还很高。</p>\n'
            '<p>上周我尝试将 C 语言项目转化到 Go 语言上，我发现了两件事。其一就是这活很简单， C 的语言和 Go '
            '对应的很好。还有就是写出的代码相当简单。由于 GC '
            '的存在以及把集合视为首要的数据结构，人们会预期代码减少，但是我意识到我写的代码比我最初期望的减少的更多，比例约为 2:1 —— 和 '
            'C 转 Python 类似。</p>\n'
            '<p>抱歉呐，Rust 粉们。你们在内核以及底层固件上有着美好的未来，但是你们在别的 C 领域被 Go 压的很惨。没有 GC '
            '，再加上难以从 C 语言转化过来，还有就是 API 的标准部分还是不够完善。（我的\xa0'
            '<code>select(2)</code>\xa0又哪去了啊？）。</p>\n'
            '<p>对你们来说，唯一的安慰就是，C++ 粉比你们更糟糕 —— 如果这算是安慰的话。至少 Rust 还可以在 Go 顾及不到的 C '
            '领域内大展宏图。C++ 可不能。</p>\n'
            '\r\n'
            '        \r\n'
            '        \r\n'
            '        \n'
            '    <div class="post-adds">\n'
            '        <span data-post-id="113828" class=" btn-bluet-bigger '
            'href-style vote-post-up   register-user-only "><i class="fa  '
            'fa-thumbs-o-up"></i> <h10 id="113828votetotal">1</h10> 赞</span>\n'
            '        <span data-book-type="1" data-site-id="2" '
            'data-item-id="113828" data-item-type="1" class=" btn-bluet-bigger '
            'href-style bookmark-btn  register-user-only "><i class="fa '
            'fa-bookmark-o  "></i>  收藏</span>\n'
            '\n'
            '                    <a href="#article-comment"><span '
            'class="btn-bluet-bigger href-style hide-on-480"><i class="fa '
            'fa-comments-o"></i>  评论</span></a>\n'
            '        \n'
            '        \n'
            '        \n'
            '        <!-- JiaThis Button BEGIN -->\n'
            '        <div class="jiathis_style_24x24" style="display: '
            'inline-flex; position: relative; margin: 0; clear: both;float: '
            'right;">\n'
            '            <a class="jiathis_button_tsina"></a>\n'
            '            <a class="jiathis_button_weixin"></a>\n'
            '            <a class="jiathis_button_qzone"></a>\n'
            '            <a class="jiathis_button_fb hide-on-480"></a>\n'
            '            <a href="http://www.jiathis.com/share?uid=1745061" '
            'class="jiathis jiathis_txt jiathis_separator jtico jtico_jiathis" '
            'target="_blank"></a>\n'
            '        </div>\n'
            '\n'
            '    </div>\n'
            '\n'
            '\n'
            '\n'
            '\r\n'
            '        <!-- BEGIN #author-bio -->\r\n'
            '\r\n'
            '\r\n'
            '<!-- END #author-bio -->\r\n'
            '\t</div>',
 'create_date': datetime.date(2018, 4, 8),
 'fav_nums': 0,
 'front_image_url': ['https://dn-linuxcn.qbox.me/data/attachment/album/201804/01/123903dpmgspk0trmlpkwl.jpg'],
 'praise_nums': 1,
 'tags': 'IT技术,语言',
 'title': '计算机语言的巨变',
 'url': 'http://blog.jobbole.com/113828/',
 'url_object_id': '942003ecbc643f51f276927739872b18'}
2018-04-08 21:37:08 [scrapy.core.engine] INFO: Closing spider (finished)
2018-04-08 21:37:08 [scrapy.statscollectors] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 2164,
 'downloader/request_count': 10,
 'downloader/request_method_count/GET': 10,
 'downloader/response_bytes': 218930,
 'downloader/response_count': 10,
 'downloader/response_status_count/200': 10,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2018, 4, 8, 13, 37, 8, 113451),
 'item_scraped_count': 9,
 'log_count/DEBUG': 131,
 'log_count/INFO': 34,
 'log_count/WARNING': 1,
 'memusage/max': 66519040,
 'memusage/startup': 66519040,
 'request_depth_max': 1,
 'response_received_count': 10,
 'scheduler/dequeued/redis': 10,
 'scheduler/enqueued/redis': 2,
 'start_time': datetime.datetime(2018, 4, 8, 13, 36, 10, 357696)}
2018-04-08 21:37:08 [scrapy.core.engine] INFO: Spider closed (finished)
